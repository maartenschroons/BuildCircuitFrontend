{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/admin/admin-overzicht/admin-overzicht.component.html","src/app/admin/admin-overzicht/druif-beheren/druif-beheren.component.html","src/app/admin/admin-overzicht/event-beheren/event-beheren.component.html","src/app/admin/admin-overzicht/gebruiker-beheren/gebruiker-beheren.component.html","src/app/admin/admin-overzicht/materiaal-beheren/materiaal-beheren.component.html","src/app/admin/admin-overzicht/methode-beheren/methode-beheren.component.html","src/app/admin/admin-overzicht/meting-beheren/meting-beheren.component.html","src/app/admin/admin-overzicht/vat-beheren/vat-beheren.component.html","src/app/admin/admin-overzicht/wijn-beheren/wijn-beheren.component.html","src/app/admin/admin-toevoegen/admin-toevoegen.component.html","src/app/admin/admin-toevoegen/druif-soort-toevoegen/druif-soort-toevoegen.component.html","src/app/admin/admin-toevoegen/event-toevoegen/event-toevoegen.component.html","src/app/admin/admin-toevoegen/gebruiker-toevoegen/gebruiker-toevoegen.component.html","src/app/admin/admin-toevoegen/materiaal-toevoegen/materiaal-toevoegen.component.html","src/app/admin/admin-toevoegen/methode-toevoegen/methode-toevoegen.component.html","src/app/admin/admin-toevoegen/meting-toevoegen/meting-toevoegen.component.html","src/app/admin/admin-toevoegen/vat-toevoegen/vat-toevoegen.component.html","src/app/admin/admin-toevoegen/wijntype-toevoegen/wijntype-toevoegen.component.html","src/app/alarmering/alarmering-data/alarmering-data.component.html","src/app/alarmering/alarmering-data/co/co.component.html","src/app/alarmering/alarmering-data/druk/druk.component.html","src/app/alarmering/alarmering-data/ethanol/ethanol.component.html","src/app/alarmering/alarmering-data/temperatuur/temperatuur.component.html","src/app/alarmering/alarmering-data/troebelheid/troebelheid.component.html","src/app/alarmering/alarmering-personen/alarmering-personen.component.html","src/app/app.component.html","src/app/home/home.component.html","src/app/login/login.component.html","src/app/process/add-actie/add-actie.component.html","src/app/process/add-meting/add-meting.component.html","src/app/process/afsluiten/afsluiten.component.html","src/app/process/create-process/create-process.component.html","src/app/process/process.component.html","src/app/toon-dashboard/toon-dashboard.component.html","src/app/toon-vinificaties/toon-actieve-vinificaties/toon-actieve-vinificaties.component.html","src/app/toon-vinificaties/toon-details-vinificaties/toon-details-vinificaties.component.html","src/app/toon-vinificaties/toon-non-actieve-vinificaties/toon-non-actieve-vinificaties.component.html","node_modules/tslib/tslib.es6.js","src/app/admin/admin-overzicht/admin-overzicht.component.css","src/app/admin/admin-overzicht/admin-overzicht.component.ts","src/app/admin/admin-overzicht/druif-beheren/druif-beheren.component.css","src/app/admin/admin-overzicht/druif-beheren/druif-beheren.component.ts","src/app/admin/admin-overzicht/event-beheren/event-beheren.component.css","src/app/admin/admin-overzicht/event-beheren/event-beheren.component.ts","src/app/admin/admin-overzicht/gebruiker-beheren/gebruiker-beheren.component.css","src/app/admin/admin-overzicht/gebruiker-beheren/gebruiker-beheren.component.ts","src/app/admin/admin-overzicht/materiaal-beheren/materiaal-beheren.component.css","src/app/admin/admin-overzicht/materiaal-beheren/materiaal-beheren.component.ts","src/app/admin/admin-overzicht/methode-beheren/methode-beheren.component.css","src/app/admin/admin-overzicht/methode-beheren/methode-beheren.component.ts","src/app/admin/admin-overzicht/meting-beheren/meting-beheren.component.css","src/app/admin/admin-overzicht/meting-beheren/meting-beheren.component.ts","src/app/admin/admin-overzicht/vat-beheren/vat-beheren.component.css","src/app/admin/admin-overzicht/vat-beheren/vat-beheren.component.ts","src/app/admin/admin-overzicht/wijn-beheren/wijn-beheren.component.css","src/app/admin/admin-overzicht/wijn-beheren/wijn-beheren.component.ts","src/app/admin/admin-toevoegen/admin-toevoegen.component.css","src/app/admin/admin-toevoegen/admin-toevoegen.component.ts","src/app/admin/admin-toevoegen/druif-soort-toevoegen/druif-soort-toevoegen.component.css","src/app/admin/admin-toevoegen/druif-soort-toevoegen/druif-soort-toevoegen.component.ts","src/app/admin/admin-toevoegen/event-toevoegen/event-toevoegen.component.css","src/app/admin/admin-toevoegen/event-toevoegen/event-toevoegen.component.ts","src/app/admin/admin-toevoegen/gebruiker-toevoegen/gebruiker-toevoegen.component.css","src/app/admin/admin-toevoegen/gebruiker-toevoegen/gebruiker-toevoegen.component.ts","src/app/admin/admin-toevoegen/materiaal-toevoegen/materiaal-toevoegen.component.css","src/app/admin/admin-toevoegen/materiaal-toevoegen/materiaal-toevoegen.component.ts","src/app/admin/admin-toevoegen/methode-toevoegen/methode-toevoegen.component.css","src/app/admin/admin-toevoegen/methode-toevoegen/methode-toevoegen.component.ts","src/app/admin/admin-toevoegen/meting-toevoegen/meting-toevoegen.component.css","src/app/admin/admin-toevoegen/meting-toevoegen/meting-toevoegen.component.ts","src/app/admin/admin-toevoegen/vat-toevoegen/vat-toevoegen.component.css","src/app/admin/admin-toevoegen/vat-toevoegen/vat-toevoegen.component.ts","src/app/admin/admin-toevoegen/wijntype-toevoegen/wijntype-toevoegen.component.css","src/app/admin/admin-toevoegen/wijntype-toevoegen/wijntype-toevoegen.component.ts","src/app/alarmering/alarmering-data/alarmering-data.component.css","src/app/alarmering/alarmering-data/alarmering-data.component.ts","src/app/alarmering/alarmering-data/co/co.component.css","src/app/alarmering/alarmering-data/co/co.component.ts","src/app/alarmering/alarmering-data/druk/druk.component.css","src/app/alarmering/alarmering-data/druk/druk.component.ts","src/app/alarmering/alarmering-data/ethanol/ethanol.component.css","src/app/alarmering/alarmering-data/ethanol/ethanol.component.ts","src/app/alarmering/alarmering-data/temperatuur/temperatuur.component.css","src/app/alarmering/alarmering-data/temperatuur/temperatuur.component.ts","src/app/alarmering/alarmering-data/troebelheid/troebelheid.component.css","src/app/alarmering/alarmering-data/troebelheid/troebelheid.component.ts","src/app/alarmering/alarmering-personen/alarmering-personen.component.css","src/app/alarmering/alarmering-personen/alarmering-personen.component.ts","src/app/alarmering/alarmering.module.ts","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/home/home.component.css","src/app/home/home.component.ts","src/app/home/home.module.ts","src/app/login/login.component.css","src/app/login/login.component.ts","src/app/models/alarm-data-gebruiker.model.ts","src/app/models/alarm-data.model.ts","src/app/models/druif.model.ts","src/app/models/event.model.ts","src/app/models/gebruiker.model.ts","src/app/models/materiaal.model.ts","src/app/models/meting.model.ts","src/app/models/persmethode.model.ts","src/app/models/process.model.ts","src/app/models/soort-event.model.ts","src/app/models/soort-meting.model.ts","src/app/models/user-login.model.ts","src/app/models/vat.model.ts","src/app/models/vinificatie-druif.model.ts","src/app/models/wijn-type.model.ts","src/app/process/add-actie/add-actie.component.css","src/app/process/add-actie/add-actie.component.ts","src/app/process/add-meting/add-meting.component.css","src/app/process/add-meting/add-meting.component.ts","src/app/process/afsluiten/afsluiten.component.css","src/app/process/afsluiten/afsluiten.component.ts","src/app/process/create-process/create-process.component.css","src/app/process/create-process/create-process.component.ts","src/app/process/process.component.css","src/app/process/process.component.ts","src/app/process/process.module.ts","src/app/services/services.service.ts","src/app/shared/shared.module.ts","src/app/toon-dashboard/toon-dashboard.component.css","src/app/toon-dashboard/toon-dashboard.component.ts","src/app/toon-dashboard/toon-dashboard.module.ts","src/app/toon-vinificaties/toon-actieve-vinificaties/toon-actieve-vinificaties.component.css","src/app/toon-vinificaties/toon-actieve-vinificaties/toon-actieve-vinificaties.component.ts","src/app/toon-vinificaties/toon-details-vinificaties/toon-details-vinificaties.component.css","src/app/toon-vinificaties/toon-details-vinificaties/toon-details-vinificaties.component.ts","src/app/toon-vinificaties/toon-non-actieve-vinificaties/toon-non-actieve-vinificaties.component.css","src/app/toon-vinificaties/toon-non-actieve-vinificaties/toon-non-actieve-vinificaties.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAAA,wBAAA,CAAA,GAAA,EAAA;AACA;AACA;AACA,aAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,YAAA;AACA,YAAA,CAAA,GAAA,IAAA,KAAA,CAAA,yBAAA,GAAA,GAAA,GAAA,CAAA;AACA,QAAA,CAAA,CAAA,IAAA,GAAA,kBAAA;AACA,cAAA,CAAA;AACE,OAJF,CAAA;AAKA;;AACA,IAAA,wBAAA,CAAA,IAAA,GAAA,YAAA;AAA4C,aAAA,EAAA;AAAW,KAAvD;;AACA,IAAA,wBAAA,CAAA,OAAA,GAAA,wBAAA;AACA,IAAA,MAAA,CAAA,OAAA,GAAA,wBAAA;AACA,IAAA,wBAAA,CAAA,EAAA,GAAA,yCAAA;;;;;;;;;;;;;;;;ACZA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,i+BAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,2zDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,guDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qkGAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,mxDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,swDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,2vDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,w9GAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,gvDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,wzGAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,kjBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,kgBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,0qEAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,igBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,mgBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,ggBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,wqEAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,8fAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,2sDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,w3CAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,00CAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,00CAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,g0CAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,w0CAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6+CAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,igOAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,8sBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qoDAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,wwEAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,sqFAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,mwBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,gkIAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,47BAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,8GAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6uCAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,ulNAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,4kEAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,WAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,WAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,gBAAA,EAAA,YAAA;AAAA,aAAA,cAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,kBAAA,EAAA,YAAA;AAAA,aAAA,gBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,kBAAA,EAAA,YAAA;AAAA,aAAA,gBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,eAAA,EAAA,YAAA;AAAA,aAAA,aAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,sBAAA,EAAA,YAAA;AAAA,aAAA,oBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,iBAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;AAAA;;;;;;;;;;;;;;;AAcA;;;AAEA,QAAA,cAAA,GAAA,uBAAA,CAAA,EAAA,CAAA,EAAA;AACA,MAAA,cAAA,GAAA,MAAA,CAAA,cAAA,IACA;AAAU,QAAA,SAAA,EAAA;AAAV,mBAA0B,KAA1B,IAA0B,UAAA,CAAA,EAAA,CAAA,EAAA;AAAsC,QAAA,CAAA,CAAA,SAAA,GAAA,CAAA;AAAmB,OADnF,IAEA,UAAA,CAAA,EAAA,CAAA,EAAA;AAAyB,aAAA,IAAA,CAAA,IAAA,CAAA;AAAA,cAAA,CAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AAAuD,OAFhF;;AAGA,aAAA,cAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,KALA;;AAOO,aAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,MAAA,cAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AACA,eAAA,EAAA,GAAA;AAAmB,aAAA,WAAA,GAAA,CAAA;AAAsB;;AACzC,MAAA,CAAA,CAAA,SAAA,GAAA,CAAA,KAAA,IAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,SAAA,GAAA,CAAA,CAAA,SAAA,EAAA,IAAA,EAAA,EAAA,CAAA;AACA;;AAEO,QAAA,OAAA,GAAA,oBAAA;AACP,MAAA,OAAA,GAAA,MAAA,CAAA,MAAA,IAAA,SAAA,QAAA,CAAA,CAAA,EAAA;AACA,aAAA,IAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAgD,CAAA,GAAA,CAAhD,EAAuD,CAAA,EAAvD,EAAuD;AACvD,UAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,eAAA,IAAA,CAAA,IAAA,CAAA;AAAA,gBAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AACA;;AACA,eAAA,CAAA;AACA,OANA;;AAOA,aAAA,OAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AACA,KATO;;AAWA,aAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,IAAA,CAAA;AAAA,YAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,CAAA,IAAA,CAAA,EACA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AADA;;AAEA,UAAA,CAAA,IAAA,IAAA,IAAA,OAAA,MAAA,CAAA,qBAAA,KAAA,UAAA,EACA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,qBAAA,CAAA,CAAA,CAAA,EAA4D,CAAA,GAAA,CAAA,CAAA,MAA5D,EAA0E,CAAA,EAA1E,EAA0E;AAC1E,YAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,aAAA,CAAA;AACA;;AAEO,aAAA,UAAA,CAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA;AACP,UAAA,CAAA,GAAA,SAAA,CAAA,MAAA;AAAA,UAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,MAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,GAAA,MAAA,CAAA,wBAAA,CAAA,MAAA,EAAA,GAAA,CAAA,GAAA,IAAA;AAAA,UAAA,CAAA;AACA,UAAA,OAAA,OAAA,KAAA,QAAA,IAAA,OAAA,OAAA,CAAA,QAAA,KAAA,UAAA,EAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,KACA,KAAA,IAAA,CAAA,GAAA,UAAA,CAAA,MAAA,GAAA,CAAA,EAA4C,CAAA,IAAA,CAA5C,EAAoD,CAAA,EAApD;AAAoD,YAAA,CAAA,GAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,GAAA,CAAA,KAAA,CAAA;AAApD;AACA,aAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,CAAA,EAAA,CAAA;AACA;;AAEO,aAAA,OAAA,CAAA,UAAA,EAAA,SAAA,EAAA;AACP,aAAA,UAAA,MAAA,EAAA,GAAA,EAAA;AAAmC,QAAA,SAAA,CAAA,MAAA,EAAA,GAAA,EAAA,UAAA,CAAA;AAAoC,OAAvE;AACA;;AAEO,aAAA,UAAA,CAAA,WAAA,EAAA,aAAA,EAAA;AACP,UAAA,OAAA,OAAA,KAAA,QAAA,IAAA,OAAA,OAAA,CAAA,QAAA,KAAA,UAAA,EAAA,OAAA,OAAA,CAAA,QAAA,CAAA,WAAA,EAAA,aAAA,CAAA;AACA;;AAEO,aAAA,SAAA,CAAA,OAAA,EAAA,UAAA,EAAA,CAAA,EAAA,SAAA,EAAA;AACP,aAAA,KAAA,CAAA,KAAA,CAAA,GAAA,OAAA,CAAA,EAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,iBAAA,SAAA,CAAA,KAAA,EAAA;AAAmC,cAAA;AAAM,YAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;AAA+B,WAArC,CAAqC,OAAA,CAAA,EAAA;AAAY,YAAA,MAAA,CAAA,CAAA,CAAA;AAAa;AAAA;;AACjG,iBAAA,QAAA,CAAA,KAAA,EAAA;AAAkC,cAAA;AAAM,YAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA,KAAA,CAAA,CAAA;AAAmC,WAAzC,CAAyC,OAAA,CAAA,EAAA;AAAY,YAAA,MAAA,CAAA,CAAA,CAAA;AAAa;AAAA;;AACpG,iBAAA,IAAA,CAAA,MAAA,EAAA;AAA+B,UAAA,MAAA,CAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,IAAA,CAAA,CAAA,UAAA,OAAA,EAAA;AAAiE,YAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAAyB,WAA1F,EAA0F,IAA1F,CAA0F,SAA1F,EAA0F,QAA1F,CAAA;AAAsH;;AACrJ,QAAA,IAAA,CAAA,CAAA,SAAA,GAAA,SAAA,CAAA,KAAA,CAAA,OAAA,EAAA,UAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AACK,OALL,CAAA;AAMA;;AAEO,aAAA,WAAA,CAAA,OAAA,EAAA,IAAA,EAAA;AACP,UAAA,CAAA,GAAA;AAAa,QAAA,KAAA,EAAA,CAAb;AAAa,QAAA,IAAA,EAAA,gBAAA;AAA6B,cAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAA0B,iBAAA,CAAA,CAAA,CAAA,CAAA;AAAe,SAAnF;AAAmF,QAAA,IAAA,EAAA,EAAnF;AAAmF,QAAA,GAAA,EAAA;AAAnF,OAAA;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AACA,aAAA,CAAA,GAAA;AAAgB,QAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAhB;AAAgB,iBAAA,IAAA,CAAA,CAAA,CAAhB;AAAgB,kBAAA,IAAA,CAAA,CAAA;AAAhB,OAAA,EAAqE,OAAA,MAAA,KAAA,UAAA,KAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,YAAA;AAAoE,eAAA,IAAA;AAAe,OAAnF,CAArE,EAAwJ,CAAxJ;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,eAAA,UAAA,CAAA,EAAA;AAAsB,iBAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AAAqB,SAA3C;AAA8C;;AACpE,eAAA,IAAA,CAAA,EAAA,EAAA;AACA,YAAA,CAAA,EAAA,MAAA,IAAA,SAAA,CAAA,iCAAA,CAAA;;AACA,eAAA,CAAA;AAAA,cAAA;AACA,gBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,KAAA,CAAA;;AACA,oBAAA,EAAA,CAAA,CAAA,CAAA;AACA,mBAAA,CAAA;AAAA,mBAAA,CAAA;AAAA,gBAAA,CAAA,GAAA,EAAA;AAAuC;;AACvC,mBAAA,CAAA;AAAA,gBAAA,CAAA,CAAA,KAAA;AAAkC,uBAAA;AAAS,kBAAA,KAAA,EAAA,EAAA,CAAA,CAAA,CAAT;AAAS,kBAAA,IAAA,EAAA;AAAT,iBAAA;;AAClC,mBAAA,CAAA;AAAA,gBAAA,CAAA,CAAA,KAAA;AAAkC,gBAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAW,gBAAA,EAAA,GAAA,CAAA,CAAA,CAAA;AAAU;;AACvD,mBAAA,CAAA;AAAA,gBAAA,EAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,EAAA;;AAAyC,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AAAc;;AACvD;AACA,oBAAA,EAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA,GAAA,CAAA,CAAA,MAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,GAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AAA6G,kBAAA,CAAA,GAAA,CAAA;AAAO;AAAU;;AAC9H,oBAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAAgF,kBAAA,CAAA,CAAA,KAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAiB;AAAO;;AACxG,oBAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAAwD,kBAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAgB,kBAAA,CAAA,GAAA,EAAA;AAAQ;AAAO;;AACvF,oBAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAA8C,kBAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA;;AAAgB,kBAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA;;AAAgB;AAAO;;AACrF,oBAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,GAAA;;AACA,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AAAiC;AAXjC;;AAaA,YAAA,EAAA,GAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,CAAA;AACS,WAjBT,CAiBS,OAAA,CAAA,EAAA;AAAY,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAa,YAAA,CAAA,GAAA,CAAA;AAAS,WAjB3C,SAiB2C;AAAU,YAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAW;AAjBhE;;AAkBA,YAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AAAmC,eAAA;AAAS,UAAA,KAAA,EAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAT;AAAS,UAAA,IAAA,EAAA;AAAT,SAAA;AACnC;AACA;;AAEO,aAAA,YAAA,CAAA,CAAA,EAAA,OAAA,EAAA;AACP,WAAA,IAAA,CAAA,IAAA,CAAA;AAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AACA;;AAEO,aAAA,QAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,OAAA,MAAA,KAAA,UAAA,IAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AAAA,UAAA,CAAA,GAAA,CAAA;AACA,UAAA,CAAA,EAAA,OAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,gBAAA;AACA,cAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,MAAA,EAAA,CAAA,GAAA,KAAA,CAAA;AACA,iBAAA;AAAoB,YAAA,KAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAApB;AAAoB,YAAA,IAAA,EAAA,CAAA;AAApB,WAAA;AACA;AAJA,OAAA;AAMA;;AAEO,aAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,OAAA,MAAA,KAAA,UAAA,IAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,CAAA,CAAA,EAAA,OAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UAAA,EAAA,GAAA,EAAA;AAAA,UAAA,CAAA;;AACA,UAAA;AACA,eAAA,CAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,EAAA,IAAA;AAAA,UAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA;AAAA;AACA,OAFA,CAGA,OAAA,KAAA,EAAA;AAAmB,QAAA,CAAA,GAAA;AAAM,UAAA,KAAA,EAAA;AAAN,SAAA;AAAsB,OAHzC,SAIA;AACA,YAAA;AACA,cAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,SAFA,SAGA;AAAiB,cAAA,CAAA,EAAA,MAAA,CAAA,CAAA,KAAA;AAAsB;AACvC;;AACA,aAAA,EAAA;AACA;;AAEO,aAAA,QAAA,GAAA;AACP,WAAA,IAAA,EAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,EAA4B,CAAA,GAAA,SAAA,CAAA,MAA5B,EAAkD,CAAA,EAAlD;AACA,QAAA,EAAA,GAAA,EAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AADA;;AAEA,aAAA,EAAA;AACA;;AAEO,aAAA,cAAA,GAAA;AACP,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAAA,MAAA,EAAiD,CAAA,GAAA,EAAjD,EAAyD,CAAA,EAAzD;AAAyD,QAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AAAzD;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAwC,CAAA,GAAA,EAAxC,EAAgD,CAAA,EAAhD;AACA,aAAA,IAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA,MAAA,EAAwD,CAAA,GAAA,EAAxD,EAAgE,CAAA,IAAA,CAAA,EAAhE;AACA,UAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AADA;AADA;;AAGA,aAAA,CAAA;AACA;;AAAA;;AAEO,aAAA,OAAA,CAAA,CAAA,EAAA;AACP,aAAA,gBAAA,OAAA,IAAA,KAAA,CAAA,GAAA,CAAA,EAAA,IAAA,IAAA,IAAA,OAAA,CAAA,CAAA,CAAA;AACA;;AAEO,aAAA,gBAAA,CAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA;AACP,UAAA,CAAA,MAAA,CAAA,aAAA,EAAA,MAAA,IAAA,SAAA,CAAA,sCAAA,CAAA;AACA,UAAA,CAAA,GAAA,SAAA,CAAA,KAAA,CAAA,OAAA,EAAA,UAAA,IAAA,EAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UAAA,CAAA,GAAA,EAAA;AACA,aAAA,CAAA,GAAA,EAAA,EAAiB,IAAA,CAAA,MAAA,CAAjB,EAAiB,IAAA,CAAA,OAAA,CAAjB,EAAiB,IAAA,CAAA,QAAA,CAAjB,EAAiB,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA,GAAA,YAAA;AAAsF,eAAA,IAAA;AAAe,OAAtH,EAAsH,CAAtH;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AAAgC,iBAAA,IAAA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AAAqC,YAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAA4C,WAAjF,CAAA;AAAmF,SAAnH;AAAsH;;AAC5I,eAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAA2B,YAAA;AAAM,UAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAiB,SAAvB,CAAuB,OAAA,CAAA,EAAA;AAAY,UAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAsB;AAAA;;AACpF,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,QAAA,CAAA,CAAA,KAAA,YAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,OAAA,EAAA,MAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAoG;;AAC1H,eAAA,OAAA,CAAA,KAAA,EAAA;AAA6B,QAAA,MAAA,CAAA,MAAA,EAAA,KAAA,CAAA;AAAuB;;AACpD,eAAA,MAAA,CAAA,KAAA,EAAA;AAA4B,QAAA,MAAA,CAAA,OAAA,EAAA,KAAA,CAAA;AAAwB;;AACpD,eAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAA2B,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA,MAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAyD;AACpF;;AAEO,aAAA,gBAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,EAAA,CAAA;AACA,aAAA,CAAA,GAAA,EAAA,EAAiB,IAAA,CAAA,MAAA,CAAjB,EAAiB,IAAA,CAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAA4C,cAAA,CAAA;AAAW,OAAvD,CAAjB,EAAwE,IAAA,CAAA,QAAA,CAAxE,EAAwE,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,YAAA;AAAqD,eAAA,IAAA;AAAe,OAA5I,EAA4I,CAA5I;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAyB,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AAA6B,iBAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA;AAAoB,YAAA,KAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAApB;AAAoB,YAAA,IAAA,EAAA,CAAA,KAAA;AAApB,WAAA,GAAoE,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAApE;AAAsF,SAAnH,GAAmH,CAAnH;AAAwH;AACjJ;;AAEO,aAAA,aAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,MAAA,CAAA,aAAA,EAAA,MAAA,IAAA,SAAA,CAAA,sCAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA;AAAA,UAAA,CAAA;AACA,aAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,OAAA,QAAA,KAAA,UAAA,GAAA,QAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAA2G,IAAA,CAAA,MAAA,CAA3G,EAA2G,IAAA,CAAA,OAAA,CAA3G,EAA2G,IAAA,CAAA,QAAA,CAA3G,EAA2G,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA,GAAA,YAAA;AAAsF,eAAA,IAAA;AAAe,OAAhN,EAAgN,CAAhN,CAAA;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,UAAA,CAAA,EAAA;AAA8B,iBAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AAAgD,YAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,OAAA,EAAA,MAAA,EAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,KAAA,CAAA;AAAyD,WAAzG,CAAA;AAA2G,SAAzI;AAA4I;;AAClK,eAAA,MAAA,CAAA,OAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AAA4C,QAAA,OAAA,CAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AAAsC,UAAA,OAAA,CAAA;AAAU,YAAA,KAAA,EAAA,CAAV;AAAU,YAAA,IAAA,EAAA;AAAV,WAAA,CAAA;AAAkC,SAAxE,EAAwE,MAAxE;AAAkF;AAC9H;;AAEO,aAAA,oBAAA,CAAA,MAAA,EAAA,GAAA,EAAA;AACP,UAAA,MAAA,CAAA,cAAA,EAAA;AAAgC,QAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,KAAA,EAAA;AAAuC,UAAA,KAAA,EAAA;AAAvC,SAAA;AAAwD,OAAxF,MAAwF;AAAO,QAAA,MAAA,CAAA,GAAA,GAAA,GAAA;AAAkB;;AACjH,aAAA,MAAA;AACA;;AAAA;;AAEO,aAAA,YAAA,CAAA,GAAA,EAAA;AACP,UAAA,GAAA,IAAA,GAAA,CAAA,UAAA,EAAA,OAAA,GAAA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,GAAA,IAAA,IAAA,EAAA,KAAA,IAAA,CAAA,IAAA,GAAA;AAAA,YAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AAAA;AACA,MAAA,MAAA,CAAA,OAAA,GAAA,GAAA;AACA,aAAA,MAAA;AACA;;AAEO,aAAA,eAAA,CAAA,GAAA,EAAA;AACP,aAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,GAAA;AAA4C,QAAA,OAAA,EAAA;AAA5C,OAAA;AACA;;;;;;;;;;;;;;;;;ACnMA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,uBAAb;AAAA;AAAA;AAEE,yCAAA;AAAA;AAAiB;;AAFnB;AAAA;AAAA,mCAIU,CACP;AALH;;AAAA;AAAA,OAAA;;AAAa,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALnC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,qBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4GAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKmC,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACPb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,ogBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAa,qBAAb;AAAA;AAAA;AAIE,qCAAoB,EAApB,EAA6C,QAA7C,EAAgF,YAAhF,EAAgH,SAAhH,EAAsI;AAAA;;AAAlH,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,YAAA,GAAA,YAAA;AAAgC,aAAA,SAAA,GAAA,SAAA;AAIhH,aAAA,oBAAA,GAAuB,KAAK,EAAL,CAAQ,KAAR,CAAc;AACnC,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAD6B,SAAd,CAAvB;AAHE,aAAK,gBAAL;AACD;;AANH;AAAA;AAAA,2CAYkB;AAAA;;AACd,eAAK,QAAL,CAAc,kBAAd,GAAmC,SAAnC,CAA6C,UAAA,MAAM,EAAG;AACpD,YAAA,KAAI,CAAC,OAAL,GAAe,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAf;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACD,WAHD;AAID;AAjBH;AAAA;AAAA,mCAkBU,CACP;AAnBH;AAAA;AAAA,+BAqBS,KArBT,EAqBqB;AAAA;;AACjB,eAAK,QAAL,CAAc,gBAAd,CAA+B,KAA/B,EAAsC,SAAtC,CAAgD,UAAA,MAAM,EAAG;AAAG,YAAA,MAAI,CAAC,gBAAL;AAAyB,WAArF;AACD;AAvBH;AAAA;AAAA,+BAyBM;AAAA;;AACF,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,WAAd,CAA0B,KAAK,UAA/B,EAA2C,SAA3C,CAAqD,UAAA,MAAM,EAAG;AAAG,YAAA,MAAI,CAAC,gBAAL;AAAyB,WAA1F;AACD;AA5BH;AAAA;AAAA,uCA6Bc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,6BAApB,EAAmD,OAAnD,EAA4D;AAC1D,YAAA,QAAQ,EAAE;AADgD,WAA5D;AAGD;AAjCH;AAAA;AAAA,6BAmCO,OAnCP,EAmCgB,KAnChB,EAmC4B;AAAA;;AACxB,eAAK,UAAL,GAAkB,KAAlB;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,UAAjB;AACA,eAAK,YAAL,CAAkB,IAAlB,CAAuB,OAAvB,EAAgC;AAAE,YAAA,cAAc,EAAE;AAAlB,WAAhC,EAAyE,MAAzE,CAAgF,IAAhF,CAAqF,UAAC,MAAD,EAAW;AAC9F,YAAA,MAAI,CAAC,WAAL,0BAAmC,MAAnC;AACD,WAFD,EAEG,UAAC,MAAD,EAAW;AACZ,YAAA,MAAI,CAAC,WAAL,uBAAgC,MAAI,CAAC,gBAAL,CAAsB,MAAtB,CAAhC;AACD,WAJD;AAKD;AA3CH;AAAA;AAAA,yCA4C2B,MA5C3B,EA4CsC;AAClC,cAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAgB,MAAhB;AACD;AACF;AApDH;;AAAA;AAAA,OAAA;;;;cAI0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAuC,uDAAA,CAAA,UAAA;;cAA6B,8CAAA,CAAA,aAAA;;;;AAJhH,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACdb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,QAAa,qBAAb;AAAA;AAAA;AAKE,qCAAoB,EAApB,EAA6C,QAA7C,EAAgF,YAAhF,EAAgH,SAAhH,EAAsI;AAAA;;AAAlH,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,YAAA,GAAA,YAAA;AAAgC,aAAA,SAAA,GAAA,SAAA;AAIhH,aAAA,UAAA,GAAa,KAAK,EAAL,CAAQ,KAAR,CAAc;AACzB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AADmB,SAAd,CAAb;AAHE,aAAK,gBAAL;AACD;;AAPH;AAAA;AAAA,2CAakB;AAAA;;AACd,eAAK,QAAL,CAAc,kBAAd,GAAmC,SAAnC,CAA6C,UAAA,MAAM,EAAG;AACpD,YAAA,MAAI,CAAC,MAAL,GAAc,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAd;AACD,WAFD;AAGD;AAjBH;AAAA;AAAA,mCAkBU,CACP;AAnBH;AAAA;AAAA,+BAqBS,KArBT,EAqB0B;AAAA;;AACtB,eAAK,QAAL,CAAc,gBAAd,CAA+B,KAA/B,EAAsC,SAAtC,CAAgD,UAAA,MAAM,EAAG;AAAG,YAAA,MAAI,CAAC,gBAAL;AAAyB,WAArF;AACD;AAvBH;AAAA;AAAA,+BAyBM;AAAA;;AACF,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,WAAd,CAA0B,KAAK,KAA/B,EAAsC,SAAtC,CAAgD,UAAA,MAAM,EAAG;AAAG,YAAA,MAAI,CAAC,gBAAL;AAAyB,WAArF;AACD;AA5BH;AAAA;AAAA,uCA6Bc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,+BAApB,EAAqD,OAArD,EAA8D;AAC5D,YAAA,QAAQ,EAAE;AADkD,WAA9D;AAGD;AAjCH;AAAA;AAAA,6BAmCO,OAnCP,EAmCgB,KAnChB,EAmCiC;AAAA;;AAC7B,eAAK,KAAL,GAAa,KAAb;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AACA,eAAK,YAAL,CAAkB,IAAlB,CAAuB,OAAvB,EAAgC;AAAE,YAAA,cAAc,EAAE;AAAlB,WAAhC,EAAyE,MAAzE,CAAgF,IAAhF,CAAqF,UAAC,MAAD,EAAW;AAC9F,YAAA,MAAI,CAAC,WAAL,0BAAmC,MAAnC;AACD,WAFD,EAEG,UAAC,MAAD,EAAW;AACZ,YAAA,MAAI,CAAC,WAAL,uBAAgC,MAAI,CAAC,gBAAL,CAAsB,MAAtB,CAAhC;AACD,WAJD;AAKD;AA3CH;AAAA;AAAA,yCA4C2B,MA5C3B,EA4CsC;AAClC,cAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAgB,MAAhB;AACD;AACF;AApDH;;AAAA;AAAA,OAAA;;;;cAK0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAuC,uDAAA,CAAA,UAAA;;cAA6B,8CAAA,CAAA,aAAA;;;;AALhH,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACfb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,yBAAb;AAAA;AAAA;AAKE,yCAAoB,EAApB,EAA6C,QAA7C,EAAgF,YAAhF,EAAgH,SAAhH,EAAsI;AAAA;;AAAlH,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,YAAA,GAAA,YAAA;AAAgC,aAAA,SAAA,GAAA,SAAA;AAIhH,aAAA,UAAA,GAAa,KAAK,EAAL,CAAQ,KAAR,CAAc;AACzB,UAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CADe;AAEzB,UAAA,UAAU,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFa;AAGzB,UAAA,cAAc,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAHS;AAIzB,UAAA,KAAK,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAJkB;AAKzB,UAAA,UAAU,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AALa,SAAd,CAAb;AAHE,aAAK,gBAAL;AACD;;AAPH;AAAA;AAAA,2CAkBkB;AAAA;;AACd,eAAK,QAAL,CAAc,gBAAd,GAAiC,SAAjC,CAA2C,UAAA,MAAM,EAAG;AAClD,YAAA,MAAI,CAAC,UAAL,GAAkB,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAlB;AACD,WAFD;AAGD;AAtBH;AAAA;AAAA,mCAuBU,CACP;AAxBH;AAAA;AAAA,uCAyBc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,4BAApB,EAAkD,OAAlD,EAA2D;AACzD,YAAA,QAAQ,EAAE;AAD+C,WAA3D;AAGD;AA7BH;AAAA;AAAA,+BA8BM;AAAA;;AACF,eAAK,YAAL;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;;AACA,eAAK,QAAL,CAAc,eAAd,CAA8B,KAAK,KAAnC,EAA0C,SAA1C,CAAoD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,gBAAL;AAAyB,WAAzF;AACD;AAlCH;AAAA;AAAA,6BAoCO,OApCP,EAoCgB,SApChB,EAoCoC;AAAA;;AAChC,eAAK,KAAL,GAAa,SAAb;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AACA,eAAK,YAAL,CAAkB,IAAlB,CAAuB,OAAvB,EAAgC;AAAE,YAAA,cAAc,EAAE;AAAlB,WAAhC,EAAyE,MAAzE,CAAgF,IAAhF,CAAqF,UAAC,MAAD,EAAW;AAC9F,YAAA,OAAI,CAAC,WAAL,0BAAmC,MAAnC;AACD,WAFD,EAEG,UAAC,MAAD,EAAW;AACZ,YAAA,OAAI,CAAC,WAAL,uBAAgC,OAAI,CAAC,gBAAL,CAAsB,MAAtB,CAAhC;AACD,WAJD;AAKD;AA5CH;AAAA;AAAA,yCA6C2B,MA7C3B,EA6CsC;AAClC,cAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAgB,MAAhB;AACD;AACF;AArDH;;AAAA;AAAA,OAAA;;;;cAK0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAuC,uDAAA,CAAA,UAAA;;cAA6B,8CAAA,CAAA,aAAA;;;;AALhH,IAAA,yBAAyB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALrC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,uBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gIAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKqC,CAAA,EAAzB,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,yBAAb;AAAA;AAAA;AAIE,yCAAoB,EAApB,EAA6C,QAA7C,EAAgF,YAAhF,EAAgH,SAAhH,EAAsI;AAAA;;AAAlH,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,YAAA,GAAA,YAAA;AAAgC,aAAA,SAAA,GAAA,SAAA;AAIhH,aAAA,UAAA,GAAa,KAAK,EAAL,CAAQ,KAAR,CAAc;AACzB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AADmB,SAAd,CAAb;AAHE,aAAK,gBAAL;AACD;;AANH;AAAA;AAAA,2CAYkB;AAAA;;AACd,eAAK,QAAL,CAAc,gBAAd,GAAiC,SAAjC,CAA2C,UAAA,MAAM,EAAG;AAClD,YAAA,OAAI,CAAC,UAAL,GAAkB,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAlB;AACD,WAFD;AAGD;AAhBH;AAAA;AAAA,mCAiBU,CACP;AAlBH;AAAA;AAAA,+BAoBS,SApBT,EAoB6B;AAAA;;AACzB,eAAK,QAAL,CAAc,iBAAd,CAAgC,SAAhC,EAA2C,SAA3C,CAAqD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,gBAAL;AAAyB,WAA1F;AACD;AAtBH;AAAA;AAAA,+BAwBM;AAAA;;AACF,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,eAAd,CAA8B,KAAK,KAAnC,EAA0C,SAA1C,CAAoD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,gBAAL;AAAyB,WAAzF;AAED;AA5BH;AAAA;AAAA,uCA8Bc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,6BAApB,EAAmD,OAAnD,EAA4D;AAC1D,YAAA,QAAQ,EAAE;AADgD,WAA5D;AAGD;AAlCH;AAAA;AAAA,6BAmCO,OAnCP,EAmCgB,SAnChB,EAmCoC;AAAA;;AAChC,eAAK,KAAL,GAAa,SAAb;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AACA,eAAK,YAAL,CAAkB,IAAlB,CAAuB,OAAvB,EAAgC;AAAE,YAAA,cAAc,EAAE;AAAlB,WAAhC,EAAyE,MAAzE,CAAgF,IAAhF,CAAqF,UAAC,MAAD,EAAW;AAC9F,YAAA,OAAI,CAAC,WAAL,0BAAmC,MAAnC;AACD,WAFD,EAEG,UAAC,MAAD,EAAW;AACZ,YAAA,OAAI,CAAC,WAAL,uBAAgC,OAAI,CAAC,gBAAL,CAAsB,MAAtB,CAAhC;AACD,WAJD;AAKD;AA3CH;AAAA;AAAA,yCA4C2B,MA5C3B,EA4CsC;AAClC,cAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAgB,MAAhB;AACD;AACF;AApDH;;AAAA;AAAA,OAAA;;;;cAI0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAuC,uDAAA,CAAA,UAAA;;cAA6B,8CAAA,CAAA,aAAA;;;;AAJhH,IAAA,yBAAyB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALrC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,uBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gIAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKqC,CAAA,EAAzB,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,uBAAb;AAAA;AAAA;AAKE,uCAAoB,EAApB,EAA6C,QAA7C,EAAgF,YAAhF,EAAgH,SAAhH,EAAsI;AAAA;;AAAlH,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,YAAA,GAAA,YAAA;AAAgC,aAAA,SAAA,GAAA,SAAA;AAIhH,aAAA,UAAA,GAAa,KAAK,EAAL,CAAQ,KAAR,CAAc;AACzB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AADmB,SAAd,CAAb;AAHE,aAAK,gBAAL;AACD;;AAPH;AAAA;AAAA,2CAakB;AAAA;;AACd,eAAK,QAAL,CAAc,kBAAd,GAAmC,SAAnC,CAA6C,UAAA,MAAM,EAAG;AACpD,YAAA,OAAI,CAAC,QAAL,GAAgB,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAhB;AACD,WAFD;AAGD;AAjBH;AAAA;AAAA,mCAkBU,CACP;AAnBH;AAAA;AAAA,+BAqBS,OArBT,EAqB6B;AAAA;;AACzB,eAAK,QAAL,CAAc,iBAAd,CAAgC,OAAhC,EAAyC,SAAzC,CAAmD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,gBAAL;AAAyB,WAAxF;AACD;AAvBH;AAAA;AAAA,6BAyBO,OAzBP,EAyB2B;AAAA;;AACvB,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,aAAd,CAA4B,KAAK,KAAjC,EAAwC,SAAxC,CAAkD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,gBAAL;AAAyB,WAAvF;AACD;AA5BH;AAAA;AAAA,uCA6Bc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,8BAApB,EAAoD,OAApD,EAA6D;AAC3D,YAAA,QAAQ,EAAE;AADiD,WAA7D;AAGD;AAjCH;AAAA;AAAA,6BAmCO,OAnCP,EAmCgB,OAnChB,EAmCoC;AAAA;;AAChC,eAAK,KAAL,GAAa,OAAb;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AACA,eAAK,YAAL,CAAkB,IAAlB,CAAuB,OAAvB,EAAgC;AAAE,YAAA,cAAc,EAAE;AAAlB,WAAhC,EAAyE,MAAzE,CAAgF,IAAhF,CAAqF,UAAC,MAAD,EAAW;AAC9F,YAAA,OAAI,CAAC,WAAL,0BAAmC,MAAnC;AACD,WAFD,EAEG,UAAC,MAAD,EAAW;AACZ,YAAA,OAAI,CAAC,WAAL,uBAAgC,OAAI,CAAC,gBAAL,CAAsB,MAAtB,CAAhC;AACD,WAJD;AAKD;AA3CH;AAAA;AAAA,yCA4C2B,MA5C3B,EA4CsC;AAClC,cAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAgB,MAAhB;AACD;AACF;AApDH;;AAAA;AAAA,OAAA;;;;cAK0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAuC,uDAAA,CAAA,UAAA;;cAA6B,8CAAA,CAAA,aAAA;;;;AALhH,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALnC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,qBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4HAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKmC,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,sBAAb;AAAA;AAAA;AAKE,sCAAoB,EAApB,EAA6C,QAA7C,EAAgF,YAAhF,EAAgH,SAAhH,EAAsI;AAAA;;AAAlH,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,YAAA,GAAA,YAAA;AAAgC,aAAA,SAAA,GAAA,SAAA;AAIhH,aAAA,UAAA,GAAa,KAAK,EAAL,CAAQ,KAAR,CAAc;AACzB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AADmB,SAAd,CAAb;AAHE,aAAK,gBAAL;AACD;;AAPH;AAAA;AAAA,2CAakB;AAAA;;AACd,eAAK,QAAL,CAAc,mBAAd,GAAoC,SAApC,CAA8C,UAAA,MAAM,EAAG;AACrD,YAAA,OAAI,CAAC,QAAL,GAAgB,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAhB;AACD,WAFD;AAGD;AAjBH;AAAA;AAAA,mCAkBU,CACP;AAnBH;AAAA;AAAA,+BAqBS,MArBT,EAqB4B;AAAA;;AACxB,eAAK,QAAL,CAAc,iBAAd,CAAgC,MAAhC,EAAwC,SAAxC,CAAkD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,gBAAL;AAAyB,WAAvF;AACD;AAvBH;AAAA;AAAA,+BAyBM;AAAA;;AACF,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,gBAAL;AAAyB,WAAtF;AAED;AA7BH;AAAA;AAAA,uCA8Bc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,gCAApB,EAAsD,OAAtD,EAA+D;AAC7D,YAAA,QAAQ,EAAE;AADmD,WAA/D;AAGD;AAlCH;AAAA;AAAA,6BAoCO,OApCP,EAoCgB,MApChB,EAoCmC;AAAA;;AAC/B,eAAK,KAAL,GAAa,MAAb;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AACA,eAAK,YAAL,CAAkB,IAAlB,CAAuB,OAAvB,EAAgC;AAAE,YAAA,cAAc,EAAE;AAAlB,WAAhC,EAAyE,MAAzE,CAAgF,IAAhF,CAAqF,UAAC,MAAD,EAAW;AAC9F,YAAA,OAAI,CAAC,WAAL,0BAAmC,MAAnC;AACD,WAFD,EAEG,UAAC,MAAD,EAAW;AACZ,YAAA,OAAI,CAAC,WAAL,uBAAgC,OAAI,CAAC,gBAAL,CAAsB,MAAtB,CAAhC;AACD,WAJD;AAKD;AA5CH;AAAA;AAAA,yCA6C2B,MA7C3B,EA6CsC;AAClC,cAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAgB,MAAhB;AACD;AACF;AArDH;;AAAA;AAAA,OAAA;;;;cAK0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAuC,uDAAA,CAAA,UAAA;;cAA6B,8CAAA,CAAA,aAAA;;;;AALhH,IAAA,sBAAsB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALlC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,oBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,0HAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKkC,CAAA,EAAtB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,mBAAb;AAAA;AAAA;AAME,mCAAoB,EAApB,EAA6C,QAA7C,EAAgF,YAAhF,EAAgH,SAAhH,EAAsI;AAAA;;AAAlH,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,YAAA,GAAA,YAAA;AAAgC,aAAA,SAAA,GAAA,SAAA;AALhH,aAAA,KAAA,GAAQ,IAAI,qDAAA,CAAA,KAAA,CAAJ,CAAQ,CAAR,EAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC,IAAzC,EAA+C,IAA/C,EAAqD,IAArD,EAA2D,IAA3D,CAAR;AASA,aAAA,UAAA,GAAa,KAAK,EAAL,CAAQ,KAAR,CAAc;AACzB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CADmB;AAEzB,UAAA,OAAO,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFgB;AAGzB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAHiB;AAIzB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAJiB;AAKzB,UAAA,UAAU,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CALa;AAMzB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CANiB;AAOzB,UAAA,SAAS,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAPc,SAAd,CAAb;AAHE,aAAK,gBAAL;AACD;;AARH;AAAA;AAAA,2CAoBkB;AAAA;;AACd,eAAK,QAAL,CAAc,WAAd,GAA4B,SAA5B,CAAsC,UAAA,MAAM,EAAG;AAC7C,YAAA,OAAI,CAAC,KAAL,GAAa,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAb;AACD,WAFD;AAKD;AA1BH;AAAA;AAAA,mCA2BU,CACP;AA5BH;AAAA;AAAA,+BA8BS,GA9BT,EA8BiB;AAAA;;AACb,eAAK,QAAL,CAAc,SAAd,CAAwB,GAAxB,EAA6B,SAA7B,CAAuC,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,gBAAL;AAAyB,WAA5E;AACD;AAhCH;AAAA;AAAA,+BAiCM;AAAA;;AACF,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,SAAd,CAAwB,KAAK,KAA7B,EAAoC,SAApC,CAA8C,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,gBAAL;AAAyB,WAAnF;AACD;AApCH;AAAA;AAAA,uCAqCc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,uBAApB,EAA6C,OAA7C,EAAsD;AACpD,YAAA,QAAQ,EAAE;AAD0C,WAAtD;AAGD;AAzCH;AAAA;AAAA,6BA2CO,OA3CP,EA2CgB,GA3ChB,EA2CwB;AAAA;;AACpB,eAAK,KAAL,GAAa,GAAb;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AACA,eAAK,YAAL,CAAkB,IAAlB,CAAuB,OAAvB,EAAgC;AAAE,YAAA,cAAc,EAAE;AAAlB,WAAhC,EAAyE,MAAzE,CAAgF,IAAhF,CAAqF,UAAC,MAAD,EAAW;AAC9F,YAAA,OAAI,CAAC,WAAL,0BAAmC,MAAnC;AACD,WAFD,EAEG,UAAC,MAAD,EAAW;AACZ,YAAA,OAAI,CAAC,WAAL,uBAAgC,OAAI,CAAC,gBAAL,CAAsB,MAAtB,CAAhC;AACD,WAJD;AAKD;AAnDH;AAAA;AAAA,yCAoD2B,MApD3B,EAoDsC;AAClC,cAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAgB,MAAhB;AACD;AACF;AA5DH;;AAAA;AAAA,OAAA;;;;cAM0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAuC,uDAAA,CAAA,UAAA;;cAA6B,8CAAA,CAAA,aAAA;;;;AANhH,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL/B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,oBAAb;AAAA;AAAA;AAKE,oCAAoB,EAApB,EAA6C,QAA7C,EAAgF,YAAhF,EAAgH,SAAhH,EAAsI;AAAA;;AAAlH,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,YAAA,GAAA,YAAA;AAAgC,aAAA,SAAA,GAAA,SAAA;AAIhH,aAAA,UAAA,GAAa,KAAK,EAAL,CAAQ,KAAR,CAAc;AACzB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AADmB,SAAd,CAAb;AAHE,aAAK,gBAAL;AACD;;AAPH;AAAA;AAAA,2CAakB;AAAA;;AACd,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,OAAI,CAAC,MAAL,GAAc,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAd;AACD,WAFD;AAGD;AAjBH;AAAA;AAAA,mCAkBU,CACP;AAnBH;AAAA;AAAA,+BAqBS,IArBT,EAqBuB;AAAA;;AACnB,eAAK,QAAL,CAAc,iBAAd,CAAgC,IAAhC,EAAsC,SAAtC,CAAgD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,gBAAL;AAAyB,WAArF;AACD;AAvBH;AAAA;AAAA,+BAyBM;AAAA;;AACF,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,cAAd,CAA6B,KAAK,KAAlC,EAAyC,SAAzC,CAAmD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,gBAAL;AAAyB,WAAxF;AACD;AA5BH;AAAA;AAAA,uCA8Bc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,4BAApB,EAAkD,OAAlD,EAA2D;AACzD,YAAA,QAAQ,EAAE;AAD+C,WAA3D;AAGD;AAlCH;AAAA;AAAA,6BAmCO,OAnCP,EAmCgB,IAnChB,EAmC8B;AAAA;;AAC1B,eAAK,KAAL,GAAa,IAAb;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,KAAjB;AACA,eAAK,YAAL,CAAkB,IAAlB,CAAuB,OAAvB,EAAgC;AAAE,YAAA,cAAc,EAAE;AAAlB,WAAhC,EAAyE,MAAzE,CAAgF,IAAhF,CAAqF,UAAC,MAAD,EAAW;AAC9F,YAAA,OAAI,CAAC,WAAL,0BAAmC,MAAnC;AACD,WAFD,EAEG,UAAC,MAAD,EAAW;AACZ,YAAA,OAAI,CAAC,WAAL,uBAAgC,OAAI,CAAC,gBAAL,CAAsB,MAAtB,CAAhC;AACD,WAJD;AAKD;AA3CH;AAAA;AAAA,yCA4C2B,MA5C3B,EA4CsC;AAClC,cAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,GAAnC,EAAwC;AACtC,mBAAO,iBAAP;AACD,WAFD,MAEO,IAAI,MAAM,KAAK,uDAAA,CAAA,qBAAA,CAAA,CAAoB,cAAnC,EAAmD;AACxD,mBAAO,2BAAP;AACD,WAFM,MAEA;AACL,mCAAgB,MAAhB;AACD;AACF;AApDH;;AAAA;AAAA,OAAA;;;;cAK0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAuC,uDAAA,CAAA,UAAA;;cAA6B,8CAAA,CAAA,aAAA;;;;AALhH,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,kBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,uBAAb;AAAA;AAAA;AAEE,yCAAA;AAAA;AAAiB;;AAFnB;AAAA;AAAA,mCAIU,CACP;AALH;;AAAA;AAAA,OAAA;;AAAa,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALnC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,qBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4GAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKmC,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACPb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iQAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,4BAAb;AAAA;AAAA;AAYE,4CAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAVhF,aAAA,UAAA,GAAa,IAAI,uDAAA,CAAA,OAAA,CAAJ,CAAU,CAAV,EAAa,EAAb,CAAb;AAEA,aAAA,oBAAA,GAAuB,KAAK,EAAL,CAAQ,KAAR,CAAc;AACnC,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAD6B,SAAd,CAAvB;AAUC;;AAdH;AAAA;AAAA,uCAOc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,8BAApB,EAAoD,OAApD,EAA6D;AAC3D,YAAA,QAAQ,EAAE;AADiD,WAA7D;AAGD;AAXH;AAAA;AAAA,mCAgBU,CACP;AAjBH;AAAA;AAAA,mCAmBU;AAAA;;AACN,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,aAAd,CAA4B,KAAK,UAAjC,EAA6C,SAA7C,CAAuD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,UAAL,GAAkB,IAAI,uDAAA,CAAA,OAAA,CAAJ,CAAU,CAAV,EAAa,EAAb,CAAlB;AAAqC,WAAxG;AACD;AAtBH;;AAAA;AAAA,OAAA;;;;cAY0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAZhF,IAAA,4BAA4B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALxC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,2BADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wIAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKwC,CAAA,EAA5B,4BAA4B,CAA5B;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,uBAAb;AAAA;AAAA;AAYE,uCAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAVhF,aAAA,KAAA,GAAQ,IAAI,6DAAA,CAAA,YAAA,CAAJ,CAAe,CAAf,EAAkB,EAAlB,CAAR;AAEA,aAAA,IAAA,GAAO,KAAK,EAAL,CAAQ,KAAR,CAAc;AACnB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AADa,SAAd,CAAP;AAUC;;AAdH;AAAA;AAAA,uCAOc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,gCAApB,EAAsD,OAAtD,EAA+D;AAC7D,YAAA,QAAQ,EAAE;AADmD,WAA/D;AAGD;AAXH;AAAA;AAAA,mCAgBU,CACP;AAjBH;AAAA;AAAA,mCAmBU;AAAA;;AACN,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,aAAd,CAA4B,KAAK,KAAjC,EAAwC,SAAxC,CAAkD,UAAA,MAAM,EAAE;AAAC,YAAA,OAAI,CAAC,KAAL,GAAa,IAAI,6DAAA,CAAA,YAAA,CAAJ,CAAe,CAAf,EAAkB,EAAlB,CAAb;AAAoC,WAA/F;AACD;AAtBH;;AAAA;AAAA,OAAA;;;;cAY0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAZhF,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALnC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,qBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4HAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKmC,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,2BAAb;AAAA;AAAA;AAiCE,2CAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AA/BhF,aAAA,KAAA,GAAQ,IAAI,2DAAA,CAAA,WAAA,CAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,GAA5B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAAR;AAEA,aAAA,MAAA,GAAS,IAAI,iCAAA,CAAA,YAAA,CAAJ,EAAT;AAEA,aAAA,IAAA,GAAO,KAAK,EAAL,CAAQ,KAAR,CAAc;AACnB,UAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CADS;AAEnB,UAAA,UAAU,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFO;AAGnB,UAAA,cAAc,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAHG;AAInB,UAAA,KAAK,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAJY;AAKnB,UAAA,UAAU,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CALO;AAMnB,UAAA,WAAW,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CANM;AAOnB,UAAA,GAAG,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAPc,SAAd,EAQJ;AAAE,UAAA,SAAS,EAAE,KAAK,iBAAL,CAAuB,YAAvB,EAAqC,aAArC;AAAb,SARI,CAAP;AA4BE,aAAK,gBAAL;AACD;;AAnCH;AAAA;AAAA,0CAgBoB,WAhBpB,EAgByC,uBAhBzC,EAgBwE;AACpE,iBAAO,UAAC,KAAD,EAAqB;AAC1B,gBAAI,aAAa,GAAG,KAAK,CAAC,QAAN,CAAe,WAAf,CAApB;AACA,gBAAI,yBAAyB,GAAG,KAAK,CAAC,QAAN,CAAe,uBAAf,CAAhC;;AACA,gBAAI,aAAa,CAAC,KAAd,KAAwB,yBAAyB,CAAC,KAAtD,EAA6D;AAC3D,qBAAO,yBAAyB,CAAC,SAA1B,CAAoC;AAAE,gBAAA,aAAa,EAAE;AAAjB,eAApC,CAAP;AACD,aAFD,MAGK;AACH,cAAA,yBAAyB,CAAC,SAA1B,CAAoC,yBAAyB,CAAC,SAA1B,CAAoC,yBAApC,CAApC;AACD;AACF,WATD;AAUD;AA3BH;AAAA;AAAA,uCA4Bc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,6BAApB,EAAmD,OAAnD,EAA4D;AAC1D,YAAA,QAAQ,EAAE;AADgD,WAA5D;AAGD;AAhCH;AAAA;AAAA,2CAqCkB;AAAA;;AACd,eAAK,QAAL,CAAc,YAAd,GAA6B,SAA7B,CAAuC,UAAA,MAAM,EAAG;AAC9C,YAAA,OAAI,CAAC,MAAL,GAAc,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAd;AACD,WAFD;AAGD;AAzCH;AAAA;AAAA,mCA2CU,CACP;AA5CH;AAAA;AAAA,mCA8CU;AAAA;;AACN,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,KAAL,GAAa,IAAI,2DAAA,CAAA,WAAA,CAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,GAA5B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAAb;AAAgE,WAA7H;AACD;AAjDH;;AAAA;AAAA,OAAA;;;;cAiC0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAjChF,IAAA,2BAA2B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALvC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,yBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oIAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKuC,CAAA,EAA3B,2BAA2B,CAA3B;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,2BAAb;AAAA;AAAA;AAaE,2CAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAXhF,aAAA,KAAA,GAAQ,IAAI,2DAAA,CAAA,WAAA,CAAJ,CAAc,CAAd,EAAiB,EAAjB,CAAR;AAEA,aAAA,IAAA,GAAO,KAAK,EAAL,CAAQ,KAAR,CAAc;AACnB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AADa,SAAd,CAAP;AAWC;;AAfH;AAAA;AAAA,uCAOc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,8BAApB,EAAoD,OAApD,EAA6D;AAC3D,YAAA,QAAQ,EAAE;AADiD,WAA7D;AAGD;AAXH;AAAA;AAAA,mCAiBU,CACP;AAlBH;AAAA;AAAA,mCAoBU;AAAA;;AACN,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,MAAM,EAAG;AAAC,YAAA,OAAI,CAAC,KAAL,GAAa,IAAI,2DAAA,CAAA,WAAA,CAAJ,CAAc,CAAd,EAAiB,EAAjB,CAAb;AAAmC,WAA9F;AACD;AAvBH;;AAAA;AAAA,OAAA;;;;cAa0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAbhF,IAAA,2BAA2B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALvC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,yBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oIAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKuC,CAAA,EAA3B,2BAA2B,CAA3B;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,yBAAb;AAAA;AAAA;AAaE,yCAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAXhF,aAAA,KAAA,GAAQ,IAAI,6DAAA,CAAA,aAAA,CAAJ,CAAgB,CAAhB,EAAmB,EAAnB,CAAR;AAEA,aAAA,IAAA,GAAO,KAAK,EAAL,CAAQ,KAAR,CAAc;AACnB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AADa,SAAd,CAAP;AAWC;;AAfH;AAAA;AAAA,uCAOc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,+BAApB,EAAqD,OAArD,EAA8D;AAC5D,YAAA,QAAQ,EAAE;AADkD,WAA9D;AAGD;AAXH;AAAA;AAAA,mCAiBU,CACP;AAlBH;AAAA;AAAA,mCAoBU;AAAA;;AACN,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,UAAd,CAAyB,KAAK,KAA9B,EAAqC,SAArC,CAA+C,UAAA,MAAM,EAAE;AAAC,YAAA,OAAI,CAAC,KAAL,GAAa,IAAI,6DAAA,CAAA,aAAA,CAAJ,CAAgB,CAAhB,EAAmB,EAAnB,CAAb;AAAqC,WAA7F;AACD;AAvBH;;AAAA;AAAA,OAAA;;;;cAa0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAbhF,IAAA,yBAAyB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALrC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,uBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gIAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKqC,CAAA,EAAzB,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,wBAAb;AAAA;AAAA;AAYE,wCAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AANhF,aAAA,KAAA,GAAQ,IAAI,8DAAA,CAAA,aAAA,CAAJ,CAAgB,CAAhB,EAAmB,EAAnB,CAAR;AAEA,aAAA,IAAA,GAAO,KAAK,EAAL,CAAQ,KAAR,CAAc;AACnB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AADa,SAAd,CAAP;AAMC;;AAdH;AAAA;AAAA,uCACc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,gCAApB,EAAsD,OAAtD,EAA+D;AAC7D,YAAA,QAAQ,EAAE;AADmD,WAA/D;AAGD;AALH;AAAA;AAAA,mCAgBU,CACP;AAjBH;AAAA;AAAA,mCAmBU;AAAA;;AACN,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,cAAd,CAA6B,KAAK,KAAlC,EAAyC,SAAzC,CAAmD,UAAA,MAAM,EAAE;AAAC,YAAA,OAAI,CAAC,KAAL,GAAa,IAAI,8DAAA,CAAA,aAAA,CAAJ,CAAgB,CAAhB,EAAmB,EAAnB,CAAb;AAAqC,WAAjG;AACD;AAtBH;;AAAA;AAAA,OAAA;;;;cAY0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAZhF,IAAA,wBAAwB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALpC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,sBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,8HAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKoC,CAAA,EAAxB,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa,qBAAb;AAAA;AAAA;AAmBE,qCAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAbhF,aAAA,KAAA,GAAQ,IAAI,qDAAA,CAAA,KAAA,CAAJ,CAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,CAAR;AAGA,aAAA,IAAA,GAAO,KAAK,EAAL,CAAQ,KAAR,CAAc;AACnB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CADa;AAEnB,UAAA,OAAO,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFU;AAGnB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAHW;AAInB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAJW;AAKnB,UAAA,UAAU,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CALO;AAMnB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CANW;AAOnB,UAAA,SAAS,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAPQ,SAAd,CAAP;AAWE,aAAK,gBAAL;AACD;;AArBH;AAAA;AAAA,uCACc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,wBAApB,EAA8C,OAA9C,EAAuD;AACrD,YAAA,QAAQ,EAAE;AAD2C,WAAvD;AAGD;AALH;AAAA;AAAA,2CAuBkB;AAAA;;AACd,eAAK,QAAL,CAAc,gBAAd,GAAiC,SAAjC,CAA2C,UAAA,MAAM,EAAG;AAClD,YAAA,OAAI,CAAC,UAAL,GAAkB,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAlB;AACD,WAFD;AAGD;AA3BH;AAAA;AAAA,mCA4BU,CACP;AA7BH;AAAA;AAAA,mCA+BU;AAAA;;AACN,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,MAAd,CAAqB,KAAK,KAA1B,EAAiC,SAAjC,CAA2C,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,KAAL,GAAa,IAAI,qDAAA,CAAA,KAAA,CAAJ,CAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,CAAb;AAAuD,WAA9G;AACD;AAlCH;;AAAA;AAAA,OAAA;;;;cAmB0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAnBhF,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACZb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,0BAAb;AAAA;AAAA;AAaE,0CAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAXhF,aAAA,KAAA,GAAQ,IAAI,2DAAA,CAAA,UAAA,CAAJ,CAAa,CAAb,EAAgB,EAAhB,CAAR;AAEA,aAAA,IAAA,GAAO,KAAK,EAAL,CAAQ,KAAR,CAAc;AACnB,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AADa,SAAd,CAAP;AAWC;;AAfH;AAAA;AAAA,uCAOc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,6BAApB,EAAmD,OAAnD,EAA4D;AAC1D,YAAA,QAAQ,EAAE;AADgD,WAA5D;AAGD;AAXH;AAAA;AAAA,mCAiBU,CACP;AAlBH;AAAA;AAAA,mCAoBU;AAAA;;AACN,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,WAAd,CAA0B,KAAK,KAA/B,EAAsC,SAAtC,CAAgD,UAAA,MAAM,EAAG;AAAG,YAAA,OAAI,CAAC,KAAL,GAAa,IAAI,2DAAA,CAAA,UAAA,CAAJ,CAAa,CAAb,EAAgB,EAAhB,CAAb;AAAmC,WAA/F;AACD;AAvBH;;AAAA;AAAA,OAAA;;;;cAa0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAbhF,IAAA,0BAA0B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALtC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,wBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kIAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKsC,CAAA,EAA1B,0BAA0B,CAA1B;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,uBAAb;AAAA;AAAA;AAEE,yCAAA;AAAA;AAAiB;;AAFnB;AAAA;AAAA,mCAIU,CACP;AALH;;AAAA;AAAA,OAAA;;AAAa,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALnC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,qBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,iHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKmC,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACPb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,WAAb;AAAA;AAAA;AAgCE,2BAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AA/BhF,aAAA,cAAA,GAAiB,IAAI,4DAAA,CAAA,WAAA,CAAJ,CAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C,CAA5C,CAAjB;AACA,aAAA,OAAA,GAAU,KAAV;AAEA,aAAA,SAAA,GAAY,KAAK,EAAL,CAAQ,KAAR,CAAc;AACxB,UAAA,OAAO,EAAE,EADe;AAExB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFgB;AAGxB,UAAA,OAAO,EAAE,CACP;AACE,YAAA,KAAK,EAAE,EADT;AAEE,YAAA,QAAQ,EAAE;AAFZ,WADO,EAKP,2CAAA,CAAA,YAAA,CAAA,CAAW,QALJ,CAHe;AAUxB,UAAA,OAAO,EAAE,CACP;AACE,YAAA,KAAK,EAAE,EADT;AAEE,YAAA,QAAQ,EAAE;AAFZ,WADO,EAKP,2CAAA,CAAA,YAAA,CAAA,CAAW,QALJ;AAVe,SAAd,CAAZ;AAyBA,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AAIE,aAAK,gBAAL;AACD,OAlCH,CAsBE;;;AAtBF;AAAA;AAAA,uCAuBc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,iCAApB,EAAuD,OAAvD,EAAgE;AAC9D,YAAA,QAAQ,EAAE;AADoD,WAAhE;AAGD;AA3BH;AAAA;AAAA,2CAqCkB;AAAA;;AAEd,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,kBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,gBAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,kBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,iBAA5E;;AACA,gBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AACD;AACF,aALD;AAMA,YAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACD,WARD;AAYD,SAnDH,CAqDE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjEF;AAAA;AAAA,yCAmEgB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,UAAR,CAAP;AACD;AArEH;AAAA;AAAA,mCAuEU;AAAA;;AACN,eAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,YAA9B,CAA2C,SAA3C,CAAqD,UAAA,CAAC,EAAG;AACvD,gBAAI,CAAJ,EAAO;AACL,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,OAA9B;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,OAA9B;;AACA,cAAA,OAAI,CAAC,OAAL,GAAe,IAAf;AACD,aAJD,MAIO;AACL,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,MAA9B;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,MAA9B;;AACA,cAAA,OAAI,CAAC,OAAL,GAAe,KAAf;AACD;AACF,WAVD;AAWD;AAnFH;AAAA;AAAA,iCAqFW,QArFX,EAqF2B;AAAA;;AACvB,eAAK,QAAL,CAAc,yBAAd,CAAwC,QAAxC,EAAkD,CAAlD,EAAqD,SAArD,CAA+D,UAAA,MAAM,EAAG;AACtE,YAAA,OAAI,CAAC,cAAL,GAAsB,MAAtB;AACD,WAFD;AAGD;AAzFH;AAAA;AAAA,mCA2FU;AACN,cAAI,KAAK,OAAT,EAAkB;AAChB,iBAAK,cAAL,CAAoB,MAApB,GAA6B,CAA7B;AACD,WAFD,MAEO;AACL,iBAAK,cAAL,CAAoB,MAApB,GAA6B,CAA7B;AACD;;AACD,cAAI,KAAK,cAAL,CAAoB,aAApB,IAAqC,CAAzC,EAA4C;AAC1C,iBAAK,cAAL,CAAoB,aAApB,GAAoC,CAApC;AACD;;AACD,eAAK,QAAL,CAAc,eAAd,CAA8B,KAAK,cAAnC;;AACA,eAAK,YAAL;AACD;AAtGH;;AAAA;AAAA,OAAA;;;;cAgC0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAhChF,IAAA,WAAW,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALvB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,QADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,uGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKuB,CAAA,EAAX,WAAW,CAAX;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,aAAb;AAAA;AAAA;AAiCE,6BAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAhClF,aAAA,OAAA,GAAS,KAAT;AACE,aAAA,cAAA,GAAiB,IAAI,4DAAA,CAAA,WAAA,CAAJ,CAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C,CAA5C,CAAjB;AAGA,aAAA,SAAA,GAAY,KAAK,EAAL,CAAQ,KAAR,CAAc;AACxB,UAAA,OAAO,EAAE,EADe;AAExB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFgB;AAGxB,UAAA,OAAO,EAAE,CACP;AACE,YAAA,KAAK,EAAE,EADT;AAEE,YAAA,QAAQ,EAAE;AAFZ,WADO,EAKP,2CAAA,CAAA,YAAA,CAAA,CAAW,QALJ,CAHe;AAUxB,UAAA,OAAO,EAAE,CACP;AACE,YAAA,KAAK,EAAE,EADT;AAEE,YAAA,QAAQ,EAAE;AAFZ,WADO,EAKP,2CAAA,CAAA,YAAA,CAAA,CAAW,QALJ;AAVe,SAAd,CAAZ;AAyBA,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AAIE,aAAK,gBAAL;AAGD,OArCH,CAuBE;;;AAvBF;AAAA;AAAA,uCAwBc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,iCAApB,EAAuD,OAAvD,EAAgE;AAC9D,YAAA,QAAQ,EAAE;AADoD,WAAhE;AAGD;AA5BH;AAAA;AAAA,2CAwCkB;AAAA;;AAEd,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,kBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,gBAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,kBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,iBAA5E;;AACA,gBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AACD;AACF,aALD;AAMA,YAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACD,WARD;AAYD,SAtDH,CAwDE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AApEF;AAAA;AAAA,yCAsEgB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,UAAR,CAAP;AACD;AAxEH;AAAA;AAAA,mCA0EU;AAAA;;AAEN,eAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,YAA9B,CAA2C,SAA3C,CAAqD,UAAA,CAAC,EAAG;AACvD,gBAAI,CAAJ,EAAO;AACL,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,OAA9B;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,OAA9B;;AACA,cAAA,OAAI,CAAC,OAAL,GAAe,IAAf;AACD,aAJD,MAIO;AACL,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,MAA9B;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,MAA9B;;AACA,cAAA,OAAI,CAAC,OAAL,GAAe,KAAf;AACD;AACF,WAVD;AAWD;AAvFH;AAAA;AAAA,iCAwFW,QAxFX,EAwF2B;AAAA;;AACvB,eAAK,QAAL,CAAc,yBAAd,CAAwC,QAAxC,EAAkD,CAAlD,EAAqD,SAArD,CAA+D,UAAA,MAAM,EAAG;AACtE,YAAA,OAAI,CAAC,cAAL,GAAsB,MAAtB;AACD,WAFD;AAGD;AA5FH;AAAA;AAAA,mCA8FU;AACN,cAAI,KAAK,OAAT,EAAkB;AAChB,iBAAK,cAAL,CAAoB,MAApB,GAA6B,CAA7B;AACD,WAFD,MAEK;AACH,iBAAK,cAAL,CAAoB,MAApB,GAA6B,CAA7B;AACD;;AACD,cAAG,KAAK,cAAL,CAAoB,aAApB,IAAmC,CAAtC,EAAwC;AACtC,iBAAK,cAAL,CAAoB,aAApB,GAAkC,CAAlC;AACD;;AACD,eAAK,QAAL,CAAc,eAAd,CAA8B,KAAK,cAAnC;;AACA,eAAK,YAAL;AACD;AAzGH;;AAAA;AAAA,OAAA;;;;cAiC0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAjChF,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALzB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,UADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,2GAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKyB,CAAA,EAAb,aAAa,CAAb;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,gBAAb;AAAA;AAAA;AAiCE,gCAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAhChF,aAAA,OAAA,GAAU,KAAV;AACA,aAAA,cAAA,GAAiB,IAAI,4DAAA,CAAA,WAAA,CAAJ,CAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C,CAA5C,CAAjB;AAGA,aAAA,SAAA,GAAY,KAAK,EAAL,CAAQ,KAAR,CAAc;AACxB,UAAA,OAAO,EAAE,EADe;AAExB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFgB;AAGxB,UAAA,OAAO,EAAE,CACP;AACE,YAAA,KAAK,EAAE,EADT;AAEE,YAAA,QAAQ,EAAE;AAFZ,WADO,EAKP,2CAAA,CAAA,YAAA,CAAA,CAAW,QALJ,CAHe;AAUxB,UAAA,OAAO,EAAE,CACP;AACE,YAAA,KAAK,EAAE,EADT;AAEE,YAAA,QAAQ,EAAE;AAFZ,WADO,EAKP,2CAAA,CAAA,YAAA,CAAA,CAAW,QALJ;AAVe,SAAd,CAAZ,CA4BsG,CAVtG;;AAEA,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AASE,aAAK,gBAAL;AAGD;;AArCH;AAAA;AAAA,uCA2Bc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,iCAApB,EAAuD,OAAvD,EAAgE;AAC9D,YAAA,QAAQ,EAAE;AADoD,WAAhE;AAGD;AA/BH;AAAA;AAAA,2CAwCkB;AAAA;;AACd,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,kBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,gBAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,kBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,iBAA5E;;AACA,gBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AACD;AACF,aALD;AAMA,YAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACD,WARD;AAYD,SArDH,CAuDE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnEF;AAAA;AAAA,yCAqEgB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,UAAR,CAAP;AACD;AAvEH;AAAA;AAAA,mCAyEU;AAAA;;AAEN,eAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,YAA9B,CAA2C,SAA3C,CAAqD,UAAA,CAAC,EAAG;AACvD,gBAAI,CAAJ,EAAO;AACL,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,OAA9B;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,OAA9B;;AACA,cAAA,OAAI,CAAC,OAAL,GAAe,IAAf;AACD,aAJD,MAIO;AACL,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,MAA9B;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,MAA9B;;AACA,cAAA,OAAI,CAAC,OAAL,GAAe,KAAf;AACD;AACF,WAVD;AAWD;AAtFH;AAAA;AAAA,iCAwFW,QAxFX,EAwF2B;AAAA;;AACvB,eAAK,QAAL,CAAc,yBAAd,CAAwC,QAAxC,EAAkD,CAAlD,EAAqD,SAArD,CAA+D,UAAA,MAAM,EAAG;AACtE,YAAA,OAAI,CAAC,cAAL,GAAsB,MAAtB;AACD,WAFD;AAGD;AA5FH;AAAA;AAAA,mCA8FU;AACN,eAAK,YAAL;;AACA,cAAI,KAAK,OAAT,EAAkB;AAChB,iBAAK,cAAL,CAAoB,MAApB,GAA6B,CAA7B;AACD,WAFD,MAEO;AACL,iBAAK,cAAL,CAAoB,MAApB,GAA6B,CAA7B;AACD;;AACD,cAAI,KAAK,cAAL,CAAoB,aAApB,IAAqC,CAAzC,EAA4C;AAC1C,iBAAK,cAAL,CAAoB,aAApB,GAAoC,CAApC;AACD;;AACD,eAAK,QAAL,CAAc,eAAd,CAA8B,KAAK,cAAnC;AACD;AAzGH;;AAAA;AAAA,OAAA;;;;cAiC0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAjChF,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,aADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,iHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,oBAAb;AAAA;AAAA;AA4BE,oCAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AA3BhF,aAAA,OAAA,GAAU,KAAV;AACA,aAAA,cAAA,GAAiB,IAAI,4DAAA,CAAA,WAAA,CAAJ,CAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C,CAA5C,CAAjB;AAGA,aAAA,SAAA,GAAY,KAAK,EAAL,CAAQ,KAAR,CAAc;AACxB,UAAA,OAAO,EAAE,EADe;AAExB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFgB;AAGxB,UAAA,OAAO,EAAE,CACP;AACE,YAAA,KAAK,EAAE,EADT;AAEE,YAAA,QAAQ,EAAE;AAFZ,WADO,EAKP,2CAAA,CAAA,YAAA,CAAA,CAAW,QALJ,CAHe;AAUxB,UAAA,OAAO,EAAE,CACP;AACE,YAAA,KAAK,EAAE,EADT;AAEE,YAAA,QAAQ,EAAE;AAFZ,WADO,EAKP,2CAAA,CAAA,YAAA,CAAA,CAAW,QALJ;AAVe,SAAd,CAAZ,CAuBsG,CALtG;;AAEA,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AAIE,aAAK,gBAAL;AAGD;;AAhCH;AAAA;AAAA,uCAiCc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,iCAApB,EAAuD,OAAvD,EAAgE;AAC9D,YAAA,QAAQ,EAAE;AADoD,WAAhE;AAGD;AArCH;AAAA;AAAA,2CAwCkB;AAAA;;AACd,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,kBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,gBAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,kBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,iBAA5E;;AACA,gBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AACD;AACF,aALD;AAMA,YAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACD,WARD;AAYD,SArDH,CAuDE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnEF;AAAA;AAAA,yCAqEgB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,UAAR,CAAP;AACD;AAvEH;AAAA;AAAA,mCAyEU;AAAA;;AAEN,eAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,YAA9B,CAA2C,SAA3C,CAAqD,UAAA,CAAC,EAAG;AACvD,gBAAI,CAAJ,EAAO;AACL,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,OAA9B;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,OAA9B;;AACA,cAAA,OAAI,CAAC,OAAL,GAAe,IAAf;AACD,aAJD,MAIO;AACL,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,MAA9B;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,MAA9B;;AACA,cAAA,OAAI,CAAC,OAAL,GAAe,KAAf;AACD;AACF,WAVD;AAWD;AAtFH;AAAA;AAAA,iCAwFW,QAxFX,EAwF2B;AAAA;;AACvB,eAAK,QAAL,CAAc,yBAAd,CAAwC,QAAxC,EAAkD,CAAlD,EAAqD,SAArD,CAA+D,UAAA,MAAM,EAAG;AACtE,YAAA,OAAI,CAAC,cAAL,GAAsB,MAAtB;AACD,WAFD;AAGD;AA5FH;AAAA;AAAA,mCA8FU;AACN,eAAK,YAAL;;AACA,cAAI,KAAK,OAAT,EAAkB;AAChB,iBAAK,cAAL,CAAoB,MAApB,GAA6B,CAA7B;AACD,WAFD,MAEK;AACH,iBAAK,cAAL,CAAoB,MAApB,GAA6B,CAA7B;AACD;;AACD,cAAG,KAAK,cAAL,CAAoB,aAApB,IAAmC,CAAtC,EAAwC;AACtC,iBAAK,cAAL,CAAoB,aAApB,GAAkC,CAAlC;AACD;;AACD,eAAK,QAAL,CAAc,eAAd,CAA8B,KAAK,cAAnC;AACD;AAzGH;;AAAA;AAAA,OAAA;;;;cA4B0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AA5BhF,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,yHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,oBAAb;AAAA;AAAA;AAiCE,oCAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAhChF,aAAA,OAAA,GAAU,KAAV;AACA,aAAA,cAAA,GAAiB,IAAI,4DAAA,CAAA,WAAA,CAAJ,CAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C,CAA5C,CAAjB;AAGA,aAAA,SAAA,GAAY,KAAK,EAAL,CAAQ,KAAR,CAAc;AACxB,UAAA,OAAO,EAAE,EADe;AAExB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFgB;AAGxB,UAAA,OAAO,EAAE,CACP;AACE,YAAA,KAAK,EAAE,EADT;AAEE,YAAA,QAAQ,EAAE;AAFZ,WADO,EAKP,2CAAA,CAAA,YAAA,CAAA,CAAW,QALJ,CAHe;AAUxB,UAAA,OAAO,EAAE,CACP;AACE,YAAA,KAAK,EAAE,EADT;AAEE,YAAA,QAAQ,EAAE;AAFZ,WADO,EAKP,2CAAA,CAAA,YAAA,CAAA,CAAW,QALJ;AAVe,SAAd,CAAZ;AAyBA,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AAIE,aAAK,gBAAL;AAGD,OArCH,CAuBE;;;AAvBF;AAAA;AAAA,uCAwBc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,iCAApB,EAAuD,OAAvD,EAAgE;AAC9D,YAAA,QAAQ,EAAE;AADoD,WAAhE;AAGD;AA5BH;AAAA;AAAA,2CAwCkB;AAAA;;AACd,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,kBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,gBAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,kBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,iBAA5E;;AACA,gBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AACD;AACF,aALD;AAMA,YAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACD,WARD;AAYD,SArDH,CAuDE;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAnEF;AAAA;AAAA,yCAqEgB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,UAAR,CAAP;AACD;AAvEH;AAAA;AAAA,mCAyEU;AAAA;;AAEN,eAAK,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,YAA9B,CAA2C,SAA3C,CAAqD,UAAA,CAAC,EAAG;AACvD,gBAAI,CAAJ,EAAO;AACL,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,OAA9B;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,OAA9B;;AACA,cAAA,OAAI,CAAC,OAAL,GAAe,IAAf;AACD,aAJD,MAIO;AACL,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,MAA9B;;AACA,cAAA,OAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,SAAnB,EAA8B,MAA9B;;AACA,cAAA,OAAI,CAAC,OAAL,GAAe,KAAf;AACD;AACF,WAVD;AAWD;AAtFH;AAAA;AAAA,iCAwFW,QAxFX,EAwF2B;AAAA;;AACvB,eAAK,QAAL,CAAc,yBAAd,CAAwC,QAAxC,EAAkD,CAAlD,EAAqD,SAArD,CAA+D,UAAA,MAAM,EAAG;AACtE,YAAA,OAAI,CAAC,cAAL,GAAsB,MAAtB;AACD,WAFD;AAGD;AA5FH;AAAA;AAAA,mCA8FU;AACN,eAAK,YAAL;;AACA,cAAI,KAAK,OAAT,EAAkB;AAChB,iBAAK,cAAL,CAAoB,MAApB,GAA6B,CAA7B;AACD,WAFD,MAEO;AACL,iBAAK,cAAL,CAAoB,MAApB,GAA6B,CAA7B;AACD;;AACD,cAAI,KAAK,cAAL,CAAoB,aAApB,IAAqC,CAAzC,EAA4C;AAC1C,iBAAK,cAAL,CAAoB,aAApB,GAAoC,CAApC;AACD;;AACD,eAAK,QAAL,CAAc,eAAd,CAA8B,KAAK,cAAnC;AACD;AAzGH;;AAAA;AAAA,OAAA;;;;cAiC0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAjChF,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,yHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,QAAa,2BAAb;AAAA;AAAA;AAiCE,2CAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAhChF,aAAA,WAAA,GAAc,IAAI,KAAJ,EAAd;AAGA,aAAA,OAAA,GAAmB,KAAnB;AAKA,aAAA,SAAA,GAAY,KAAK,EAAL,CAAQ,KAAR,CAAc;AACxB,UAAA,SAAS,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CADa;AAExB,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAFgB,SAAd,CAAZ;AAQA,aAAA,uBAAA,GAA0B,IAAI,sEAAA,CAAA,oBAAA,CAAJ,CAAuB,IAAvB,EAA6B,IAA7B,CAA1B;AAEA,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AAeE,aAAK,gBAAL;AAED;;AApCH;AAAA;AAAA,qCA2Be,OA3Bf,EA2B8B;AAC1B,eAAK,SAAL,CAAe,IAAf,CAAoB,OAApB,EAA6B,OAA7B,EAAsC;AACpC,YAAA,QAAQ,EAAE;AAD0B,WAAtC;AAGD;AA/BH;AAAA;AAAA,2CAsCkB;AAAA;;AACd,eAAK,UAAL,GAAkB,EAAlB;AACA,eAAK,WAAL,GAAmB,EAAnB;;AACA,eAAK,QAAL,CAAc,gBAAd,GAAiC,SAAjC,CAA2C,UAAA,MAAM,EAAG;AAClD,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,SAAS,EAAG;AACjC,cAAA,OAAI,CAAC,WAAL,CAAiB,IAAjB,CAAsB,SAAtB;AACD,aAFD;AAGA,YAAA,OAAI,CAAC,UAAL,GAAkB,OAAI,CAAC,uBAAL,EAAlB;AACD,WALD;;AAOA,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,kBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,gBAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,kBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,iBAA5E;;AACA,gBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AACD;AACF,aALD;AAMA,YAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACD,WARD;;AASA,eAAK,aAAL,GAAqB,EAArB;AACA,eAAK,aAAL,GAAqB,EAArB;AACA,eAAK,aAAL,GAAqB,KAAK,UAA1B;AACA,eAAK,OAAL,GAAe,KAAf;AACD;AA7DH;AAAA;AAAA,4CAgEmB;AACf,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,aAAR,CAAP;AACD;AAlEH;AAAA;AAAA,4CAmEmB;AACf,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,aAAR,CAAP;AACD;AArEH;AAAA;AAAA,kDAuEyB;AACrB,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,WAAR,CAAP;AACD;AAzEH;AAAA;AAAA,yCA2EgB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,UAAR,CAAP;AACD;AA7EH;AAAA;AAAA,mCA+EU,CACP;AAhFH;AAAA;AAAA,iCAkFW,EAlFX,EAkFqB;AAAA;;AACjB,eAAK,EAAL,GAAU,EAAV;AACA,eAAK,aAAL,GAAqB,EAArB;AACA,eAAK,gBAAL;;AACA,eAAK,QAAL,CAAc,yBAAd,GAA0C,SAA1C,CAAoD,UAAA,MAAM,EAAG;AAC3D,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,EAAE,EAAG;AAC1B,cAAA,OAAI,CAAC,aAAL,CAAmB,EAAnB,EAAuB,EAAvB;AACD,aAFD;;AAGA,gBAAI,OAAI,CAAC,OAAT,EAAkB;AAChB,cAAA,OAAI,CAAC,SAAL,GAAiB,EAAjB;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,mCAAd,CAAkD,EAAlD,EAAsD,SAAtD,CAAgE,UAAA,MAAM,EAAG;AACvE,gBAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,OAAO,EAAG;AAC/B,kBAAA,OAAI,CAAC,eAAL,CAAqB,OAAO,CAAC,uBAA7B;;AACA,kBAAA,OAAI,CAAC,aAAL,CAAmB,OAAnB,CAA2B,UAAA,EAAE,EAAG;AAC9B,wBAAI,EAAE,CAAC,EAAH,IAAS,OAAO,CAAC,uBAArB,EAA8C;AAC5C,sBAAA,OAAI,CAAC,aAAL,CAAmB,MAAnB,CAA0B,OAAI,CAAC,aAAL,CAAmB,OAAnB,CAA2B,EAA3B,CAA1B,EAA0D,CAA1D;AACD;AACF,mBAJD;AAKD,iBAPD;AAQD,eATD;;AAUA,cAAA,OAAI,CAAC,YAAL,GAAoB,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,OAAI,CAAC,UAAR,CAApB;AACD,aAbD,MAcK;AACH,cAAA,OAAI,CAAC,UAAL,GAAkB,EAAlB;AACA,cAAA,OAAI,CAAC,YAAL,GAAoB,IAAI,iCAAA,CAAA,YAAA,CAAJ,EAApB;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,gBAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,sBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,oBAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,sBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,qBAA5E;;AACA,oBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AACD;AACF,iBALD;AAMA,gBAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACA,gBAAA,OAAI,CAAC,YAAL,GAAoB,OAAI,CAAC,SAAzB;AAED,eAVD;AAWD;AACF,WAjCD;;AAkCA,eAAK,YAAL,GAAoB,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,aAAR,CAApB;AAED;AA1HH;AAAA;AAAA,sCA4HgB,EA5HhB,EA4HwC,EA5HxC,EA4HkD;AAC9C,cAAI,EAAE,CAAC,WAAH,IAAkB,EAAtB,EAA0B;AACxB,iBAAK,OAAL,GAAe,IAAf;AACD;AACF;AAhIH;AAAA;AAAA,4BAkIM,MAlIN,EAkIqB;AAAA;;AACjB,cAAI,OAAO,GAAG,uDAAd;AACA,eAAK,YAAL,CAAkB,OAAlB;;AACA,eAAK,QAAL,CAAc,oBAAd,CAAmC,MAAM,CAAC,EAA1C,EAA8C,SAA9C,CAAwD,UAAA,MAAM,EAAG;AAC/D,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,OAAO,EAAG;AAC/B,cAAA,OAAI,CAAC,uBAAL,CAA6B,WAA7B,GAA2C,OAAO,CAAC,EAAnD;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,qBAAd,CAAoC,OAAI,CAAC,uBAAzC,EAAkE,SAAlE;AACD,aAHD;AAID,WALD;;AAMA,eAAK,QAAL,CAAc,KAAK,EAAnB;AACD;AA5IH;AAAA;AAAA,gCA8IS,MA9IT,EA8IwB;AAAA;;AACpB,cAAI,OAAO,GAAG,4DAAd;AACA,eAAK,YAAL,CAAkB,OAAlB;;AACA,eAAK,QAAL,CAAc,oBAAd,CAAmC,MAAM,CAAC,EAA1C,EAA8C,SAA9C,CAAwD,UAAA,MAAM,EAAG;AAC/D,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,OAAO,EAAG;AAC/B,cAAA,OAAI,CAAC,uBAAL,CAA6B,WAA7B,GAA2C,OAAO,CAAC,EAAnD;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,wBAAd,CAAuC,OAAI,CAAC,uBAA5C,EAAqE,SAArE;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,OAAI,CAAC,EAAnB;AACD,aAJD;AAKD,WAND;AAQD;AAzJH;AAAA;AAAA,wCA2JkB,EA3JlB,EA2J4B;AAAA;;AACxB,eAAK,SAAL,CAAe,SAAf,CAAyB,UAAA,MAAM,EAAG;AAChC,YAAA,MAAM,CAAC,OAAP,CAAe,UAAA,EAAE,EAAG;AAClB,kBAAI,EAAE,CAAC,EAAH,IAAS,EAAb,EAAiB;AACf,gBAAA,OAAI,CAAC,aAAL,CAAmB,IAAnB,CAAwB,EAAxB;AACD;AACF,aAJD;AAKD,WAND;AAOD;AAnKH;;AAAA;AAAA,OAAA;;;;cAiC0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAjChF,IAAA,2BAA2B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALvC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,yBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,yHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKuC,CAAA,EAA3B,2BAA2B,CAA3B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKb,QAAa,gBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAP5B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,uEAAA,CAAA,yBAAA,CAAD,EAA0B,+EAAA,CAAA,6BAAA,CAA1B,EAAuD,iEAAA,CAAA,eAAA,CAAvD,EAAsE,+EAAA,CAAA,sBAAA,CAAtE,EAA4F,6DAAA,CAAA,aAAA,CAA5F,EAAyG,uEAAA,CAAA,kBAAA,CAAzG,EAA2H,+EAAA,CAAA,sBAAA,CAA3H,CADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,mDAAA,CAAA,cAAA,CAFO;AAFD,KAAT,CAO4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBb,QAAM,MAAM,GAAW,EAAvB;;AAMA,QAAa,gBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ5B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,OAAb,CAAqB,MAArB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAI4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACVb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,o6BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,YAAb;AAAA;AAAA;AAME,4BAAoB,QAApB,EAAuD,MAAvD,EAA+E,kBAA/E,EAAqH;AAAA;;AAAA;;AAAjG,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,MAAA,GAAA,MAAA;AAAwB,aAAA,kBAAA,GAAA,kBAAA;AAJ/E,aAAA,MAAA,GAAkB,KAAlB;AACA,aAAA,KAAA,GAAQ,iBAAR;AAoBA,aAAA,UAAA,GAAkC,KAAK,kBAAL,CAAwB,OAAxB,CAAgC,gDAAA,CAAA,aAAA,CAAA,CAAY,OAA5C,EAC/B,IAD+B,CAE9B,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CAAI,UAAA,MAAM;AAAA,iBAAI,MAAM,CAAC,OAAX;AAAA,SAAV,CAF8B,EAG9B,MAAA,CAAA,2CAAA,CAAA,aAAA,CAAA,CAAA,EAH8B,CAAlC;;AAhBE,aAAK,QAAL,CAAc,UAAd,CAAyB,SAAzB,CAAmC,UAAA,CAAC,EAAG;AACrC,UAAA,OAAI,CAAC,KAAL,GAAa,CAAC,CAAC,OAAF,EAAb;AACD,SAFD;;AAIA,aAAK,QAAL,CAAc,OAAd,CAAsB,SAAtB,CAAgC,UAAA,CAAC,EAAG;AAClC,UAAA,OAAI,CAAC,KAAL,GAAa,CAAC,CAAC,OAAF,EAAb;AACD,SAFD;AAGD;;AAdH;AAAA;AAAA,iCAgBQ;AACJ,UAAA,YAAY,CAAC,UAAb,CAAwB,OAAxB;;AACA,eAAK,QAAL,CAAc,UAAd,CAAyB,IAAzB,CAA8B,CAAC,KAAK,KAAN,GAAc,IAAd,GAAqB,KAAnD;;AACA,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,QAAL,CAAc,UAAd,CAAyB,KAArC;AACD;AArBH;;AAAA;AAAA,OAAA;;;;cAMgC,uDAAA,CAAA,iBAAA;;cAAiC,4CAAA,CAAA,QAAA;;cAAoC,gDAAA,CAAA,oBAAA;;;;AALzD,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAzC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,8CAAA,CAAA,YAAA,CAAV,EAAsB;AAAE,MAAA,MAAM,EAAE;AAAV,KAAtB,CAAyC,CAAA,E,sBAAA,E,SAAA,E,KAAoB,CAApB;AAD/B,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALxB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,UADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,0EAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKwB,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiCb,QAAM,SAAS,GAAW,CACxB;AAAE,MAAA,IAAI,EAAE,EAAR;AAAY,MAAA,SAAS,EAAE,iDAAA,CAAA,eAAA;AAAvB,KADwB,EAExB;AAAE,MAAA,IAAI,EAAE,eAAR;AAAyB,MAAA,SAAS,EAAE,6EAAA,CAAA,wBAAA;AAApC,KAFwB,EAGxB;AAAE,MAAA,IAAI,EAAE,WAAR;AAAqB,MAAA,SAAS,EAAE,mEAAA,CAAA,oBAAA;AAAhC,KAHwB,EAIxB;AAAE,MAAA,IAAI,EAAE,WAAR;AAAqB,MAAA,SAAS,EAAE,sEAAA,CAAA,oBAAA;AAAhC,KAJwB,EAKxB;AAAE,MAAA,IAAI,EAAE,UAAR;AAAoB,MAAA,SAAS,EAAE,oEAAA,CAAA,mBAAA;AAA/B,KALwB,EAMxB;AAAE,MAAA,IAAI,EAAE,SAAR;AAAmB,MAAA,SAAS,EAAE,wDAAA,CAAA,kBAAA;AAA9B,KANwB,EAOxB;AAAE,MAAA,IAAI,EAAE,WAAR;AAAqB,MAAA,SAAS,EAAE,mFAAA,CAAA,yBAAA;AAAhC,KAPwB,EAQxB;AAAE,MAAA,IAAI,EAAE,eAAR;AAAyB,MAAA,SAAS,EAAE,2FAAA,CAAA,6BAAA;AAApC,KARwB,EASxB;AAAE,MAAA,IAAI,EAAE,eAAR;AAAyB,MAAA,SAAS,EAAE,sEAAA,CAAA,wBAAA;AAApC,KATwB,EAUxB;AAAE,MAAA,IAAI,EAAE,QAAR;AAAkB,MAAA,SAAS,EAAE,8GAAA,CAAA,kCAAA;AAA7B,KAVwB,EAWxB;AAAE,MAAA,IAAI,EAAE,WAAR;AAAqB,MAAA,SAAS,EAAE,sHAAA,CAAA,qCAAA;AAAhC,KAXwB,EAYxB;AAAE,MAAA,IAAI,EAAE,YAAR;AAAsB,MAAA,SAAS,EAAE,8GAAA,CAAA,kCAAA;AAAjC,KAZwB,EAaxB;AAAE,MAAA,IAAI,EAAE,gBAAR;AAA0B,MAAA,SAAS,EAAE,8EAAA,CAAA,yBAAA;AAArC,KAbwB,EAcxB;AAAE,MAAA,IAAI,EAAE,OAAR;AAAiB,MAAA,SAAS,EAAE,oDAAA,CAAA,gBAAA;AAA5B,KAdwB,EAgBxB;AAAE,MAAA,IAAI,EAAE,WAAR;AAAqB,MAAA,SAAS,EAAE,8EAAA,CAAA,yBAAA;AAAhC,KAhBwB,CAA1B;;AA4DA,QAAa,SAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,SAAS,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAxCrB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CACZ,2CAAA,CAAA,cAAA,CADY,EAEZ,8GAAA,CAAA,kCAAA,CAFY,EAGZ,sHAAA,CAAA,qCAAA,CAHY,EAIZ,8GAAA,CAAA,kCAAA,CAJY,EAKZ,0GAAA,CAAA,8BAAA,CALY,EAMZ,0FAAA,CAAA,uBAAA,CANY,EAOZ,8FAAA,CAAA,yBAAA,CAPY,EAQZ,kGAAA,CAAA,2BAAA,CARY,EASZ,gGAAA,CAAA,0BAAA,CATY,EAUZ,sGAAA,CAAA,6BAAA,CAVY,EAWZ,oDAAA,CAAA,gBAAA,CAXY,EAYZ,8EAAA,CAAA,yBAAA,CAZY,EAaZ,8EAAA,CAAA,yBAAA,CAbY,EAcZ,0FAAA,CAAA,uBAAA,CAdY,EAeZ,0FAAA,CAAA,uBAAA,CAfY,EAgBZ,kGAAA,CAAA,2BAAA,CAhBY,EAiBZ,8FAAA,CAAA,yBAAA,CAjBY,EAkBZ,4FAAA,CAAA,wBAAA,CAlBY,EAmBZ,sFAAA,CAAA,qBAAA,CAnBY,EAoBZ,oGAAA,CAAA,4BAAA,CApBY,EAqBZ,sGAAA,CAAA,6BAAA,CArBY,EAsBZ,kGAAA,CAAA,2BAAA,CAtBY,EAuBZ,wFAAA,CAAA,sBAAA,CAvBY,CADN;AA0BR,MAAA,OAAO,EAAE,CACP,+CAAA,CAAA,YAAA,CADO,EAEP,qDAAA,CAAA,eAAA,CAFO,EAGP,sDAAA,CAAA,eAAA,CAHO,EAIP,gDAAA,CAAA,kBAAA,CAJO,EAKP,kDAAA,CAAA,cAAA,CALO,EAMP,2DAAA,CAAA,kBAAA,CANO,EAOP,mEAAA,CAAA,qBAAA,CAPO,EAQP,4CAAA,CAAA,cAAA,CAAA,CAAa,OAAb,CAAqB,SAArB,EAAgC;AAAE,QAAA,aAAa,EAAE;AAAjB,OAAhC,CARO,CA1BD;AAqCR,MAAA,SAAS,EAAE,EArCH;AAsCR,MAAA,SAAS,EAAE,CAAC,2CAAA,CAAA,cAAA,CAAD;AAtCH,KAAT,CAwCqB,CAAA,EAAT,SAAS,CAAT;;;;;;;;;;;;;;;;AC1Gb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qLAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAa,aAAb;AAAA;AAAA;AAGE,6BAAoB,MAApB,EAA4C,QAA5C,EAAqE;AAAA;;AAAA;;AAAjD,aAAA,MAAA,GAAA,MAAA;AAAwB,aAAA,QAAA,GAAA,QAAA;;AAC1C,aAAK,QAAL,CAAc,UAAd,CAAyB,SAAzB,CAAmC,UAAA,CAAC,EAAG;AACrC,UAAA,OAAI,CAAC,KAAL,GAAa,CAAC,CAAC,OAAF,EAAb;AACD,SAFD;AAGD;;AAPH;AAAA;AAAA,mCASU,CACP;AAVH;AAAA;AAAA,gCAYO;AACH,eAAK,MAAL,CAAY,aAAZ,CAA0B,QAA1B;AACD;AAdH;;AAAA;AAAA,OAAA;;;;cAG8B,4CAAA,CAAA,QAAA;;cAA0B,uDAAA,CAAA,iBAAA;;;;AAH3C,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALzB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,UADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,gFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKyB,CAAA,EAAb,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKb,QAAa,UAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,UAAU,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAPtB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,4CAAA,CAAA,eAAA,CAAD,CADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,kDAAA,CAAA,cAAA,CAFO;AAFD,KAAT,CAOsB,CAAA,EAAV,UAAU,CAAV;;;;;;;;;;;;;;;;ACdb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yLAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,cAAb;AAAA;AAAA;AASE,8BAAoB,EAApB,EAA6C,QAA7C,EAAgF,MAAhF,EAA8F;AAAA;;AAA1E,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,MAAA,GAAA,MAAA;AAPhF,aAAA,KAAA,GAAmB,IAAI,qDAAA,CAAA,WAAA,CAAJ,CAAc,EAAd,EAAkB,EAAlB,CAAnB;AACA,aAAA,SAAA,GAAY,KAAK,EAAL,CAAQ,KAAR,CAAc;AACxB,UAAA,KAAK,EAAE,CAAC,EAAD,EAAK,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,KAAjC,CAAL,CADiB;AAExB,UAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAFc,SAAd,CAAZ;AAMmG;;AATrG;AAAA;AAAA,mCAWU,CACP;AAZH;AAAA;AAAA,mCAcU;AAAA;;AACN,eAAK,QAAL,CAAc,YAAd,CAA2B,KAAK,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,MAAM,EAAG;AACxD,YAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,IAAzB,CAA8B,MAAM,CAAC,EAAP,GAAY,IAAZ,GAAmB,KAAjD;;AACA,YAAA,YAAY,CAAC,OAAb,CAAqB,OAArB,EAA8B,MAAM,CAAC,EAAP,CAAU,QAAV,EAA9B;;AACA,YAAA,OAAI,CAAC,MAAL,CAAY,aAAZ,CAA0B,EAA1B;;AACA,YAAA,OAAI,CAAC,QAAL,CAAc,OAAd,CAAsB,MAAtB;;AACA,gBAAI,MAAM,CAAC,KAAP,IAAgB,CAApB,EAAuB;AACrB,cAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,IAAzB;AACD,aAFD,MAEO;AACL,cAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,KAAzB;AACD;AACF,WAVD;AAWD;AA1BH;;AAAA;AAAA,OAAA;;;;cAS0B,2CAAA,CAAA,aAAA;;cAA+B,uDAAA,CAAA,iBAAA;;cAAiC,4CAAA,CAAA,QAAA;;;;AAT7E,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCXA,kB,GACT,4BAAmB,WAAnB,EAA+C,WAA/C,EAAkE;AAAA;;AAA/C,WAAA,WAAA,GAAA,WAAA;AAA4B,WAAA,WAAA,GAAA,WAAA;AAAwB,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCD9D,S,GACT,mBAAmB,EAAnB,EAAsC,YAAtC,EAAmE,aAAnE,EAAiG,aAAjG,EAA+H,aAA/H,EAA6J,MAA7J,EAA2K;AAAA;;AAAxJ,WAAA,EAAA,GAAA,EAAA;AAAmB,WAAA,YAAA,GAAA,YAAA;AAA6B,WAAA,aAAA,GAAA,aAAA;AAA8B,WAAA,aAAA,GAAA,aAAA;AAA8B,WAAA,aAAA,GAAA,aAAA;AAA8B,WAAA,MAAA,GAAA,MAAA;AAAmB,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCDvK,K,GACT,eAAmB,EAAnB,EAAsC,UAAtC,EAAwD;AAAA;;AAArC,WAAA,EAAA,GAAA,EAAA;AAAmB,WAAA,UAAA,GAAA,UAAA;AAAqB,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCDlD,K,GACT,eAAmB,EAAnB,EAAsC,YAAtC,EAAmE,aAAnE,EAAiG,WAAjG,EAA6H,KAA7H,EAAwI;AAAA;;AAArH,WAAA,EAAA,GAAA,EAAA;AAAmB,WAAA,YAAA,GAAA,YAAA;AAA6B,WAAA,aAAA,GAAA,aAAA;AAA8B,WAAA,WAAA,GAAA,WAAA;AAA4B,WAAA,KAAA,GAAA,KAAA;AAAgB,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCDpI,S,GACT,mBAAmB,EAAnB,EAAsC,KAAtC,EAA4D,QAA5D,EAAqF,IAArF,EAA0G,cAA1G,EAAyI,UAAzI,EAAoK,KAApK,EAA0L,cAA1L,EAAyN,GAAzN,EAAoO;AAAA;;AAAjN,WAAA,EAAA,GAAA,EAAA;AAAmB,WAAA,KAAA,GAAA,KAAA;AAAsB,WAAA,QAAA,GAAA,QAAA;AAAyB,WAAA,IAAA,GAAA,IAAA;AAAqB,WAAA,cAAA,GAAA,cAAA;AAA+B,WAAA,UAAA,GAAA,UAAA;AAA2B,WAAA,KAAA,GAAA,KAAA;AAAsB,WAAA,cAAA,GAAA,cAAA;AAA+B,WAAA,GAAA,GAAA,GAAA;AAAgB,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCDhO,S,GACT,mBAAmB,EAAnB,EAAsC,IAAtC,EAAkD;AAAA;;AAA/B,WAAA,EAAA,GAAA,EAAA;AAAmB,WAAA,IAAA,GAAA,IAAA;AAAiB,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCE9C,M,GACT,gBAAmB,EAAnB,EAAsC,aAAtC,EAAoE,aAApE,EAAkG,WAAlG,EAA8H,MAA9H,EAAqJ,IAArJ,EAAwK,WAAxK,EAA4M;AAAA;;AAAzL,WAAA,EAAA,GAAA,EAAA;AAAmB,WAAA,aAAA,GAAA,aAAA;AAA8B,WAAA,aAAA,GAAA,aAAA;AAA8B,WAAA,WAAA,GAAA,WAAA;AAA4B,WAAA,MAAA,GAAA,MAAA;AAAuB,WAAA,IAAA,GAAA,IAAA;AAAmB,WAAA,WAAA,GAAA,WAAA;AAAuC,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCJtM,W,GACT,qBAAmB,EAAnB,EAAsC,OAAtC,EAAqD;AAAA;;AAAlC,WAAA,EAAA,GAAA,EAAA;AAAmB,WAAA,OAAA,GAAA,OAAA;AAAkB,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCG/C,O,GAET,iBAAmB,EAAnB,EAAsC,KAAtC,EAA4D,aAA5D,EAA0F,MAA1F,EAAiH,eAAjH,EAAiJ,KAAjJ,EAAuK,QAAvK,EAAgM,GAAhM,EAA6N,KAA7N,EAAgQ,QAAhQ,EAAyR,UAAzR,EAA2S;AAAA;;AAAxR,WAAA,EAAA,GAAA,EAAA;AAAmB,WAAA,KAAA,GAAA,KAAA;AAAsB,WAAA,aAAA,GAAA,aAAA;AAA8B,WAAA,MAAA,GAAA,MAAA;AAAuB,WAAA,eAAA,GAAA,eAAA;AAAgC,WAAA,KAAA,GAAA,KAAA;AAAsB,WAAA,QAAA,GAAA,QAAA;AAAyB,WAAA,GAAA,GAAA,GAAA;AAA6B,WAAA,KAAA,GAAA,KAAA;AAAmC,WAAA,QAAA,GAAA,QAAA;AAAyB,WAAA,UAAA,GAAA,UAAA;AAExR,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCRQ,U,GACT,oBAAmB,YAAnB,EAAgD,IAAhD,EAA4D;AAAA;;AAAzC,WAAA,YAAA,GAAA,YAAA;AAA6B,WAAA,IAAA,GAAA,IAAA;AAE/C,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCHQ,W,GACT,qBAAmB,EAAnB,EAAsC,IAAtC,EAAkD;AAAA;;AAA/B,WAAA,EAAA,GAAA,EAAA;AAAmB,WAAA,IAAA,GAAA,IAAA;AAErC,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCHQ,S,GAIT,mBAAY,KAAZ,EAA2B,UAA3B,EAA6C;AAAA;;AACzC,WAAK,KAAL,GAAa,KAAb;AACA,WAAK,UAAL,GAAkB,UAAlB;AACH,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCPQ,G,GACT,aAAmB,EAAnB,EAAsC,MAAtC,EAA6D,SAA7D,EAAuF,OAAvF,EAA+G,OAA/G,EAAuI,MAAvI,EAA8J,MAA9J,EAAqL,UAArL,EAAgN,MAAhN,EAAuO,WAAvO,EAA0P;AAAA;;AAAvO,WAAA,EAAA,GAAA,EAAA;AAAmB,WAAA,MAAA,GAAA,MAAA;AAAuB,WAAA,SAAA,GAAA,SAAA;AAA0B,WAAA,OAAA,GAAA,OAAA;AAAwB,WAAA,OAAA,GAAA,OAAA;AAAwB,WAAA,MAAA,GAAA,MAAA;AAAuB,WAAA,MAAA,GAAA,MAAA;AAAuB,WAAA,UAAA,GAAA,UAAA;AAA2B,WAAA,MAAA,GAAA,MAAA;AAAuB,WAAA,WAAA,GAAA,WAAA;AAAwB,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCDtP,gB,GACT,0BAAmB,aAAnB,EAAiD,YAAjD,EAAqE;AAAA;;AAAlD,WAAA,aAAA,GAAA,aAAA;AAA8B,WAAA,YAAA,GAAA,YAAA;AAAuB,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCD/D,Q,GACT,kBAAmB,EAAnB,EAAsC,IAAtC,EAAkD;AAAA;;AAA/B,WAAA,EAAA,GAAA,EAAA;AAAmB,WAAA,IAAA,GAAA,IAAA;AAAiB,K;;;;;;;;;;;;;;;;;ACD3D,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,QAAa,iBAAb;AAAA;AAAA;AAiBE,iCAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAfhF,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AAGA,aAAA,UAAA,GAAa,IAAI,uDAAA,CAAA,OAAA,CAAJ,CAAU,CAAV,EAAa,IAAb,EAAmB,CAAnB,EAAsB,GAAtB,EAA2B,IAAI,IAAJ,EAA3B,CAAb;AAEA,aAAA,YAAA,GAAe,KAAK,EAAL,CAAQ,KAAR,CAAc;AAC3B,UAAA,GAAG,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CADsB;AAE3B,UAAA,UAAU,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFe;AAG3B,UAAA,KAAK,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAHoB,SAAd,CAAf;;AAYE,QAAA,QAAQ,CAAC,eAAT,GAA2B,SAA3B,CAAqC,UAAA,MAAM,EAAG;AAC5C,UAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,gBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,cAAA,QAAQ,CAAC,UAAT,CAAoB,MAAM,CAAC,KAA3B,EAAkC,SAAlC,CAA4C,UAAA,GAAG,EAAG;AAAG,gBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,eAAvE;;AACA,cAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AACD;AACF,WALD;AAMA,UAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACD,SARD;;AAWA,QAAA,QAAQ,CAAC,kBAAT,GAA8B,SAA9B,CAAwC,UAAA,MAAM,EAAG;AAC/C,UAAA,OAAI,CAAC,MAAL,GAAc,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAd;AACD,SAFD;AAGD;;AAjCH;AAAA;AAAA,uCAYc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,wCAApB,EAA8D,OAA9D,EAAuE;AACrE,YAAA,QAAQ,EAAE;AAD2D,WAAvE;AAGD;AAhBH;AAAA;AAAA,mCAmCU,CACP;AApCH;AAAA;AAAA,yCAsCgB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,UAAR,CAAP;AACD;AAxCH;AAAA;AAAA,mCA0CU;AACN,eAAK,YAAL;AACA,eAAK,UAAL,CAAgB,WAAhB,GAA8B,YAAY,CAAC,OAAb,CAAqB,OAArB,CAA9B;AAEA,eAAK,QAAL,CAAc,QAAd,CAAuB,KAAK,UAA5B,EAAwC,SAAxC;AACD;AA/CH;;AAAA;AAAA,OAAA;;;;cAiB0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAjBhF,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK6B,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACfb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,QAAa,kBAAb;AAAA;AAAA;AAkBE,kCAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAjBhF,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AAIA,aAAA,WAAA,GAAc,IAAI,wDAAA,CAAA,QAAA,CAAJ,CAAW,CAAX,EAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,IAAI,IAAJ,EAAtC,EAAkD,IAAlD,CAAd;AAEA,aAAA,aAAA,GAAgB,KAAK,EAAL,CAAQ,KAAR,CAAc;AAC5B,UAAA,GAAG,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CADuB;AAE5B,UAAA,WAAW,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAFe;AAG5B,UAAA,aAAa,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAHa;AAI5B,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAJsB,SAAd,CAAhB;AAYE,aAAK,gBAAL;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,KAAK,WAAL,CAAiB,IAA7B;AACD;;AArBH;AAAA;AAAA,uCAac;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,yCAApB,EAA+D,OAA/D,EAAwE;AACtE,YAAA,QAAQ,EAAE;AAD4D,WAAxE;AAGD;AAjBH;AAAA;AAAA,2CAuBkB;AAAA;;AACd,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,kBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,gBAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,kBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,iBAA5E;;AACA,gBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AACD;AACF,aALD;AAMA,YAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACD,WARD;;AAUA,eAAK,QAAL,CAAc,mBAAd,GAAoC,SAApC,CAA8C,UAAA,MAAM,EAAG;AACrD,YAAA,OAAI,CAAC,QAAL,GAAgB,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAhB;AACD,WAFD;AAGD;AArCH;AAAA;AAAA,mCAsCU,CACP;AAvCH;AAAA;AAAA,yCAwCgB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,UAAR,CAAP;AACD;AA1CH;AAAA;AAAA,mCA4CU;AACN,eAAK,YAAL;AACA,eAAK,WAAL,CAAiB,WAAjB,GAA+B,YAAY,CAAC,OAAb,CAAqB,OAArB,CAA/B;AAEA,eAAK,QAAL,CAAc,SAAd,CAAwB,KAAK,WAA7B,EAA0C,SAA1C;AACD;AAjDH;;AAAA;AAAA,OAAA;;;;cAkB0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAlBhF,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,gBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACfb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa,kBAAb;AAAA;AAAA;AAOE,kCAAoB,QAApB,EAAuD,SAAvD,EAA6E;AAAA;;AAAzD,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AALvD,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AAME,aAAK,gBAAL;AAED;;AAVH;AAAA;AAAA,uCAWc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,2BAApB,EAAiD,OAAjD,EAA0D;AACxD,YAAA,QAAQ,EAAE;AAD8C,WAA1D;AAGD;AAfH;AAAA;AAAA,2CAgBkB;AAAA;;AACd,eAAK,UAAL,GAAkB,IAAI,KAAJ,EAAlB;;AACA,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,kBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,gBAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,kBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,iBAA5E;;AACA,gBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AAED;AACF,aAND;AAOA,YAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACD,WATD;AAUD;AA5BH;AAAA;AAAA,mCA6BU,CACP;AA9BH;AAAA;AAAA,yCA+BgB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,UAAR,CAAP;AACD;AAjCH;AAAA;AAAA,8BAkCQ,MAlCR,EAkCuB;AAAA;;AACnB,eAAK,YAAL;AACA,UAAA,MAAM,CAAC,MAAP,GAAgB,CAAhB;;AACA,eAAK,QAAL,CAAc,aAAd,CAA4B,MAA5B,EAAoC,SAApC,CAA8C,UAAA,MAAM,EAAG;AACrD,YAAA,MAAM,CAAC,GAAP,GAAa,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,CAAb;AACA,YAAA,MAAM,CAAC,GAAP,CAAW,SAAX,CAAqB,UAAA,MAAM,EAAG;AAC5B,cAAA,MAAM,CAAC,SAAP,GAAmB,CAAnB;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,SAAd,CAAwB,MAAxB,EAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,gBAAA,OAAI,CAAC,gBAAL;AACD,eAFD;AAGD,aALD;AAOD,WATD;AAWD;AAhDH;;AAAA;AAAA,OAAA;;;;cAOgC,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AAPvD,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACZb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkBf,QAAa,sBAAb;AAAA;AAAA;AAoBE,sCAAoB,EAApB,EAA6C,QAA7C,EAAgF,SAAhF,EAAsG;AAAA;;AAAlF,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,SAAA,GAAA,SAAA;AAlBhF,aAAA,MAAA,GAAS,IAAI,KAAJ,EAAT;AAGA,aAAA,WAAA,GAAc,IAAI,yDAAA,CAAA,SAAA,CAAJ,CAAY,CAAZ,EAAe,IAAf,EAAqB,IAArB,EAA2B,CAA3B,EAA8B,IAA9B,EAAoC,IAApC,EAA0C,IAA1C,EAAgD,IAAhD,EAAsD,IAAtD,EAA4D,IAA5D,EAAkE,CAAlE,CAAd;AACA,aAAA,YAAA,GAAe,IAAI,KAAJ,EAAf;AAIA,aAAA,iBAAA,GAAoB,KAAK,EAAL,CAAQ,KAAR,CAAc;AAChC,UAAA,GAAG,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAD2B;AAEhC,UAAA,IAAI,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAF0B;AAGhC,UAAA,eAAe,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAHe;AAIhC,UAAA,KAAK,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAJyB;AAKhC,UAAA,GAAG,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CAL2B;AAMhC,UAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB,CANsB;AAOhC,UAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAhB;AAPsB,SAAd,CAApB;AAWE,aAAK,gBAAL;AACD;;AAtBH;AAAA;AAAA,uCAwBc;AACV,eAAK,SAAL,CAAe,IAAf,CAAoB,2BAApB,EAAiD,OAAjD,EAA0D;AACxD,YAAA,QAAQ,EAAE;AAD8C,WAA1D;AAGD;AA5BH;AAAA;AAAA,iCA8BW,KA9BX,EA8BuB;AACnB,cAAI,KAAK,GAAG,KAAK,YAAL,CAAkB,OAAlB,CAA0B,KAA1B,CAAZ;;AACA,cAAI,KAAK,IAAI,CAAC,CAAd,EAAiB;AACf,iBAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAvB;AACD,WAFD,MAEO;AACL,iBAAK,YAAL,CAAkB,MAAlB,CAAyB,KAAzB,EAAgC,CAAhC;AACD;;AACD,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,YAAjB;AACD;AAtCH;AAAA;AAAA,2CAwCkB;AAAA;;AACd,eAAK,WAAL,GAAmB,IAAI,yDAAA,CAAA,SAAA,CAAJ,CAAY,CAAZ,EAAe,IAAf,EAAqB,IAArB,EAA2B,CAA3B,EAA8B,IAA9B,EAAoC,IAApC,EAA0C,IAA1C,EAAgD,IAAhD,EAAsD,IAAtD,EAA4D,IAA5D,EAAkE,CAAlE,CAAnB;AACA,eAAK,MAAL,GAAc,IAAI,KAAJ,EAAd;;AACA,eAAK,QAAL,CAAc,WAAd,GAA4B,SAA5B,CAAsC,UAAA,MAAM,EAAG;AAC7C,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,GAAG,EAAG;AAC3B,kBAAI,GAAG,CAAC,SAAJ,IAAiB,CAArB,EAAwB;AACtB,gBAAA,OAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,GAAjB;AACD;AACF,aAJD;AAKA,YAAA,OAAI,CAAC,KAAL,GAAa,OAAI,CAAC,cAAL,EAAb;AAED,WARD;;AAWA,eAAK,QAAL,CAAc,kBAAd,GAAmC,SAAnC,CAA6C,UAAA,MAAM,EAAG;AACpD,YAAA,OAAI,CAAC,OAAL,GAAe,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAf;AAED,WAHD;;AAIA,eAAK,QAAL,CAAc,kBAAd,GAAmC,SAAnC,CAA6C,UAAA,MAAM,EAAG;AACpD,YAAA,OAAI,CAAC,MAAL,GAAc,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAd;AACD,WAFD;;AAGA,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,OAAI,CAAC,SAAL,GAAiB,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,MAAM,CAAC,OAAV,CAAjB;AACD,WAFD;AAGD;AAhEH;AAAA;AAAA,mCAkEU,CACP;AAnEH;AAAA;AAAA,yCAqEgB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,MAAR,CAAP;AACD;AAvEH;AAAA;AAAA,mCAwEU;AAAA;;AACN,eAAK,YAAL;;AACA,eAAK,QAAL,CAAc,SAAd,CAAwB,KAAK,WAA7B,EAA0C,SAA1C,CAAoD,UAAA,MAAM,EAAG;AAC3D,YAAA,OAAI,CAAC,WAAL,CAAiB,GAAjB,GAAuB,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,OAAI,CAAC,WAAL,CAAiB,KAA1C,CAAvB;;AACA,YAAA,OAAI,CAAC,WAAL,CAAiB,GAAjB,CAAqB,SAArB,CAA+B,UAAA,MAAM,EAAG;AACtC,cAAA,OAAO,CAAC,GAAR,CAAY,MAAZ;AACA,cAAA,MAAM,CAAC,SAAP,GAAmB,CAAnB;;AACA,cAAA,OAAI,CAAC,QAAL,CAAc,SAAd,CAAwB,MAAxB,EAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,gBAAA,OAAI,CAAC,gBAAL;;AACA,gBAAA,OAAI,CAAC,QAAL,CAAc,cAAd,GAA+B,SAA/B,CAAyC,UAAA,MAAM,EAAG;AAChD,uBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EAA4B;AAC1B,oBAAA,OAAI,CAAC,QAAL,CAAc,YAAd,CAA2B,IAAI,4DAAA,CAAA,WAAA,CAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,MAAM,CAAC,EAA3B,EAA+B,EAA/B,EAAmC,CAAnC,EAAsC,CAAtC,CAA3B,EAAqE,SAArE;AACD;;AACD,kBAAA,OAAI,CAAC,YAAL,CAAkB,OAAlB,CAA0B,UAAA,EAAE,EAAG;AAC7B,oBAAA,OAAI,CAAC,QAAL,CAAc,mBAAd,CAAkC,IAAI,mEAAA,CAAA,kBAAA,CAAJ,CAAqB,MAAM,CAAC,EAA5B,EAAgC,EAAE,CAAC,EAAnC,CAAlC;AACD,mBAFD;AAGD,iBAPD;AASD,eAXD;AAYD,aAfD;AAgBD,WAlBD;AAoBD;AA9FH;;AAAA;AAAA,OAAA;;;;cAoB0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAoC,8CAAA,CAAA,aAAA;;;;AApBhF,IAAA,sBAAsB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALlC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,oBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4GAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKkC,CAAA,EAAtB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;AClBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6LAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,gBAAb;AAAA;AAAA;AAEE,kCAAA;AAAA;AAAiB;;AAFnB;AAAA;AAAA,mCAIU,CACP;AALH;;AAAA;AAAA,OAAA;;AAAa,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,aADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sFAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACeb,QAAa,aAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CATzB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,qEAAA,CAAA,wBAAA,CAAD,EAAyB,2DAAA,CAAA,oBAAA,CAAzB,EAA6C,2DAAA,CAAA,mBAAA,CAA7C,EAAgE,6DAAA,CAAA,oBAAA,CAAhE,EAAoF,+CAAA,CAAA,kBAAA,CAApF,CADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,8CAAA,CAAA,iBAAA,CAFO,EAGP,kDAAA,CAAA,cAAA,CAHO,EAIP,mDAAA,CAAA,wBAAA,CAJO;AAFD,KAAT,CASyB,CAAA,EAAb,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,QAAM,QAAQ,GAAG,2BAAjB;;AAKA,QAAa,eAAb;AAAA;AAAA;AAGE,+BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AA+apB,aAAA,UAAA,GAAa,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,KAApB,CAAb;AACQ,aAAA,WAAA,GAAc,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,IAAI,oDAAA,CAAA,WAAA,CAAJ,CAAc,IAAd,EAAoB,IAApB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,EAA8C,EAA9C,EAAkD,EAAlD,CAApB,CAAd;AACR,aAAA,IAAA,GAAO,KAAK,WAAL,CAAiB,YAAjB,EAAP;AAKQ,aAAA,cAAA,GAAiB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,KAApB,CAAjB;AACR,aAAA,OAAA,GAAU,KAAK,cAAL,CAAoB,YAApB,EAAV;AAvbyC,OAH3C,CAKE;;;AALF;AAAA;AAAA,0CAOiB;AACb,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,sBAAjC,CAAP;AACD;AATH;AAAA;AAAA,mDAW0B;AACtB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,4BAAjC,CAAP;AACD;AAbH;AAAA;AAAA,kCAeY,OAfZ,EAe4B;AACxB,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,wBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,OAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP,CADwB,CAcxB;AACD;AA9BH;AAAA;AAAA,sCAgCgB,OAhChB,EAgCgC;AAC5B;AACA,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,wBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,OAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD;AA9CH;AAAA;AAAA,yCAgDgB;AACZ,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,QAAQ,GAAG,yBAAlC,CAAP;AACD;AAlDH;AAAA;AAAA,4CAoDsB,KApDtB,EAoD6C;AACzC,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,6BADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,KAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAcD;AAnEH;AAAA;AAAA,sCAoEgB,EApEhB,EAoE0B;AACtB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAuB,QAAQ,GAAG,8BAAX,GAA4C,EAAnE,CAAP;AACD,SAtEH,CAyEE;;AAzEF;AAAA;AAAA,qCA0Ee,MA1Ef,EA0EkC;AAC9B,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,wBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,MAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD;AAvFH;AAAA;AAAA,gEAwF0C,aAxF1C,EAwF+D;AAC3D,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,wDAAX,GAAsE,aAA5F,CAAP;AACD;AA1FH;AAAA;AAAA,kCA4FY,MA5FZ,EA4F0B;AACtB;AACA,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,6BADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,MAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD,SA3GH,CA8GE;;AA9GF;AAAA;AAAA,oDA+G8B,aA/G9B,EA+GmD;AAC/C,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,6CAAX,GAA2D,aAAjF,CAAP;AACD;AAjHH;AAAA;AAAA,iCAmHW,KAnHX,EAmHuB;AACnB;AACA,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,kBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,KAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD,SAlIH,CAsIE;;AAtIF;AAAA;AAAA,sCAuIa;AACT,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,cAAjC,CAAP;AACD;AAzIH;AAAA;AAAA,mCA2Ia,EA3Ib,EA2IuB;AACnB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAmB,QAAQ,GAAG,sBAAX,GAAoC,EAAvD,CAAP;AACD;AA7IH;AAAA;AAAA,wCA+IkB,MA/IlB,EA+IiC;AAC7B,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAmB,QAAQ,GAAG,sBAAX,GAAoC,MAAM,CAAC,KAA9D,CAAP;AACD;AAjJH;AAAA;AAAA,kCAmJY,GAnJZ,EAmJoB;AAEhB,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,gBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,GAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD;AAjKH;AAAA;AAAA,+BAkKS,GAlKT,EAkKiB;AACb;AACA,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,gBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,GAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD;AAjLH;AAAA;AAAA,kCAkLY,IAlLZ,EAkLqB;AACjB,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,gBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD,SA/LH,CAiME;;AAjMF;AAAA;AAAA,6CAkMoB;AAChB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,sBAAjC,CAAP;AACD;AApMH;AAAA;AAAA,sCAqMgB,OArMhB,EAqMoC;AAChC,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,wBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,OAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD;AAlNH;AAAA;AAAA,2CAoNqB,EApNrB,EAoN+B;AAC3B,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA2B,QAAQ,GAAG,8BAAX,GAA4C,EAAvE,CAAP;AACD;AAtNH;AAAA;AAAA,mCAwNa,OAxNb,EAwNiC;AAC7B,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,wBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,OAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD;AAtOH;AAAA;AAAA,0CAwOoB,IAxOpB,EAwOqC;AACjC,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,wBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD,SArPH,CAuPE;;AAvPF;AAAA;AAAA,6CAwPoB;AAChB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,qBAAjC,CAAP;AACD;AA1PH;AAAA;AAAA,0DA2PoC,EA3PpC,EA2P8C;AAC1C,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,wDAAX,GAAsE,EAA5F,CAAP;AACD;AA7PH;AAAA;AAAA,sCAgQgB,KAhQhB,EAgQ4B;AACxB,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,uBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,KAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD;AA9QH;AAAA;AAAA,yCAgRmB,IAhRnB,EAgR8B;AAC1B,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,uBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD,SA7RH,CA+RE;;AA/RF;AAAA;AAAA,8CAgSqB;AACjB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,sBAAjC,CAAP;AACD;AAlSH;AAAA;AAAA,2CAoSqB,EApSrB,EAoS+B;AAC3B,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA0B,QAAQ,GAAG,8BAAX,GAA4C,EAAtE,CAAP;AACD;AAtSH;AAAA;AAAA,uCAwSiB,MAxSjB,EAwSoC;AAChC;AACA,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,wBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,MAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD;AAvTH;AAAA;AAAA,0CAyToB,IAzTpB,EAyTqC;AACjC,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,wBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD;AAtUH;AAAA;AAAA,wCAwUkB,IAxUlB,EAwUiC;AAC7B,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,sBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD,SArVH,CAuVE;;AAvVF;AAAA;AAAA,6CAwVoB;AAChB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,qBAAjC,CAAP;AACD;AA1VH;AAAA;AAAA,yCA4VmB,IA5VnB,EA4VmC;AAC/B,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,uBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD;AAzWH;AAAA;AAAA,0CA2WoB,EA3WpB,EA2W8B;AAC1B,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA0B,QAAQ,GAAG,6BAAX,GAA2C,EAArE,CAAP;AACD;AA7WH;AAAA;AAAA,sCA+WgB,KA/WhB,EA+WiC;AAC7B;AACA,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,uBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,KAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD,SA9XH,CAgYE;;AAhYF;AAAA;AAAA,yCAiYmB,EAjYnB,EAiY6B;AACzB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAyB,QAAQ,GAAG,4BAAX,GAA0C,EAAnE,CAAP;AACD;AAnYH;AAAA;AAAA,6CAqYuB,EArYvB,EAqYyB;AACrB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,+CAAX,GAA6D,EAAnF,CAAP;AACD;AAvYH;AAAA;AAAA,qCAyYe,SAzYf,EAyYmC;AAC/B,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,sBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,SAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD;AAvZH;AAAA;AAAA,kDAyZ4B,KAzZ5B,EAyZ2C,OAzZ3C,EAyZ0D;AACtD,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAyB,QAAQ,GAAG,oDAAX,GAAkE,KAAlE,GAA0E,gBAA1E,GAA6F,OAAtH,CAAP;AACD;AA3ZH;AAAA;AAAA,wCA6ZkB,SA7ZlB,EA6ZsC;AAElC,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,sBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,SAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD,SA3aH,CA6aE;;AA7aF;AAAA;AAAA,yCA8amB,EA9anB,EA8a6B;AACzB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAyB,QAAQ,GAAG,4BAAX,GAA0C,EAAnE,CAAP;AACD;AAhbH;AAAA;AAAA,gCAqbU,IArbV,EAqbyB;AACrB,eAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB;AACD;AAvbH;AAAA;AAAA,mCA2ba,MA3bb,EA2b4B;AACxB,eAAK,cAAL,CAAoB,IAApB,CAAyB,MAAzB;AACD;AA7bH;AAAA;AAAA,2CA+bkB;AACd,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,oBAAjC,CAAP;AACD;AAjcH;AAAA;AAAA,qCAmce,SAncf,EAmcmC;AAC/B,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,sBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,SAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD;AAjdH;AAAA;AAAA,wCAkdkB,IAldlB,EAkdiC;AAC7B,UAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,sBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD;AAheH;AAAA;AAAA,qCAkee,SAlef,EAkemC;AAC/B,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAyB,QAAQ,GAAG,+BAAX,GAA6C,SAAS,CAAC,KAAvD,GAA+D,cAA/D,GAAgF,SAAS,CAAC,UAAnH,CAAP;AACD;AApeH;AAAA;AAAA,wCAsekB,SAtelB,EAsesC;AAClC,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,sBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,SAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD,SAnfH,CAofE;;AApfF;AAAA;AAAA,6DAqfuC,EArfvC,EAqfyC;AACrC,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,sDAAX,GAAoE,EAA1F,CAAP;AACD;AAvfH;AAAA;AAAA,4DAyfsC,EAzftC,EAyfwC;AACpC,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,oDAAX,GAAkE,EAAxF,CAAP;AACD;AA3fH;AAAA;AAAA,oDA6f2B;AACvB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,6BAAjC,CAAP;AACD;AA/fH;AAAA;AAAA,8CAigBwB,IAjgBxB,EAigBgD;AAC5C,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,+BADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD;AA/gBH;AAAA;AAAA,iDAihB2B,IAjhB3B,EAihBmD;AAC/C,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,+BADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD,SA9hBH,CAgiBE;;AAhiBF;AAAA;AAAA,uCAkiBc;AACV,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,cAAjC,CAAP;AACD,SApiBH,CAsiBE;;AAtiBF;AAAA;AAAA,0CAuiBiB;AACb,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,mBAAjC,CAAP;AACD;AAziBH;AAAA;AAAA,oCA2iBc,IA3iBd,EA2iB4B;AACxB,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,qBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD;AAzjBH;AAAA;AAAA,oCA0jBc,KA1jBd,EA0jB0B;AAEtB,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,uBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,KAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD;AAxkBH;AAAA;AAAA,oCA0kBc,UA1kBd,EA0kBoC;AAEhC,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,uBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,UAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD,SAxlBH,CA0lBE;;AA1lBF;AAAA;AAAA,2CA4lBkB;AACd,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,oBAAjC,CAAP;AACD;AA9lBH;AAAA;AAAA,wCA+lBkB,SA/lBlB,EA+lBsC;AAClC,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,sBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,SAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD;AA5mBH;AAAA;AAAA,qCA8mBe,IA9mBf,EA8mB8B;AAC1B,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,sBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE,MALV;AAME,YAAA,IAAI,EAAE;AANR,WAFG,CADA,CAAP;AAaD,SA5nBH,CAkoBE;;AAloBF;AAAA;AAAA,wCAmoBkB,EAnoBlB,EAmoB4B;AACxB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,2BAAX,GAAyC,EAA/D,CAAP;AACD;AAroBH;AAAA;AAAA,uCAsoBiB,IAtoBjB,EAsoB+B;AAC3B,iBAAO,MAAA,CAAA,iCAAA,CAAA,MAAA,CAAA,CAAA,EAAM;AACX,UAAA,KAAK,CACH,QAAQ,GAAG,qBADR,EAEH;AACE,YAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe,IAAf,CADR;AAEE,YAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKE,YAAA,MAAM,EAAE;AALV,WAFG,CADA,CAAP;AAYD,SAnpBH,CAupBE;;AAvpBF;AAAA;AAAA,mDAwpB6B,aAxpB7B,EAwpBkD;AAC9C,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,gDAAX,GAA8D,aAApF,CAAP;AACD,SA1pBH,CA4pBE;;AA5pBF;AAAA;AAAA,qDA6pB4B;AACxB,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,QAAQ,GAAG,+BAAjC,CAAP;AACD;AA/pBH;;AAAA;AAAA,OAAA;;;;cAG4B,iDAAA,CAAA,YAAA;;;;AAHf,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH3B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6Cb,QAAa,YAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CA5DxB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,EADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,8CAAA,CAAA,oBAAA,CAFO,EAGP,8CAAA,CAAA,gBAAA,CAHO,EAIP,8CAAA,CAAA,iBAAA,CAJO,EAKP,8CAAA,CAAA,kBAAA,CALO,EAMP,8CAAA,CAAA,eAAA,CANO,EAOP,8CAAA,CAAA,qBAAA,CAPO,EAQP,2CAAA,CAAA,qBAAA,CARO,EASP,iEAAA,CAAA,yBAAA,CATO,EAUP,2CAAA,CAAA,aAAA,CAVO,EAWP,iDAAA,CAAA,kBAAA,CAXO,EAYP,8CAAA,CAAA,iBAAA,CAZO,EAaP,8CAAA,CAAA,gBAAA,CAbO,EAcP,8CAAA,CAAA,eAAA,CAdO,EAeP,8CAAA,CAAA,kBAAA,CAfO,EAgBP,8CAAA,CAAA,eAAA,CAhBO,EAiBP,iDAAA,CAAA,kBAAA,CAjBO,EAkBP,6CAAA,CAAA,mBAAA,CAlBO,EAmBP,6CAAA,CAAA,yBAAA,CAnBO,EAoBP,8CAAA,CAAA,eAAA,CApBO,EAqBP,8CAAA,CAAA,gBAAA,CArBO,EAsBP,8CAAA,CAAA,eAAA,CAtBO,EAuBP,8CAAA,CAAA,mBAAA,CAvBO,EAwBP,8CAAA,CAAA,mBAAA,CAxBO,EAyBP,8CAAA,CAAA,eAAA,CAzBO,EA0BP,8CAAA,CAAA,oBAAA,CA1BO,EA2BP,8CAAA,CAAA,mBAAA,CA3BO,EA4BP,uDAAA,CAAA,WAAA,CA5BO,CAFD;AAgCR,MAAA,OAAO,EAAE,CACP,8CAAA,CAAA,oBAAA,CADO,EAEP,8CAAA,CAAA,gBAAA,CAFO,EAGP,8CAAA,CAAA,iBAAA,CAHO,EAIP,8CAAA,CAAA,kBAAA,CAJO,EAKP,8CAAA,CAAA,eAAA,CALO,EAMP,8CAAA,CAAA,qBAAA,CANO,EAOP,2CAAA,CAAA,qBAAA,CAPO,EAQP,iEAAA,CAAA,yBAAA,CARO,EASP,2CAAA,CAAA,aAAA,CATO,EAUP,iDAAA,CAAA,kBAAA,CAVO,EAWP,8CAAA,CAAA,iBAAA,CAXO,EAYP,8CAAA,CAAA,gBAAA,CAZO,EAaP,8CAAA,CAAA,eAAA,CAbO,EAcP,8CAAA,CAAA,kBAAA,CAdO,EAeP,8CAAA,CAAA,eAAA,CAfO,EAgBP,iDAAA,CAAA,kBAAA,CAhBO,EAiBP,6CAAA,CAAA,mBAAA,CAjBO,EAkBP,6CAAA,CAAA,yBAAA,CAlBO,EAmBP,8CAAA,CAAA,eAAA,CAnBO,EAoBP,8CAAA,CAAA,gBAAA,CApBO,EAqBP,8CAAA,CAAA,eAAA,CArBO,EAsBP,8CAAA,CAAA,mBAAA,CAtBO,EAuBP,8CAAA,CAAA,mBAAA,CAvBO,EAwBP,8CAAA,CAAA,eAAA,CAxBO,EAyBP,8CAAA,CAAA,oBAAA,CAzBO;AAhCD,KAAT,CA4DwB,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;ACtEb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAa,sBAAb;AAAA;AAAA;AAIE,sCAAoB,KAApB,EAAmD,MAAnD,EAA0E,SAA1E,EAAiG;AAAA;;AAA7E,aAAA,KAAA,GAAA,KAAA;AAA+B,aAAA,MAAA,GAAA,MAAA;AAAuB,aAAA,SAAA,GAAA,SAAA;AAD1E,aAAA,EAAA,GAAG,CAAH;AACsG;;AAJxG;AAAA;AAAA,mCAMU;AAAA;;AACN,eAAK,QAAL,GAAc,KAAK,KAAL,CAAW,MAAX,CAAkB,SAAlB,CAA4B,UAAA,MAAM,EAAE;AAChD,YAAA,OAAI,CAAC,EAAL,GAAQ,MAAM,CAAC,IAAD,CAAd;AACA,YAAA,OAAI,CAAC,MAAL,GAAc,uHAAuH,OAAI,CAAC,EAA1I;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,OAAI,CAAC,EAAjB,EAAqB,OAAI,CAAC,MAA1B;AACD,WAJa,CAAd;AAOD;AAdH;;AAAA;AAAA,OAAA;;;;cAI6B,4CAAA,CAAA,gBAAA;;cAAgC,4CAAA,CAAA,QAAA;;cAA0B,sDAAA,CAAA,cAAA;;;;AAJ1E,IAAA,sBAAsB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALlC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,oBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKkC,CAAA,EAAtB,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIb,QAAa,mBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAP/B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,sDAAA,CAAA,wBAAA,CAAD,CADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,kDAAA,CAAA,cAAA,CAFO;AAFD,KAAT,CAO+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACdb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,25CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAa,gCAAb;AAAA;AAAA;AAIE,gDAAoB,EAApB,EAA6C,QAA7C,EAA+E,SAA/E,EAAgH,MAAhH,EAA8H;AAAA;;AAA1G,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAkC,aAAA,SAAA,GAAA,SAAA;AAAiC,aAAA,MAAA,GAAA,MAAA;AAHhH,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AAIE,aAAK,gBAAL;AAED;;AAPH;AAAA;AAAA,2CASkB;AAAA;;AACd;AACA,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B;AACA,kBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,gBAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,kBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,iBAA5E;;AACA,gBAAA,OAAI,CAAC,QAAL,CAAc,eAAd,CAA8B,MAAM,CAAC,UAArC,EAAiD,SAAjD,CAA2D,UAAA,QAAQ,EAAG;AAAG,kBAAA,MAAM,CAAC,QAAP,GAAkB,QAAlB;AAA4B,iBAArG,EAFsB,CAGtB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AAAC,kBAAA,MAAM,CAAC,MAAP,GAAgB,4IAA4I,MAAM,CAAC,KAAnK;AAAyK;;AAC1K,gBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AACD;AACF,aAjBD;AAkBA,YAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACD,WApBD;AAqBD;AAhCH;AAAA;AAAA,mCAiCU,CACP;AAlCH;AAAA;AAAA,yCAmCgB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,UAAR,CAAP;AACD;AArCH;;AAAA;AAAA,OAAA;;;;cAI0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAmC,sDAAA,CAAA,cAAA;;cAA8B,4CAAA,CAAA,QAAA;;;;AAJ7G,IAAA,gCAAgC,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL5C,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,+BADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4IAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK4C,CAAA,EAAhC,gCAAgC,CAAhC;;;;;;;;;;;;;;;;ACdb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,ygBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACef,QAAa,gCAAb;AAAA;AAAA;AA6BE,gDAAoB,EAApB,EAA6C,QAA7C,EAAgF,KAAhF,EAA+G,MAA/G,EAA6H;AAAA;;AAAA;;AAAzG,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,KAAA,GAAA,KAAA;AAA+B,aAAA,MAAA,GAAA,MAAA;AAxB9G,aAAA,MAAA,GAAS,IAAI,KAAJ,EAAT;AAEA,aAAA,OAAA,GAAU,IAAI,KAAJ,EAAV;AAEA,aAAA,MAAA,GAAS,IAAI,KAAJ,EAAT;AAEA,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AAEA,aAAA,sBAAA,GAAmC,CAAC,kBAAD,EAAqB,QAArB,EAA+B,MAA/B,CAAnC;AAEA,aAAA,qBAAA,GAAkC,CAAC,iBAAD,EAAoB,OAApB,CAAlC;AAEA,aAAA,qBAAA,GAAkC,CAAC,SAAD,EAAY,OAAZ,CAAlC;AAaC,aAAK,QAAL,GAAc,KAAK,KAAL,CAAW,MAAX,CAAkB,SAAlB,CAA4B,UAAA,MAAM,EAAE;AAChD,UAAA,OAAI,CAAC,EAAL,GAAQ,MAAM,CAAC,IAAD,CAAd;AACD,SAFa,CAAd;AAGA,aAAK,UAAL;AACA,aAAK,SAAL;AACA,aAAK,qBAAL;AACA,aAAK,WAAL;AACD;;AArCH;AAAA;AAAA,qCAsCY;AAAA;;AACR,eAAK,QAAL,CAAc,aAAd,CAA4B,KAAK,EAAjC,EAAqC,SAArC,CAA+C,UAAA,MAAM,EAAG;AACtD,gBAAI,UAAU,GAAG,IAAI,KAAJ,EAAjB;AACA,YAAA,OAAI,CAAC,OAAL,GAAe,MAAf;;AACA,YAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,cAAA,OAAI,CAAC,OAAL,CAAa,GAAb,GAAmB,GAAnB;AAAwB,aAAlF;;AACA,YAAA,OAAI,CAAC,QAAL,CAAc,kBAAd,CAAiC,MAAM,CAAC,aAAxC,EAAuD,SAAvD,CAAiE,UAAA,WAAW,EAAG;AAAG,cAAA,OAAI,CAAC,OAAL,CAAa,WAAb,GAA2B,WAA3B;AAAwC,aAA1H;;AACA,YAAA,OAAI,CAAC,QAAL,CAAc,eAAd,CAA8B,MAAM,CAAC,UAArC,EAAiD,SAAjD,CAA2D,UAAA,QAAQ,EAAG;AAAG,cAAA,OAAI,CAAC,OAAL,CAAa,QAAb,GAAwB,QAAxB;AAAkC,aAA3G;;AACA,YAAA,OAAI,CAAC,QAAL,CAAc,iCAAd,CAAgD,MAAM,CAAC,EAAvD,EAA2D,SAA3D,CAAqE,UAAA,MAAM,EAAG;AAC5E,cAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,UAAU,EAAG;AAClC,gBAAA,UAAU,CAAC,IAAX,CAAgB,UAAhB;AACD,eAFD;AAGA,cAAA,OAAI,CAAC,OAAL,CAAa,KAAb,GAAqB,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,UAAH,CAArB;AACD,aALD;AAMD,WAZD;AAaD;AApDH;AAAA;AAAA,oCAqDW;AAAA;;AACP,eAAK,QAAL,CAAc,2BAAd,CAA0C,KAAK,EAA/C,EAAmD,SAAnD,CAA6D,UAAA,MAAM,EAAG;AACpE,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,KAAK,EAAG;AAC3B,cAAA,OAAI,CAAC,QAAL,CAAc,iBAAd,CAAgC,KAAK,CAAC,YAAtC,EAAoD,SAApD,CAA8D,UAAA,UAAU,EAAG;AAAG,gBAAA,KAAK,CAAC,UAAN,GAAmB,UAAnB;AAA+B,eAA7G;;AACA,cAAA,OAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,KAAjB;AACH,aAHD;AAIA,YAAA,OAAI,CAAC,MAAL,GAAc,OAAI,CAAC,cAAL,CAAoB,OAAI,CAAC,MAAzB,CAAd;AACA,YAAA,OAAI,CAAC,eAAL,GAAuB,IAAI,8CAAA,CAAA,oBAAA,CAAJ,CAAuB,OAAI,CAAC,MAA5B,CAAvB;AACA,YAAA,OAAI,CAAC,eAAL,CAAqB,SAArB,GAAiC,OAAI,CAAC,eAAtC;AACA,YAAA,OAAI,CAAC,eAAL,CAAqB,IAArB,GAA4B,OAAI,CAAC,UAAjC;;AACA,YAAA,OAAI,CAAC,eAAL,CAAqB,eAArB,GAAuC,UAAC,KAAD,EAAe,MAAf,EAAiC;AACtE,kBAAI,KAAK,GAAG,KAAZ;AACA,kBAAM,iBAAiB,GAAG,MAAM,CAAC,IAAP,GAAc,WAAd,EAA1B;AACA,cAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,GAAnB,CAAuB,UAAA,GAAG,EAAG;AAC3B,oBAAI,GAAG,KAAK,YAAZ,EAA0B;AACxB,kBAAA,MAAM,CAAC,IAAP,CAAY,KAAK,CAAC,GAAD,CAAjB,EAAwB,GAAxB,CAA4B,UAAA,IAAI,EAAG;AACjC,wBAAI,CAAC,KAAK,KAAK,CAAC,GAAD,CAAL,CAAW,IAAX,CAAN,EAAwB,WAAxB,GAAsC,QAAtC,CAA+C,iBAA/C,CAAJ,EAAuE;AACrE,sBAAA,KAAK,GAAG,IAAR;AACD;AACF,mBAJD;AAKD,iBAND,MAMO;AACL,sBAAI,CAAC,KAAK,KAAK,CAAC,GAAD,CAAX,EAAkB,WAAlB,GAAgC,QAAhC,CAAyC,iBAAzC,CAAJ,EAAiE;AAC/D,oBAAA,KAAK,GAAG,IAAR;AACD;AACF;AACF,eAZD;AAcA,qBAAO,KAAP;AACD,aAlBD;AAmBF,WA5BA;AA6BD;AAnFH;AAAA;AAAA,gDAoFuB;AAAA;;AACnB,eAAK,QAAL,CAAc,uCAAd,CAAsD,KAAK,EAA3D,EAA+D,SAA/D,CAAyE,UAAA,MAAM,EAAG;AAChF,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,cAAA,OAAI,CAAC,QAAL,CAAc,kBAAd,CAAiC,MAAM,CAAC,aAAxC,EAAuD,SAAvD,CAAiE,UAAA,WAAW,EAAG;AAAG,gBAAA,MAAM,CAAC,WAAP,GAAqB,WAArB;AAAkC,eAApH;;AACA,cAAA,OAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,MAAlB;AACD,aAHD;AAIA,YAAA,OAAI,CAAC,QAAL,GAAgB,OAAI,CAAC,cAAL,CAAoB,OAAI,CAAC,OAAzB,CAAhB;AACA,YAAA,OAAI,CAAC,gBAAL,GAAwB,IAAI,8CAAA,CAAA,oBAAA,CAAJ,CAAuB,OAAI,CAAC,OAA5B,CAAxB;AACA,YAAA,OAAI,CAAC,gBAAL,CAAsB,SAAtB,GAAkC,OAAI,CAAC,eAAvC;AACA,YAAA,OAAI,CAAC,gBAAL,CAAsB,IAAtB,GAA6B,OAAI,CAAC,UAAlC;;AACA,YAAA,OAAI,CAAC,gBAAL,CAAsB,eAAtB,GAAwC,UAAC,GAAD,EAAc,MAAd,EAAgC;AACtE,kBAAI,KAAK,GAAG,KAAZ;AACA,kBAAM,iBAAiB,GAAG,MAAM,CAAC,IAAP,GAAc,WAAd,EAA1B;AACA,cAAA,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,GAAjB,CAAqB,UAAA,GAAG,EAAG;AACzB,oBAAI,GAAG,KAAK,aAAZ,EAA2B;AACzB,kBAAA,MAAM,CAAC,IAAP,CAAY,GAAG,CAAC,GAAD,CAAf,EAAsB,GAAtB,CAA0B,UAAA,IAAI,EAAG;AAC/B,wBAAI,CAAC,KAAK,GAAG,CAAC,GAAD,CAAH,CAAS,IAAT,CAAN,EAAsB,WAAtB,GAAoC,QAApC,CAA6C,iBAA7C,CAAJ,EAAqE;AACnE,sBAAA,KAAK,GAAG,IAAR;AACD;AACF,mBAJD;AAKD,iBAND,MAMO;AACL,sBAAI,CAAC,KAAK,GAAG,CAAC,GAAD,CAAT,EAAgB,WAAhB,GAA8B,QAA9B,CAAuC,iBAAvC,CAAJ,EAA+D;AAC7D,oBAAA,KAAK,GAAG,IAAR;AACD;AACF;AACF,eAZD;AAaA,qBAAO,KAAP;AACD,aAjBD;AAkBD,WA3BD;AA4BD;AAjHH;AAAA;AAAA,sCAkHa;AAAA;;AACT,eAAK,QAAL,CAAc,0BAAd,CAAyC,KAAK,EAA9C,EAAkD,SAAlD,CAA4D,UAAA,MAAM,EAAG;AACnE,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,QAAQ,EAAG;AAC9B,cAAA,OAAI,CAAC,MAAL,CAAY,IAAZ,CAAiB,QAAjB;AACH,aAFD;AAGA,YAAA,OAAI,CAAC,QAAL,GAAgB,OAAI,CAAC,cAAL,CAAoB,OAAI,CAAC,MAAzB,CAAhB;AACA,YAAA,OAAI,CAAC,eAAL,GAAuB,IAAI,8CAAA,CAAA,oBAAA,CAAJ,CAAuB,OAAI,CAAC,MAA5B,CAAvB;AACA,YAAA,OAAI,CAAC,eAAL,CAAqB,SAArB,GAAiC,OAAI,CAAC,cAAtC;AACA,YAAA,OAAI,CAAC,eAAL,CAAqB,IAArB,GAA4B,OAAI,CAAC,SAAjC;AACD,WARD;AASD;AA5HH;AAAA;AAAA,0CA6HoB,WA7HpB,EA6HuC;AACnC,eAAK,gBAAL,CAAsB,MAAtB,GAA+B,WAA/B;AACD;AA/HH;AAAA;AAAA,yCAgImB,WAhInB,EAgIsC;AAClC,eAAK,eAAL,CAAqB,MAArB,GAA8B,WAA9B;AACD;AAlIH;AAAA;AAAA,yCAmImB,WAnInB,EAmIsC;AAClC,eAAK,eAAL,CAAqB,MAArB,GAA8B,WAA9B;AACD;AArIH;AAAA;AAAA,mCAsIU,CAEP;AAxIH;AAAA;AAAA,uCAyIiB,SAzIjB,EAyI0B;AACtB,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,SAAH,CAAP;AACD;AA3IH;;AAAA;AAAA,OAAA;;;;cA6B0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAgC,4CAAA,CAAA,gBAAA;;cAAgC,4CAAA,CAAA,QAAA;;;;AAR7E,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAxC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,YAAV,EAAwB;AAAC,MAAA,MAAM,EAAE;AAAT,KAAxB,CAAwC,CAAA,E,0CAAA,E,YAAA,E,KAAoB,CAApB;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAxC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,YAAV,EAAwB;AAAC,MAAA,MAAM,EAAE;AAAT,KAAxB,CAAwC,CAAA,E,0CAAA,E,YAAA,E,KAAoB,CAApB;AACD,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAvC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,WAAV,EAAuB;AAAC,MAAA,MAAM,EAAE;AAAT,KAAvB,CAAuC,CAAA,E,0CAAA,E,WAAA,E,KAAmB,CAAnB;AACM,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAA7C,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,iBAAV,EAA6B;AAAC,MAAA,MAAM,EAAE;AAAT,KAA7B,CAA6C,CAAA,E,0CAAA,E,iBAAA,E,KAA8B,CAA9B;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAA7C,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,iBAAV,EAA6B;AAAC,MAAA,MAAM,EAAE;AAAT,KAA7B,CAA6C,CAAA,E,0CAAA,E,iBAAA,E,KAA8B,CAA9B;AACD,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAA5C,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,gBAAV,EAA4B;AAAC,MAAA,MAAM,EAAE;AAAT,KAA5B,CAA4C,CAAA,E,0CAAA,E,gBAAA,E,KAA6B,CAA7B;AA1BnC,IAAA,gCAAgC,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL5C,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,+BADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4IAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK4C,CAAA,EAAhC,gCAAgC,CAAhC;;;;;;;;;;;;;;;;ACfb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qhBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAa,mCAAb;AAAA;AAAA;AASE,mDAAoB,EAApB,EAA6C,QAA7C,EAAgF,MAAhF,EAA8F;AAAA;;AAA1E,aAAA,EAAA,GAAA,EAAA;AAAyB,aAAA,QAAA,GAAA,QAAA;AAAmC,aAAA,MAAA,GAAA,MAAA;AARhF,aAAA,UAAA,GAAa,IAAI,KAAJ,EAAb;AAGA,aAAA,gBAAA,GAA6B,CAAC,MAAD,EAAS,YAAT,EAAuB,eAAvB,EAAwC,UAAxC,EAAoD,iBAApD,CAA7B;AAME,aAAK,gBAAL;AAED;;AAZH;AAAA;AAAA,2CAckB;AAAA;;AACV,eAAK,QAAL,CAAc,eAAd,GAAgC,SAAhC,CAA0C,UAAA,MAAM,EAAG;AACjD,YAAA,MAAM,CAAC,OAAP,CAAe,OAAf,CAAuB,UAAA,MAAM,EAAG;AAC9B,cAAA,MAAM,CAAC,KAAP,GAAe,IAAI,iCAAA,CAAA,YAAA,CAAJ,EAAf;;AACA,kBAAI,MAAM,CAAC,MAAP,IAAiB,CAArB,EAAwB;AACtB,gBAAA,OAAI,CAAC,QAAL,CAAc,UAAd,CAAyB,MAAM,CAAC,KAAhC,EAAuC,SAAvC,CAAiD,UAAA,GAAG,EAAG;AAAG,kBAAA,MAAM,CAAC,GAAP,GAAa,GAAb;AAAkB,iBAA5E;;AACA,gBAAA,OAAI,CAAC,QAAL,CAAc,eAAd,CAA8B,MAAM,CAAC,UAArC,EAAiD,SAAjD,CAA2D,UAAA,QAAQ,EAAG;AAAG,kBAAA,MAAM,CAAC,QAAP,GAAkB,QAAlB;AAA4B,iBAArG;;AACA,gBAAA,MAAM,CAAC,IAAP,GAAc,iBAAiB,MAAM,CAAC,EAAtC;;AACA,gBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,MAArB;AACD;AACF,aARD;AASA,YAAA,OAAI,CAAC,SAAL,GAAiB,OAAI,CAAC,cAAL,EAAjB;AACA,YAAA,OAAI,CAAC,UAAL,GAAkB,IAAI,8CAAA,CAAA,oBAAA,CAAJ,CAAuB,OAAI,CAAC,UAA5B,CAAlB;AACA,YAAA,OAAI,CAAC,UAAL,CAAgB,SAAhB,GAA4B,OAAI,CAAC,SAAjC;;AACA,YAAA,OAAI,CAAC,UAAL,CAAgB,mBAAhB,GAAsC,UAAC,IAAD,EAAO,QAAP,EAAmB;AACvD,sBAAO,QAAP;AACE,qBAAK,YAAL;AAAmB,yBAAO,IAAI,CAAC,GAAL,CAAS,MAAhB;;AACnB,qBAAK,eAAL;AAAsB,yBAAO,IAAI,CAAC,QAAL,CAAc,IAArB;;AACtB;AAAS,yBAAO,IAAI,CAAC,QAAD,CAAX;AAHX;AAKD,aAND;;AAOA,YAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,GAAuB,OAAI,CAAC,IAA5B;;AACA,YAAA,OAAI,CAAC,UAAL,CAAgB,eAAhB,GAAkC,UAAC,CAAD,EAAa,MAAb,EAA+B;AAC/D,kBAAI,KAAK,GAAG,KAAZ;AACA,kBAAM,iBAAiB,GAAG,MAAM,CAAC,IAAP,GAAc,WAAd,EAA1B;AACA,cAAA,MAAM,CAAC,IAAP,CAAY,CAAZ,EAAe,GAAf,CAAmB,UAAA,GAAG,EAAG;AACvB,oBAAI,GAAG,KAAK,KAAR,IAAiB,GAAG,IAAI,UAA5B,EAAwC;AACtC,kBAAA,MAAM,CAAC,IAAP,CAAY,CAAC,CAAC,GAAD,CAAb,EAAoB,GAApB,CAAwB,UAAA,IAAI,EAAG;AAC7B,wBAAI,CAAC,KAAK,CAAC,CAAC,GAAD,CAAD,CAAO,IAAP,CAAN,EAAoB,WAApB,GAAkC,QAAlC,CAA2C,iBAA3C,CAAJ,EAAmE;AACjE,sBAAA,KAAK,GAAG,IAAR;AACD;AACF,mBAJD;AAKD,iBAND,MAMO;AACL,sBAAI,CAAC,KAAK,CAAC,CAAC,GAAD,CAAP,EAAc,WAAd,GAA4B,QAA5B,CAAqC,iBAArC,CAAJ,EAA6D;AAC3D,oBAAA,KAAK,GAAG,IAAR;AACD;AACF;AACF,eAZD;AAcA,qBAAO,KAAP;AACD,aAlBD;AAoBD,WAzCD;AA0CD;AAzDP;AAAA;AAAA,oCA0DkB,WA1DlB,EA0DqC;AAC7B,eAAK,UAAL,CAAgB,MAAhB,GAAyB,WAAzB;AACD;AA5DP;AAAA;AAAA,mCA6Dc,CACP;AA9DP;AAAA;AAAA,yCA+DoB;AACZ,iBAAO,MAAA,CAAA,iCAAA,CAAA,IAAA,CAAA,CAAA,CAAG,KAAK,UAAR,CAAP;AACD;AAjEP;;AAAA;AAAA,OAAA;;;;cAS0B,2CAAA,CAAA,aAAA;;cAA+B,8DAAA,CAAA,iBAAA;;cAAiC,4CAAA,CAAA,QAAA;;;;AAH/C,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAxC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,8CAAA,CAAA,cAAA,CAAV,EAAwB;AAAC,MAAA,MAAM,EAAE;AAAT,KAAxB,CAAwC,CAAA,E,6CAAA,E,WAAA,E,KAAwB,CAAxB;AACL,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAnC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,8CAAA,CAAA,SAAA,CAAV,EAAmB;AAAC,MAAA,MAAM,EAAE;AAAT,KAAnB,CAAmC,CAAA,E,6CAAA,E,MAAA,E,KAAc,CAAd;AAPzB,IAAA,mCAAmC,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL/C,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mCADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oJAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK+C,CAAA,EAAnC,mCAAmC,CAAnC;;;;;;;;;;;;;;;;ACdb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,kCAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA,C,CAAA;AACA;AACA;;;AAEO,QAAM,WAAW,GAAG;AACzB,MAAA,UAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA,QAAI,sDAAA,CAAA,aAAA,CAAA,CAAY,UAAhB,EAA4B;AAC1B,MAAA,MAAA,CAAA,0CAAA,CAAA,gBAAA,CAAA,CAAA;AACD;;AAED,IAAA,MAAA,CAAA,8DAAA,CAAA,wBAAA,CAAA,CAAA,GAAyB,eAAzB,CAAyC,4CAAA,CAAA,WAAA,CAAzC,EACG,KADH,CACS,UAAA,GAAG;AAAA,aAAI,OAAO,CAAC,KAAR,CAAc,GAAd,CAAJ;AAAA,KADZ","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"center-title\\\">\\r\\n    <h1>Data aanpassen</h1>\\r\\n</div>\\r\\n<mat-tab-group mat-align-tabs=\\\"center\\\">\\r\\n    <mat-tab label=\\\"DruifSoorten\\\">\\r\\n        <app-druif-beheren></app-druif-beheren>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Events\\\">\\r\\n        <app-event-beheren></app-event-beheren>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Methodes\\\">\\r\\n        <app-methode-beheren></app-methode-beheren>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Metingen\\\">\\r\\n        <app-meting-beheren></app-meting-beheren>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Vaten\\\">\\r\\n        <app-vat-beheren></app-vat-beheren>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Gebruikers\\\">\\r\\n        <app-gebruiker-beheren></app-gebruiker-beheren>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Materialen\\\">\\r\\n        <app-materiaal-beheren></app-materiaal-beheren>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Wijnen\\\">\\r\\n        <app-wijn-beheren></app-wijn-beheren>\\r\\n    </mat-tab>\\r\\n</mat-tab-group>\"","export default \"<div class=\\\"container\\\">\\r\\n    <div *ngFor=\\\"let druif of (druiven | async)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                {{druif.druifsoort}}\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n                <button class=\\\"button\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"open(content, druif)\\\">Edit</button>\\r\\n                <button class=\\\"button\\\" mat-raised-button color=\\\"warn\\\" (click)=\\\"Delete(druif)\\\">Delete</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Druifsoort:</h4>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button> -->\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <form [formGroup]=\\\"createDruifSoortForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                    <p>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Naam van de druif\\\" [(ngModel)]=\\\"druifModel.druifsoort\\\"\\r\\n                                formControlName=\\\"naam\\\" type=\\\"text\\\" name=\\\"DruifSoort\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </p>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"Edit()\\\"\\r\\n                        (click)=\\\"modal.dismiss('Cross click')\\\">Save</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\"","export default \"\\r\\n<div class=\\\"container\\\">\\r\\n    <div *ngFor=\\\"let event of (events | async)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                {{event.naam}}\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"open(content, event)\\\">Edit</button>\\r\\n\\r\\n                <button mat-raised-button color=\\\"warn\\\" (click)=\\\"Delete(event)\\\">Delete</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Event:</h4>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button> -->\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <form [formGroup]=\\\"createForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                    <p>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Naam event\\\" [(ngModel)]=\\\"Model.naam\\\" formControlName=\\\"naam\\\"\\r\\n                                type=\\\"text\\\" name=\\\"Event\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </p>\\r\\n                </form>\\r\\n            </div>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"Edit()\\\"\\r\\n                (click)=\\\"modal.dismiss('Cross click')\\\">Save</button>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\"","export default \"<div class=\\\"container\\\">\\r\\n    <div *ngFor=\\\"let gebruiker of (gebruikers | async)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                {{gebruiker.voornaam}} {{gebruiker.naam}}\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"open(content, gebruiker)\\\">Edit</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Gebruiker:</h4>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button> -->\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <form [formGroup]=\\\"createForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                    <p>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Voornaam\\\" [(ngModel)]=\\\"Model.voornaam\\\"\\r\\n                                formControlName=\\\"voornaam\\\" type=\\\"text\\\" name=\\\"DruifSoort\\\" />\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Achternaam\\\" [(ngModel)]=\\\"Model.naam\\\"\\r\\n                                formControlName=\\\"achternaam\\\" type=\\\"text\\\" name=\\\"DruifSoort\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </p>\\r\\n\\r\\n                    <div>\\r\\n                        <mat-form-field style=\\\"width:360px\\\">\\r\\n                            <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"Model.email\\\" formControlName=\\\"email\\\"\\r\\n                                type=\\\"text\\\" name=\\\"Email\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Code van PushApp\\\" [(ngModel)]=\\\"Model.telefoonnummer\\\"\\r\\n                                formControlName=\\\"telefoonnummer\\\" type=\\\"text\\\" name=\\\"Telefoonnummer\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Wachtwoord\\\" [(ngModel)]=\\\"Model.wachtwoord\\\"\\r\\n                                formControlName=\\\"wachtwoord\\\" type=\\\"text\\\" name=\\\"Wachtwoord\\\" type=\\\"password\\\" />\\r\\n                        </mat-form-field>\\r\\n\\r\\n                    </div>\\r\\n\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"Edit()\\\"\\r\\n                        (click)=\\\"modal.dismiss('Cross click')\\\">Save</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\"","export default \"<div class=\\\"container\\\">\\r\\n    <div *ngFor=\\\"let materiaal of (materialen | async)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                {{materiaal.naam}}\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"open(content, materiaal)\\\">Edit</button>\\r\\n                <button mat-raised-button color=\\\"warn\\\" (click)=\\\"Delete(materiaal)\\\">Delete</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Soort materiaal:</h4>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button> -->\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <form [formGroup]=\\\"createForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                    <p>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Naam materiaal\\\" [(ngModel)]=\\\"Model.naam\\\" formControlName=\\\"naam\\\"\\r\\n                                type=\\\"text\\\" name=\\\"Meting\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </p>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"Edit()\\\"\\r\\n                        (click)=\\\"modal.dismiss('Cross click')\\\">Save</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\"","export default \"<div class=\\\"container\\\">\\r\\n    <div *ngFor=\\\"let methode of (methodes | async)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                {{methode.methode}}\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"open(content, methode)\\\">Edit</button>\\r\\n                <button mat-raised-button color=\\\"warn\\\" (click)=\\\"Delete(methode)\\\">Delete</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Persmethode:</h4>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button> -->\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <form [formGroup]=\\\"createForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n                    <p>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Naam persmethode\\\" [(ngModel)]=\\\"Model.methode\\\"\\r\\n                                formControlName=\\\"naam\\\" type=\\\"text\\\" name=\\\"Methode\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </p>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"Edit()\\\"\\r\\n                        (click)=\\\"modal.dismiss('Cross click')\\\">Save</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\"","export default \"<div class=\\\"container\\\">\\r\\n    <div *ngFor=\\\"let meting of (metingen | async)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                {{meting.naam}}\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"open(content, meting)\\\">Edit</button>\\r\\n                <button mat-raised-button color=\\\"warn\\\" (click)=\\\"Delete(meting)\\\">Delete</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Soort meting:</h4>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button> -->\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <form [formGroup]=\\\"createForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                    <p>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Naam meting\\\" [(ngModel)]=\\\"Model.naam\\\" formControlName=\\\"naam\\\"\\r\\n                                type=\\\"text\\\" name=\\\"Meting\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </p>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"Edit()\\\"\\r\\n                        (click)=\\\"modal.dismiss('Cross click')\\\">Save</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\"","export default \"<h2 class=\\\"center-body\\\">\\r\\n    Alleen vaten die niet in gebruik zijn kunnen verwijderd worden!\\r\\n</h2>\\r\\n<div class=\\\"container\\\">\\r\\n    <div *ngFor=\\\"let vat of (vaten | async)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                {{vat.nummer}}\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"open(content, vat)\\\">Edit</button>\\r\\n                <button [disabled]=\\\"vat.inGebruik == 1\\\" mat-raised-button color=\\\"warn\\\"\\r\\n                    (click)=\\\"Delete(vat)\\\">Delete</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Vat:</h4>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button> -->\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\" width=\\\"500px\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <form [formGroup]=\\\"createForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                    <p>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Naam van het vat\\\" [(ngModel)]=\\\"Model.nummer\\\"\\r\\n                                formControlName=\\\"naam\\\" type=\\\"text\\\" name=\\\"VatNaam\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </p>\\r\\n                    <p>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Locatie van het vat\\\" [(ngModel)]=\\\"Model.locatie\\\"\\r\\n                                formControlName=\\\"locatie\\\" type=\\\"text\\\" name=\\\"VatNaam\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </p>\\r\\n                    <p>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Volume van het vat\\\" [(ngModel)]=\\\"Model.volume\\\"\\r\\n                                formControlName=\\\"volume\\\" type=\\\"text\\\" name=\\\"VatNaam\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </p>\\r\\n\\r\\n\\r\\n                    <section class=\\\"example-section\\\">\\r\\n                        <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"Model.deksel\\\" formControlName=\\\"deksel\\\">\\r\\n                            Gesloten vat?\\r\\n                        </mat-checkbox>\\r\\n                    </section>\\r\\n                    <section class=\\\"example-section\\\">\\r\\n                        <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"Model.koelmantel\\\"\\r\\n                            formControlName=\\\"koelmantel\\\">Koelmantel?\\r\\n                        </mat-checkbox>\\r\\n                    </section>\\r\\n                    <section class=\\\"example-section\\\">\\r\\n                        <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"Model.mangat\\\" formControlName=\\\"mangat\\\">Mangat?\\r\\n                        </mat-checkbox>\\r\\n                    </section>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"Edit()\\\"\\r\\n                        (click)=\\\"modal.dismiss('Cross click')\\\">Save</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</ng-template>\"","export default \"<div class=\\\"container\\\">\\r\\n    <div *ngFor=\\\"let wijn of (wijnen | async)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                {{wijn.naam}}\\r\\n            </div>\\r\\n            <div class=\\\"col-md-2\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"open(content, wijn)\\\">Edit</button>\\r\\n                <button mat-raised-button color=\\\"warn\\\" (click)=\\\"Delete(wijn)\\\">Delete</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #content let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n        <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Type wijn:</h4>\\r\\n        <!-- <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button> -->\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <form [formGroup]=\\\"createForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                    <p>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder=\\\"Naam wijn\\\" [(ngModel)]=\\\"Model.naam\\\" formControlName=\\\"naam\\\"\\r\\n                                type=\\\"text\\\" name=\\\"Meting\\\" />\\r\\n                        </mat-form-field>\\r\\n                    </p>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"Edit()\\\"\\r\\n                        (click)=\\\"modal.dismiss('Cross click')\\\">Save</button>\\r\\n                </form>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n</ng-template>\"","export default \"<div class=\\\"center-title\\\">\\r\\n    <h1>Data toevoegen</h1>\\r\\n</div>\\r\\n<mat-tab-group mat-align-tabs=\\\"center\\\">\\r\\n    <mat-tab label=\\\"DruifSoorten\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n                <div class=\\\"col-md\\\">\\r\\n                    <app-druif-soort-toevoegen></app-druif-soort-toevoegen>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Events\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n                <div class=\\\"col-md\\\">\\r\\n                    <app-event-toevoegen></app-event-toevoegen>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Methodes\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n                <div class=\\\"col-md\\\">\\r\\n                    <app-methode-toevoegen></app-methode-toevoegen>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Metingen\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n                <div class=\\\"col-md\\\">\\r\\n                    <app-meting-toevoegen></app-meting-toevoegen>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Vaten\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n                <div class=\\\"col-md\\\">\\r\\n                    <app-vat-toevoegen></app-vat-toevoegen>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Gebruikers\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n                <div class=\\\"col-md\\\">\\r\\n                    <app-gebruiker-toevoegen></app-gebruiker-toevoegen>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Wijntypes\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n                <div class=\\\"col-md\\\">\\r\\n                    <app-wijntype-toevoegen></app-wijntype-toevoegen>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Materialen\\\">\\r\\n        <div class=\\\"container\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n                <div class=\\\"col-md\\\">\\r\\n                    <app-materiaal-toevoegen></app-materiaal-toevoegen>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n</mat-tab-group>\"","export default \"<form [formGroup]=\\\"createDruifSoortForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1>Maak een nieuwe druifsoort aan</h1>\\r\\n\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Naam van de druif\\\" [(ngModel)]=\\\"druifModel.druifsoort\\\" formControlName=\\\"naam\\\"\\r\\n                type=\\\"text\\\" name=\\\"DruifSoort\\\" />\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n\\r\\n    <div>\\r\\n\\r\\n        <button [disabled]=\\\"!createDruifSoortForm.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"Form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1>Maak een nieuwe event aan</h1>\\r\\n\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Eventbeschrijving\\\" [(ngModel)]=\\\"model.naam\\\" formControlName=\\\"naam\\\" type=\\\"text\\\"\\r\\n                name=\\\"DruifSoort\\\" />\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n\\r\\n    <div>\\r\\n\\r\\n        <button [disabled]=\\\"!Form.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"Form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1>Maak een nieuwe gebruiker aan</h1>\\r\\n\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <mat-label>Kies een rol</mat-label>\\r\\n            <mat-select formControlName=\\\"rol\\\" [(ngModel)]=\\\"model.rolId\\\">\\r\\n                <mat-option *ngFor=\\\"let rol of (rollen | async)\\\" [value]=\\\"rol.id\\\">\\r\\n                    {{rol.rolnaam}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Voornaam\\\" [(ngModel)]=\\\"model.voornaam\\\" formControlName=\\\"voornaam\\\" type=\\\"text\\\"\\r\\n                name=\\\"DruifSoort\\\" />\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Achternaam\\\" [(ngModel)]=\\\"model.naam\\\" formControlName=\\\"achternaam\\\" type=\\\"text\\\"\\r\\n                name=\\\"DruifSoort\\\" />\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n\\r\\n    <div>\\r\\n        <mat-form-field style=\\\"width:360px\\\">\\r\\n            <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"model.email\\\" formControlName=\\\"email\\\" type=\\\"text\\\"\\r\\n                name=\\\"Email\\\" />\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Code van PushApp\\\" [(ngModel)]=\\\"model.telefoonnummer\\\"\\r\\n                formControlName=\\\"telefoonnummer\\\" type=\\\"text\\\" name=\\\"Telefoonnummer\\\" />\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Wachtwoord\\\" [(ngModel)]=\\\"model.wachtwoord\\\" formControlName=\\\"wachtwoord\\\"\\r\\n                type=\\\"text\\\" name=\\\"Wachtwoord\\\" type=\\\"password\\\" />\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Confirm Wachtwoord\\\" formControlName=\\\"wachtwoordc\\\" type=\\\"text\\\"\\r\\n                name=\\\"Wachtwoordc\\\" type=\\\"password\\\" />\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div>\\r\\n\\r\\n        <button [disabled]=\\\"!Form.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"Form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1>Maak een nieuw materiaal aan</h1>\\r\\n\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Materiaal naam\\\" [(ngModel)]=\\\"model.naam\\\" formControlName=\\\"naam\\\" type=\\\"text\\\"\\r\\n                name=\\\"Materiaal\\\" />\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n\\r\\n    <div>\\r\\n\\r\\n        <button [disabled]=\\\"!Form.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"Form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1>Maak een nieuwe persmethode aan</h1>\\r\\n\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Methode naam\\\" [(ngModel)]=\\\"model.methode\\\" formControlName=\\\"naam\\\" type=\\\"text\\\"\\r\\n                name=\\\"Methode\\\" />\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n\\r\\n    <div>\\r\\n\\r\\n        <button [disabled]=\\\"!Form.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"Form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1>Maak een nieuwe metingSoort aan</h1>\\r\\n\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Meting soort\\\" [(ngModel)]=\\\"model.naam\\\" formControlName=\\\"naam\\\" type=\\\"text\\\"\\r\\n                name=\\\"Methode\\\" />\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n\\r\\n    <div>\\r\\n\\r\\n        <button [disabled]=\\\"!Form.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"Form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1>Maak een nieuw vat aan</h1>\\r\\n    <div>\\r\\n        <mat-form-field class=\\\"main\\\">\\r\\n            <input matInput placeholder=\\\"Naam van het vat\\\" [(ngModel)]=\\\"model.nummer\\\" formControlName=\\\"naam\\\" type=\\\"text\\\"\\r\\n                name=\\\"VatNaam\\\" />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"main\\\">\\r\\n            <input matInput placeholder=\\\"Locatie van het vat\\\" [(ngModel)]=\\\"model.locatie\\\" formControlName=\\\"locatie\\\"\\r\\n                type=\\\"text\\\" name=\\\"VatNaam\\\" />\\r\\n        </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <div>\\r\\n\\r\\n        <mat-form-field class=\\\"main\\\">\\r\\n            <input matInput placeholder=\\\"Volume van het vat\\\" [(ngModel)]=\\\"model.volume\\\" formControlName=\\\"volume\\\"\\r\\n                type=\\\"text\\\" name=\\\"VatNaam\\\" />\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field class=\\\"main\\\">\\r\\n            <mat-label>Materiaal van het vat</mat-label>\\r\\n            <mat-select formControlName=\\\"materiaal\\\" [(ngModel)]=\\\"model.materiaalId\\\">\\r\\n                <mat-option *ngFor=\\\"let materiaal of (materialen | async)\\\" [value]=\\\"materiaal.id\\\">\\r\\n                    {{materiaal.naam}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <div>\\r\\n        <section class=\\\"example-section \\\">\\r\\n            <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"model.deksel\\\" formControlName=\\\"deksel\\\">Gesloten vat?\\r\\n            </mat-checkbox>\\r\\n        </section>\\r\\n        <section class=\\\"example-section \\\">\\r\\n            <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"model.koelmantel\\\" formControlName=\\\"koelmantel\\\">\\r\\n                Koelmantel?\\r\\n            </mat-checkbox>\\r\\n        </section>\\r\\n        <section class=\\\"example-section \\\">\\r\\n            <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"model.mangat\\\" formControlName=\\\"mangat\\\">Mangat?\\r\\n            </mat-checkbox>\\r\\n        </section>\\r\\n    </div>\\r\\n    <div>\\r\\n        <button [disabled]=\\\"!Form.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"Form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <h1>Maak een nieuw wijntype aan</h1>\\r\\n\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <input matInput placeholder=\\\"Wijntype naam\\\" [(ngModel)]=\\\"model.naam\\\" formControlName=\\\"naam\\\" type=\\\"text\\\"\\r\\n                name=\\\"Wijntype\\\" />\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n\\r\\n    <div>\\r\\n\\r\\n        <button [disabled]=\\\"!Form.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n</form>\"","export default \"<div class=\\\"center-title\\\">\\r\\n  <h1>Alarmeringswaarden aanpassen</h1>\\r\\n</div>\\r\\n<mat-tab-group mat-align-tabs=\\\"center\\\">\\r\\n  <mat-tab label=\\\"CO²\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n        <div class=\\\"col-md\\\">\\r\\n          <app-co></app-co>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Druk\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n        <div class=\\\"col-md\\\">\\r\\n          <app-druk></app-druk>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Ethanol\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n        <div class=\\\"col-md\\\">\\r\\n          <app-ethanol></app-ethanol>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Temperatuur\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n        <div class=\\\"col-md\\\">\\r\\n          <app-temperatuur></app-temperatuur>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Troebelheid\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n        <div class=\\\"col-md\\\">\\r\\n          <app-troebelheid></app-troebelheid>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\"","export default \"<form [formGroup]=\\\"alarmForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div>\\r\\n        <mat-form-field>\\r\\n            <mat-label>Kies een vat</mat-label>\\r\\n            <mat-select formControlName=\\\"proces\\\" (selectionChange)=\\\"onSelect($event.value)\\\">\\r\\n                <mat-option *ngFor=\\\"let proces of (processen | async)\\\" [value]=\\\"proces.id\\\">\\r\\n                    {{proces.vat?.nummer}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <section class=\\\"example-section\\\">\\r\\n            <mat-checkbox class=\\\"example-margin\\\" formControlName=\\\"disable\\\">Disable</mat-checkbox>\\r\\n        </section>\\r\\n    </div>\\r\\n    <div>\\r\\n        <mat-form-field>\\r\\n            <input matInput [(ngModel)]=\\\"alarmdataModel.minimumwaarde\\\" formControlName=\\\"minimum\\\" [disabled]=\\\"true\\\"\\r\\n                placeholder=\\\"Minimumwaarde\\\" type=\\\"text\\\" name=\\\"Metingswaarde\\\" />\\r\\n        </mat-form-field>\\r\\n        <mat-form-field>\\r\\n            <input matInput [(ngModel)]=\\\"alarmdataModel.maximumwaarde\\\" formControlName=\\\"maximum\\\"\\r\\n                placeholder=\\\"Maximumwaarde\\\" type=\\\"text\\\" name=\\\"Metingswaarde\\\" />\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n\\r\\n        <button [disabled]=\\\"!alarmForm.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n\\r\\n\\r\\n    </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"alarmForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <p>\\r\\n        <mat-form-field >\\r\\n            <mat-label>Kies een vat</mat-label>\\r\\n            <mat-select formControlName=\\\"proces\\\" (selectionChange)=\\\"onSelect($event.value)\\\">\\r\\n                <mat-option *ngFor=\\\"let proces of (processen | async)\\\" [value]=\\\"proces.id\\\">\\r\\n                    {{proces.vat?.nummer}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <section class=\\\"example-section\\\">\\r\\n        <mat-checkbox class=\\\"example-margin\\\" formControlName=\\\"disable\\\">Disable</mat-checkbox>\\r\\n    </section>\\r\\n    <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"alarmdataModel.minimumwaarde\\\" formControlName=\\\"minimum\\\" [disabled]=\\\"true\\\" placeholder=\\\"Minimumwaarde\\\"\\r\\n            type=\\\"text\\\" name=\\\"Metingswaarde\\\" />\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"alarmdataModel.maximumwaarde\\\" formControlName=\\\"maximum\\\"  placeholder=\\\"Maximumwaarde\\\"\\r\\n            type=\\\"text\\\" name=\\\"Metingswaarde\\\" />\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n    <div>\\r\\n        <p>\\r\\n            <button [disabled]=\\\"!alarmForm.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n        </p>\\r\\n\\r\\n    </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"alarmForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <p>\\r\\n        <mat-form-field >\\r\\n            <mat-label>Kies een vat</mat-label>\\r\\n            <mat-select formControlName=\\\"proces\\\" (selectionChange)=\\\"onSelect($event.value)\\\">\\r\\n                <mat-option *ngFor=\\\"let proces of (processen | async)\\\" [value]=\\\"proces.id\\\">\\r\\n                    {{proces.vat?.nummer}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <section class=\\\"example-section\\\">\\r\\n        <mat-checkbox class=\\\"example-margin\\\" formControlName=\\\"disable\\\">Disable</mat-checkbox>\\r\\n    </section>\\r\\n    <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"alarmdataModel.minimumwaarde\\\" formControlName=\\\"minimum\\\" [disabled]=\\\"true\\\" placeholder=\\\"Minimumwaarde\\\"\\r\\n            type=\\\"text\\\" name=\\\"Metingswaarde\\\" />\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"alarmdataModel.maximumwaarde\\\" formControlName=\\\"maximum\\\"  placeholder=\\\"Maximumwaarde\\\"\\r\\n            type=\\\"text\\\" name=\\\"Metingswaarde\\\" />\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n    <div>\\r\\n        <p>\\r\\n            <button [disabled]=\\\"!alarmForm.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n        </p>\\r\\n\\r\\n    </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"alarmForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <p>\\r\\n        <mat-form-field >\\r\\n            <mat-label>Kies een vat</mat-label>\\r\\n            <mat-select formControlName=\\\"proces\\\" (selectionChange)=\\\"onSelect($event.value)\\\">\\r\\n                <mat-option *ngFor=\\\"let proces of (processen | async)\\\" [value]=\\\"proces.id\\\">\\r\\n                    {{proces.vat?.nummer}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n<section class=\\\"example-section\\\">\\r\\n    <mat-checkbox class=\\\"example-margin\\\"  formControlName=\\\"disable\\\" >Disable</mat-checkbox>\\r\\n</section>\\r\\n    <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"alarmdataModel.minimumwaarde\\\" formControlName=\\\"minimum\\\" [disabled]=\\\"true\\\" placeholder=\\\"Minimumwaarde\\\"\\r\\n            type=\\\"text\\\" name=\\\"Metingswaarde\\\" />\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"alarmdataModel.maximumwaarde\\\" formControlName=\\\"maximum\\\"  placeholder=\\\"Maximumwaarde\\\"\\r\\n            type=\\\"text\\\" name=\\\"Metingswaarde\\\" />\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n    <div>\\r\\n        <p>\\r\\n            <button [disabled]=\\\"!alarmForm.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n        </p>\\r\\n\\r\\n    </div>\\r\\n</form>\"","export default \"<form [formGroup]=\\\"alarmForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <p>\\r\\n        <mat-form-field>\\r\\n            <mat-label>Kies een vat</mat-label>\\r\\n            <mat-select formControlName=\\\"proces\\\" (selectionChange)=\\\"onSelect($event.value)\\\">\\r\\n                <mat-option *ngFor=\\\"let proces of (processen | async)\\\" [value]=\\\"proces.id\\\">\\r\\n                    {{proces.vat?.nummer}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n    </p>\\r\\n    <section class=\\\"example-section\\\">\\r\\n        <mat-checkbox class=\\\"example-margin\\\" formControlName=\\\"disable\\\">Disable</mat-checkbox>\\r\\n    </section>\\r\\n    <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"alarmdataModel.minimumwaarde\\\" formControlName=\\\"minimum\\\" [disabled]=\\\"true\\\"\\r\\n            placeholder=\\\"Minimumwaarde\\\" type=\\\"text\\\" name=\\\"Metingswaarde\\\" />\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"alarmdataModel.maximumwaarde\\\" formControlName=\\\"maximum\\\" placeholder=\\\"Maximumwaarde\\\"\\r\\n            type=\\\"text\\\" name=\\\"Metingswaarde\\\" />\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n    <div>\\r\\n        <p>\\r\\n            <button [disabled]=\\\"!alarmForm.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n        </p>\\r\\n\\r\\n    </div>\\r\\n</form>\"","export default \"<div class=\\\"center-title\\\">\\r\\n    <h1>\\r\\n        Alarmeringspersonen beheren\\r\\n    </h1>\\r\\n</div>\\r\\n<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md\\\"></div>\\r\\n        <div class=\\\"col-md\\\">\\r\\n\\r\\n            <mat-form-field>\\r\\n                <mat-label>Kies een gebruiker</mat-label>\\r\\n                <mat-select (selectionChange)=\\\"onSelect($event.value)\\\"\\r\\n                    [(ngModel)]=\\\"AlarmDataGebruikerModel.gebruikerId\\\">\\r\\n                    <mat-option *ngFor=\\\"let gebruiker of (gebruikers | async)\\\" [value]=\\\"gebruiker.id\\\">\\r\\n                        {{gebruiker.voornaam}} {{gebruiker.naam}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md\\\">\\r\\n            Alarm\\r\\n            <div *ngFor=\\\"let proces of (processenSub | async)\\\">\\r\\n                <button mat-raised-button color=\\\"warn\\\" (click)=\\\"delete(proces)\\\">Delete\\r\\n                    alarm</button>{{proces.vat?.nummer}}\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md\\\">\\r\\n            Geen alarm\\r\\n            <div *ngFor=\\\"let proces of (processenNot | async)\\\">\\r\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"add(proces)\\\">Add\\r\\n                    alarm</button>\\r\\n                {{proces.vat?.nummer}}\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-md\\\"></div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div>\\r\\n\\r\\n        <mat-toolbar color=\\\"primary\\\">\\r\\n\\r\\n                <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                        <img margin=\\\"0\\\" src=\\\"../assets/Logo_small.png\\\" id=\\\"img\\\" height=\\\"40\\\" layout-align=\\\"right\\\" />\\r\\n                </button>\\r\\n                <h2 (click)=\\\"sidenav.toggle()\\\">CircuitBreakers</h2>\\r\\n        </mat-toolbar>\\r\\n</div>\\r\\n<mat-sidenav-container class=\\\"sidenav-container\\\" autosize>\\r\\n        <mat-sidenav mode=\\\"top\\\" class=\\\"nav\\\" opened=\\\"{{opened}}\\\">\\r\\n                <mat-nav-list>\\r\\n                        <a mat-list-item routerLink=\\\"/\\\" (click)=\\\"sidenav.toggle()\\\" routerLinkActive=\\\"active\\\"\\r\\n                                [routerLinkActiveOptions]=\\\"{ exact: true }\\\">\\r\\n                                <img margin=\\\"0\\\" src=\\\"../assets/Logo.png\\\" width=\\\"270\\\" layout-align=\\\"right\\\" />\\r\\n                        </a>\\r\\n\\r\\n                        <div *ngIf=\\\"login\\\">\\r\\n                                <a mat-list-item routerLink=\\\"/createProcess\\\" (click)=\\\"sidenav.toggle()\\\"\\r\\n                                        routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Start een\\r\\n                                        proces</a>\\r\\n                                <a mat-list-item routerLink=\\\"/afsluiten\\\" (click)=\\\"sidenav.toggle()\\\"\\r\\n                                        routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Sluit een\\r\\n                                        proces\\r\\n                                        af</a>\\r\\n                                <a mat-list-item [matMenuTriggerFor]=\\\"vini\\\">\\r\\n                                        Vinificaties\\r\\n                                        <mat-icon>expand_more</mat-icon>\\r\\n                                </a>\\r\\n                                <mat-menu #vini=\\\"matMenu\\\">\\r\\n                                        <button (click)=\\\"sidenav.toggle()\\\" mat-menu-item routerLink=\\\"/actief\\\"\\r\\n                                                routerLinkActive=\\\"active\\\"\\r\\n                                                [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Actieve\\r\\n                                                vinificaties</button>\\r\\n                                        <button (click)=\\\"sidenav.toggle()\\\" mat-menu-item routerLink=\\\"/nonactief\\\"\\r\\n                                                routerLinkActive=\\\"active\\\"\\r\\n                                                [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Voltooide\\r\\n                                                vinificaties</button>\\r\\n                                </mat-menu>\\r\\n\\r\\n                                <a mat-list-item [matMenuTriggerFor]=\\\"menu\\\">\\r\\n                                        Data toevoegen aan een proces\\r\\n                                        <mat-icon>expand_more</mat-icon>\\r\\n                                </a>\\r\\n                                <mat-menu #menu=\\\"matMenu\\\">\\r\\n                                        <button (click)=\\\"sidenav.toggle()\\\" mat-menu-item routerLink=\\\"/addMeting\\\"\\r\\n                                                routerLinkActive=\\\"active\\\"\\r\\n                                                [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Voeg een meting\\r\\n                                                toe aan een proces</button>\\r\\n                                        <button mat-menu-item routerLink=\\\"/addActie\\\" routerLinkActive=\\\"active\\\"\\r\\n                                                [routerLinkActiveOptions]=\\\"{ exact: true }\\\"\\r\\n                                                (click)=\\\"sidenav.toggle()\\\">Voeg een event\\r\\n                                                toe aan een proces</button>\\r\\n                                </mat-menu>\\r\\n\\r\\n                                <a mat-list-item [matMenuTriggerFor]=\\\"alarm\\\">\\r\\n                                        Alarmering aanpassen\\r\\n                                        <mat-icon>expand_more</mat-icon>\\r\\n                                </a>\\r\\n                                <mat-menu #alarm=\\\"matMenu\\\">\\r\\n                                        <button mat-menu-item routerLink=\\\"/alarmdata\\\" (click)=\\\"sidenav.toggle()\\\"\\r\\n                                                routerLinkActive=\\\"active\\\"\\r\\n                                                [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Verander de\\r\\n                                                alarmeringswaarden</button>\\r\\n                                        <button mat-menu-item routerLink=\\\"/alarmpersonen\\\" (click)=\\\"sidenav.toggle()\\\"\\r\\n                                                routerLinkActive=\\\"active\\\"\\r\\n                                                [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Manage de\\r\\n                                                alarmeringspersonen</button>\\r\\n                                </mat-menu>\\r\\n\\r\\n                                <div *ngIf=\\\"admin\\\">\\r\\n                                        <a mat-list-item [matMenuTriggerFor]=\\\"admin\\\">\\r\\n                                                Admin Data\\r\\n                                                <mat-icon>expand_more</mat-icon>\\r\\n                                        </a>\\r\\n                                        <mat-menu #admin=\\\"matMenu\\\">\\r\\n                                                <button mat-menu-item routerLink=\\\"/adminToevoegen\\\"\\r\\n                                                        (click)=\\\"sidenav.toggle()\\\" routerLinkActive=\\\"active\\\"\\r\\n                                                        [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Data\\r\\n                                                        toevoegen</button>\\r\\n                                                <button mat-menu-item routerLink=\\\"/adminEdit\\\" (click)=\\\"sidenav.toggle()\\\"\\r\\n                                                        routerLinkActive=\\\"active\\\"\\r\\n                                                        [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Data\\r\\n                                                        beheren</button>\\r\\n                                        </mat-menu>\\r\\n                                </div>\\r\\n                                <a mat-list-item routerLinkActive=\\\"active\\\" (click)=\\\"sidenav.toggle()\\\" (click)=\\\"logOut()\\\"\\r\\n                                        [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Logout</a>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!login\\\">\\r\\n                                <a mat-list-item routerLink=\\\"/login\\\" (click)=\\\"sidenav.toggle()\\\"\\r\\n                                        routerLinkActive=\\\"active\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\">Login</a>\\r\\n                        </div>\\r\\n                </mat-nav-list>\\r\\n        </mat-sidenav>\\r\\n        <mat-sidenav-content class=\\\"content\\\">\\r\\n                <router-outlet></router-outlet>\\r\\n        </mat-sidenav-content>\\r\\n</mat-sidenav-container>\"","export default \"<div class=\\\"center-image\\\"><img width=\\\"100%\\\" src=\\\"../../assets/Logo.png\\\" /></div>\\r\\n<div class=\\\"center-title\\\">\\r\\n    <h1>Vinificatie Monitoring</h1>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"center-body\\\">\\r\\n    <h2>\\r\\n        Welkom op de vinificatiemontoring applicatie. Hier kan u virtueel wijnprocessen starten en opvolgen.\\r\\n    </h2>\\r\\n    <p>\\r\\n        Als u nog geen account heeft kan u aan een admin vragen om dit voor u aan te maken.</p>\\r\\n    <p>\\r\\n        Anders kan u zich aanmelden door op onderstaande knop te drukken.\\r\\n    </p>\\r\\n\\r\\n    <button *ngIf=\\\"!login\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"Login()\\\" routerLink=\\\"/login\\\">\\r\\n        Ga naar login\\r\\n    </button>\\r\\n</div>\"","export default \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md\\\">\\r\\n            <mat-card class=\\\"login-card\\\">\\r\\n                <mat-card-title class=\\\"login-card-title\\\">Login</mat-card-title>\\r\\n                <mat-card-subtitle>Gelive in te loggen om de applicatie te gebruiken</mat-card-subtitle>\\r\\n                <form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n                    <div class=\\\"login-container center-block\\\">\\r\\n                        <p>\\r\\n                            <mat-form-field style=\\\"width:300px\\\">\\r\\n                                <input matInput placeholder=\\\"Email\\\" type=\\\"email\\\" name=\\\"email\\\"\\r\\n                                    [(ngModel)]=\\\"login.email\\\" />\\r\\n                            </mat-form-field>\\r\\n                        </p>\\r\\n\\r\\n                        <p>\\r\\n                            <mat-form-field style=\\\"width:300px\\\">\\r\\n                                <input matInput placeholder=\\\"Wachtwoord\\\" type=\\\"password\\\" name=\\\"password\\\"\\r\\n                                    [(ngModel)]=\\\"login.wachtwoord\\\" />\\r\\n                            </mat-form-field>\\r\\n                        </p>\\r\\n\\r\\n\\r\\n                        <mat-card-actions>\\r\\n                            <div>\\r\\n                                <button mat-raised-button color=\\\"primary\\\" class=\\\"login-card-button\\\"\\r\\n                                    type=\\\"submit\\\">Login</button>\\r\\n                            </div>\\r\\n\\r\\n                        </mat-card-actions>\\r\\n\\r\\n                    </div>\\r\\n                </form>\\r\\n            </mat-card>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"center-title\\\">\\r\\n    <h1>Voeg een event toe!</h1>\\r\\n</div>\\r\\n<form [formGroup]=\\\"addEventForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                <div>\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Kies een vat</mat-label>\\r\\n                        <mat-select formControlName=\\\"vat\\\" [(ngModel)]=\\\"eventModel.vinificatieId\\\">\\r\\n                            <mat-option *ngFor=\\\"let proces of (processen | async)\\\" [value]=\\\"proces.id\\\">\\r\\n                                {{proces.vat?.nummer}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Soort event</mat-label>\\r\\n                        <mat-select formControlName=\\\"soortEvent\\\" [(ngModel)]=\\\"eventModel.soortEventId\\\">\\r\\n                            <mat-option *ngFor=\\\"let event of (events |async)\\\" [value]=\\\"event.id\\\">\\r\\n                                {{event.naam}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                <div class=\\\"input-wrapper\\\">\\r\\n                    <div>\\r\\n                        <label>Datum en tijd:</label></div>\\r\\n                    <div>\\r\\n                        <input [owlDateTimeTrigger]=\\\"dtPicker1\\\" [owlDateTime]=\\\"dtPicker1\\\" [(ngModel)]=\\\"eventModel.datum\\\"\\r\\n                            formControlName=\\\"datum\\\">\\r\\n                        <owl-date-time #dtPicker1></owl-date-time>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"center-button\\\">\\r\\n        <button [disabled]=\\\"!addEventForm.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n\\r\\n</form>\"","export default \"<div class=\\\"center-title\\\">\\r\\n    <h1>Voeg een meting toe!</h1>\\r\\n</div>\\r\\n<form [formGroup]=\\\"addMetingForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                <div>\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Kies een vat</mat-label>\\r\\n                        <mat-select formControlName=\\\"vat\\\" [(ngModel)]=\\\"metingModel.vinificatieId\\\">\\r\\n                            <mat-option *ngFor=\\\"let proces of (processen | async)\\\" [value]=\\\"proces.id\\\">\\r\\n                                {{proces.vat?.nummer}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md\\\"></div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Metingswaarde\\\" [(ngModel)]=\\\"metingModel.meting\\\"\\r\\n                    formControlName=\\\"Metingswaarde\\\" type=\\\"text\\\" name=\\\"Metingswaarde\\\" />\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n                <mat-label>Kies een metingsType</mat-label>\\r\\n                <mat-select formControlName=\\\"soortMeting\\\" [(ngModel)]=\\\"metingModel.soortMetingId\\\">\\r\\n                    <mat-option *ngFor=\\\"let type of (metingen | async)\\\" [value]=\\\"type.id\\\">\\r\\n                        {{type.naam}}\\r\\n                    </mat-option>\\r\\n                </mat-select>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                <div class=\\\"input-wrapper\\\">\\r\\n                    <div>\\r\\n                        <label>Datum en tijd:</label>\\r\\n                    </div>\\r\\n                    <div>\\r\\n                        <input [owlDateTimeTrigger]=\\\"dtPicker1\\\" [owlDateTime]=\\\"dtPicker1\\\" [(ngModel)]=\\\"metingModel.tijd\\\"\\r\\n                            formControlName=\\\"tijd\\\">\\r\\n                        <owl-date-time #dtPicker1></owl-date-time>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"center-button\\\">\\r\\n        <button [disabled]=\\\"!addMetingForm.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n\\r\\n</form>\"","export default \"<div>\\r\\n    <div class=\\\"center-title\\\">\\r\\n        <h1>Kies een proces om af te sluiten</h1>\\r\\n    </div>\\r\\n    <div class=\\\"container\\\">\\r\\n        <div>\\r\\n            <div *ngFor=\\\"let proces of (processen | async) \\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md\\\"></div>\\r\\n                    <div class=\\\"col-md\\\">\\r\\n                        <button mat-raised-button color=\\\"warn\\\" addEventForm (click)=\\\"Sluit(proces)\\\">\\r\\n                            Sluit af\\r\\n                        </button>\\r\\n                        {{proces.vat?.nummer}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md\\\"></div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<form [formGroup]=\\\"createProcessForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"center-title\\\">\\r\\n        <h1>Start een nieuw proces</h1>\\r\\n    </div>\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n                <div>\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Kies een vat</mat-label>\\r\\n                        <mat-select formControlName=\\\"vat\\\" [(ngModel)]=\\\"procesModel.vatId\\\">\\r\\n                            <mat-option *ngFor=\\\"let vat of (vaten | async)\\\" [value]=\\\"vat.id\\\">\\r\\n                                {{vat.nummer}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Kies een persmethode</mat-label>\\r\\n                        <mat-select formControlName=\\\"pers\\\" [(ngModel)]=\\\"procesModel.persmethodeId\\\">\\r\\n                            <mat-option *ngFor=\\\"let pers of (persen | async)\\\" [value]=\\\"pers.id\\\">\\r\\n                                {{pers.methode}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <mat-form-field>\\r\\n                        <mat-label>Kies het wijntype</mat-label>\\r\\n                        <mat-select formControlName=\\\"wijntype\\\" [(ngModel)]=\\\"procesModel.wijnTypeId\\\">\\r\\n                            <mat-option *ngFor=\\\"let wijntype of (wijntypes | async)\\\" [value]=\\\"wijntype.id\\\">\\r\\n                                {{wijntype.naam}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"col-md\\\">\\r\\n                <div>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Pers hoeveelheid in L\\\" [(ngModel)]=\\\"procesModel.persHoeveelheid\\\"\\r\\n                            formControlName=\\\"persHoeveelheid\\\" type=\\\"text\\\" name=\\\"persHoeveelheid\\\" />\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Oogst in kg\\\" formControlName=\\\"oogst\\\" type=\\\"text\\\" name=\\\"oogst\\\"\\r\\n                            [(ngModel)]=\\\"procesModel.oogst\\\" />\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Bar\\\" formControlName=\\\"bar\\\" type=\\\"text\\\" name=\\\"bar\\\"\\r\\n                            [(ngModel)]=\\\"procesModel.persDruk\\\" />\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div>\\r\\n                    <mat-form-field>\\r\\n                        <input matInput placeholder=\\\"Jaargang\\\" formControlName=\\\"jaargang\\\" type=\\\"text\\\" name=\\\"jaargang\\\"\\r\\n                            [(ngModel)]=\\\"procesModel.jaargang\\\" />\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\">\\r\\n\\r\\n                <div class=\\\"form-group scroll\\\">\\r\\n                    <label for=\\\"options\\\">DruifSoorten :</label>\\r\\n                    <label *ngFor=\\\"let druif of (druiven| async)\\\" class=\\\"form-control\\\">\\r\\n                        <input type=\\\"checkbox\\\" name=\\\"options\\\" value=\\\"option\\\" (change)=\\\"onChange(druif)\\\" />\\r\\n                        {{druif.druifsoort}}\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"center-button\\\">\\r\\n        <button [disabled]=\\\"!createProcessForm.valid\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n\\r\\n</form>\"","export default \"<ul class=\\\"nav nav-pills mb-3\\\" id=\\\"pills-tab\\\" role=\\\"tablist\\\">\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link active\\\" id=\\\"add-event-tab\\\" data-toggle=\\\"process\\\" href=\\\"#add-event\\\" role=\\\"tab\\\"\\n            aria-controls=\\\"add-event\\\" aria-selected=\\\"true\\\">Voeg een event toe</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" id=\\\"add-meting-tab\\\" data-toggle=\\\"process\\\" href=\\\"#add-meting\\\" role=\\\"tab\\\"\\n            aria-controls=\\\"add-meting\\\" aria-selected=\\\"false\\\">Voeg een meting toe</a>\\n    </li>\\n</ul>\\n<div class=\\\"tab-content\\\" id=\\\"process-tabContent\\\">\\n    <div class=\\\"tab-pane fade show active\\\" id=\\\"add-event\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"add-event-tab\\\">\\n        <app-add-actie> </app-add-actie>\\n    </div>\\n    <div class=\\\"tab-pane fade\\\" id=\\\"add-meting\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"add-meting-tab\\\">\\n        <app-add-meting></app-add-meting>\\n    </div>\\n\\n</div>\"","export default \"<iframe [src]='sanitizer.bypassSecurityTrustResourceUrl(iframe)' width=\\\"100%\\\" height=\\\"98%\\\"></iframe>\\r\\n\"","export default \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 col-lg-4 col-xl-3\\\" *ngFor=\\\"let p of (processen | async)\\\">\\r\\n            <div class=\\\"card mt-3 mb-3\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                <h5 class=\\\"card-title\\\">{{p.vat?.nummer}} - Vinificatie {{p.id}}</h5>\\r\\n                </div>\\r\\n                <iframe class=\\\"card-img-top\\\" [src]=\\\"sanitizer.bypassSecurityTrustResourceUrl(p.iframe)\\\" frameborder=\\\"0\\\" width=\\\"100%\\\" height=\\\"98%\\\"></iframe>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <ul>                        \\r\\n                        <li>Wijnsoort: {{p.wijnType?.naam}}</li>                    \\r\\n                        <li>Jaargang: {{p.jaargang}}</li>\\r\\n                        <li>Pershoeveelheid: {{p.persHoeveelheid}}L</li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                <a [routerLink]=\\\"['/dashboard/' + (p.vatId)]\\\" class=\\\"btn btn-primary\\\">Dashboard</a>\\r\\n                <a [routerLink]=\\\"['/detail/' + (p.vatId)]\\\" class=\\\"btn btn-primary float-right\\\">Details</a>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"container mb-5\\\">\\r\\n    <mat-tab-group>\\r\\n        <mat-tab label=\\\"Overzicht\\\">\\r\\n            <h1>Overzicht vinificatie {{process?.id}}</h1>\\r\\n            <div class=\\\"jumbotron\\\" m-3>\\r\\n                \\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <h3 class=\\\"display-6\\\">Vinificatie \\r\\n                            <span *ngIf=\\\"process?.actief == 0\\\"  class=\\\"badge badge-pill badge-danger\\\">Voltooid</span>\\r\\n                            <span *ngIf=\\\"process?.actief == 1\\\"  class=\\\"badge badge-pill badge-success\\\">Actief</span>\\r\\n                        </h3>\\r\\n                        <ul>                        \\r\\n                            <li>Wijnsoort: {{process?.wijnType?.naam}}</li>                    \\r\\n                            <li>Jaargang: {{process?.jaargang}}</li>\\r\\n                            <li>Druifsoorten:</li>\\r\\n                            <ul> \\r\\n                                <li *ngFor=\\\"let d of (process?.druif | async)\\\">{{d?.druifsoort}}</li>\\r\\n                            </ul>\\r\\n                            <li>Oogst: {{process?.oogst}} Kg</li>\\r\\n                            <li>Persmethode: {{process?.persmethode?.methode}}</li>\\r\\n                            <li>Pershoeveelheid: {{process?.persHoeveelheid}}L</li>\\r\\n                            <li>Persdruk: {{process?.persDruk}} Bar</li>\\r\\n                        </ul>                        \\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-6\\\">\\r\\n                        <h3 class=\\\"display-6\\\">Vat</h3>\\r\\n                        <ul>\\r\\n                            <li>{{process?.vat?.nummer}}</li>\\r\\n                            <li>Locatie: {{process?.vat?.locatie}}</li>\\r\\n                            <li *ngIf=\\\"process?.vat?.koelmantel == 0\\\">Koelmantel: Neen</li>\\r\\n                            <li *ngIf=\\\"process?.vat?.koelmantel == 1\\\">Koelmantel: Ja</li>\\r\\n                            <li *ngIf=\\\"process?.vat?.deksel == 0\\\">Deksel: Neen</li>\\r\\n                            <li *ngIf=\\\"process?.vat?.deksel == 1\\\">Deksel: Ja</li>\\r\\n                            <li *ngIf=\\\"process?.vat?.volume == 0\\\">Volume: Neen</li>\\r\\n                            <li *ngIf=\\\"process?.vat?.volume == 1\\\">Volume: Ja</li>\\r\\n                        </ul>\\r\\n                    </div>\\r\\n                </div>               \\r\\n            </div>\\r\\n        </mat-tab>\\r\\n\\r\\n        <mat-tab label=\\\"Metingen\\\">\\r\\n            <h2>Handmatig ingemeten data</h2>\\r\\n            <mat-form-field>\\r\\n                <mat-label>Filter soort meting</mat-label>\\r\\n                <input matInput (keyup)=\\\"applyFilterMeting($event.target.value)\\\" >\\r\\n            </mat-form-field>\\r\\n            <table mat-table #metingSort=\\\"matSort\\\" [dataSource]=\\\"dataSourceMeting\\\" matSort>\\r\\n                <ng-container matColumnDef=\\\"soortMeting.naam\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Soort meting </th>\\r\\n                <td mat-cell *matCellDef=\\\"let m\\\">{{m?.soortMeting?.naam}}</td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"meting\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Meting </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let m\\\">{{ m?.meting }}</td>\\r\\n                    </ng-container>\\r\\n            \\r\\n                <ng-container matColumnDef=\\\"tijd\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Datum </th>\\r\\n                <td mat-cell *matCellDef=\\\"let m\\\"> {{m?.tijd | date:'dd-MM-yyyy HH:mm:ss'}} </td>\\r\\n                </ng-container>        \\r\\n            \\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsMeting\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsMeting;\\\"></tr>\\r\\n            </table>\\r\\n            <mat-paginator #metingPaginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n          </mat-tab>\\r\\n\\r\\n          <mat-tab label=\\\"Events\\\">\\r\\n            <h2>Events</h2>\\r\\n            <mat-form-field>\\r\\n                <mat-label>Filter event</mat-label>\\r\\n                <input matInput (keyup)=\\\"applyFilterEvent($event.target.value)\\\" >\\r\\n            </mat-form-field>\\r\\n            <table mat-table #eventsSort=\\\"matSort\\\" [dataSource]=\\\"dataSourceEvent\\\" matSort>\\r\\n                <ng-container matColumnDef=\\\"soortEvent.naam\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> Event </th>\\r\\n                <td mat-cell *matCellDef=\\\"let e\\\">{{e?.soortEvent?.naam}}</td>\\r\\n                </ng-container>\\r\\n            \\r\\n                <ng-container matColumnDef=\\\"datum\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Datum </th>\\r\\n                <td mat-cell *matCellDef=\\\"let e\\\"> {{e?.datum | date:'dd-MM-yyyy HH:mm:ss'}} </td>\\r\\n                </ng-container>        \\r\\n            \\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsEvent\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsEvent;\\\"></tr>\\r\\n            </table>\\r\\n            <mat-paginator #eventsPaginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n          </mat-tab>\\r\\n\\r\\n          <mat-tab label=\\\"Alarmen\\\">\\r\\n            <h2>Alarmen</h2>\\r\\n            <mat-form-field>\\r\\n                <mat-label>Filter alarm</mat-label>\\r\\n                <input matInput (keyup)=\\\"applyFilterAlarm($event.target.value)\\\" >\\r\\n            </mat-form-field>\\r\\n            <table mat-table #alarmSort=\\\"matSort\\\" [dataSource]=\\\"dataSourceAlarm\\\" matSort>\\r\\n                <ng-container matColumnDef=\\\"bericht\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Alarm </th>\\r\\n                <td mat-cell *matCellDef=\\\"let a\\\">{{a?.bericht}}</td>\\r\\n                </ng-container>\\r\\n            \\r\\n                <ng-container matColumnDef=\\\"datum\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Datum </th>\\r\\n                <td mat-cell *matCellDef=\\\"let a\\\"> {{a?.datum | date:'dd-MM-yyyy HH:mm:ss'}} </td>\\r\\n                </ng-container>        \\r\\n            \\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsAlarm\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsAlarm;\\\"></tr>\\r\\n            </table>\\r\\n            <mat-paginator #alarmPaginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n                \\r\\n          </mat-tab>\\r\\n\\r\\n          \\r\\n    </mat-tab-group>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"container mb-5\\\">\\r\\n\\r\\n    <h1 class=\\\"header\\\">Voltooide vinificatieprocessen</h1>\\r\\n\\r\\n    <mat-form-field>\\r\\n        <mat-label>Filter soort meting</mat-label>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" >\\r\\n    </mat-form-field>\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n        <!-- vinificatienummer Column -->\\r\\n        <ng-container matColumnDef=\\\"naam\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Vinificatienummer </th>\\r\\n        <td mat-cell *matCellDef=\\\"let proces\\\"> <a [routerLink]=\\\"['/detail/' + (proces.id)]\\\" >{{proces.naam}}</a></td>\\r\\n        </ng-container>\\r\\n    \\r\\n        <!-- vat Column -->\\r\\n        <ng-container matColumnDef=\\\"vat.nummer\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Vat </th>\\r\\n        <td mat-cell *matCellDef=\\\"let proces\\\"> {{proces.vat?.nummer}} </td>\\r\\n        </ng-container>\\r\\n    \\r\\n        <!-- wijnType Column -->\\r\\n        <ng-container matColumnDef=\\\"wijnType.naam\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Soort wijn </th>\\r\\n        <td mat-cell *matCellDef=\\\"let proces\\\"> {{proces.wijnType?.naam}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- jaargang Column -->\\r\\n        <ng-container matColumnDef=\\\"jaargang\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Jaargang </th>\\r\\n            <td mat-cell *matCellDef=\\\"let proces\\\"> {{proces.jaargang}}</td>\\r\\n            </ng-container>\\r\\n    \\r\\n        <!-- pershoeveelheid Column -->\\r\\n        <ng-container matColumnDef=\\\"persHoeveelheid\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Aantal liter </th>\\r\\n        <td mat-cell *matCellDef=\\\"let proces\\\"> {{proces.persHoeveelheid}} L </td>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n    \\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLW92ZXJ6aWNodC9hZG1pbi1vdmVyemljaHQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-overzicht',\r\n  templateUrl: './admin-overzicht.component.html',\r\n  styleUrls: ['./admin-overzicht.component.css']\r\n})\r\nexport class AdminOverzichtComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"button{\\r\\n    padding: 3;\\r\\n    margin: 1;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRtaW4vYWRtaW4tb3ZlcnppY2h0L2RydWlmLWJlaGVyZW4vZHJ1aWYtYmVoZXJlbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLFNBQVM7QUFDYiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLW92ZXJ6aWNodC9kcnVpZi1iZWhlcmVuL2RydWlmLWJlaGVyZW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJ1dHRvbntcclxuICAgIHBhZGRpbmc6IDM7XHJcbiAgICBtYXJnaW46IDE7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { of } from 'rxjs';\r\nimport { Druif } from 'src/app/models/druif.model';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-druif-beheren',\r\n  templateUrl: './druif-beheren.component.html',\r\n  styleUrls: ['./druif-beheren.component.css']\r\n})\r\nexport class DruifBeherenComponent implements OnInit {\r\n  druifModel: Druif;\r\n  druiven;\r\n  closeResult: string;\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private modalService: NgbModal, private _snackBar: MatSnackBar) {\r\n    this.InstantiateLists();\r\n  }\r\n\r\n  createDruifSoortForm = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  });\r\n\r\n  InstantiateLists() {\r\n    this._service.getAllDruifsoorten().subscribe(result => {\r\n      this.druiven = of(result.records);\r\n      console.log(result)\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  Delete(druif: Druif) {\r\n    this._service.deleteDruifSoort(druif).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n  \r\n  Edit() {\r\n    this.openSnackBar();\r\n    this._service.updateDruif(this.druifModel).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De druifsoort is aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  open(content, druif: Druif) {\r\n    this.druifModel = druif;\r\n    console.log(this.druifModel);\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLW92ZXJ6aWNodC9ldmVudC1iZWhlcmVuL2V2ZW50LWJlaGVyZW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of } from 'rxjs';\r\nimport { Druif } from 'src/app/models/druif.model';\r\nimport { SoortMeting } from 'src/app/models/soort-meting.model';\r\nimport { SoortEvent } from 'src/app/models/soort-event.model';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-event-beheren',\r\n  templateUrl: './event-beheren.component.html',\r\n  styleUrls: ['./event-beheren.component.css']\r\n})\r\nexport class EventBeherenComponent implements OnInit {\r\n\r\n  Model: SoortEvent;\r\n  events;\r\n  closeResult: string;\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private modalService: NgbModal, private _snackBar: MatSnackBar) {\r\n    this.InstantiateLists();\r\n  }\r\n\r\n  createForm = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  });\r\n\r\n  InstantiateLists() {\r\n    this._service.getAllEventsoorten().subscribe(result => {\r\n      this.events = of(result.records);\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  Delete(event: SoortEvent) {\r\n    this._service.deleteEventSoort(event).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n\r\n  Edit() {\r\n    this.openSnackBar();\r\n    this._service.updateEvent(this.Model).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n  openSnackBar() {\r\n    this._snackBar.open(\"Het soort event is aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  open(content, event: SoortEvent) {\r\n    this.Model = event;\r\n    console.log(this.Model);\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLW92ZXJ6aWNodC9nZWJydWlrZXItYmVoZXJlbi9nZWJydWlrZXItYmVoZXJlbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Gebruiker } from 'src/app/models/gebruiker.model';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-gebruiker-beheren',\r\n  templateUrl: './gebruiker-beheren.component.html',\r\n  styleUrls: ['./gebruiker-beheren.component.css']\r\n})\r\nexport class GebruikerBeherenComponent implements OnInit {\r\n\r\n  Model: Gebruiker;\r\n  gebruikers;\r\n  closeResult: string;\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private modalService: NgbModal, private _snackBar: MatSnackBar) {\r\n    this.InstantiateLists();\r\n  }\r\n\r\n  createForm = this.fb.group({\r\n    voornaam: ['', Validators.required],\r\n    achternaam: ['', Validators.required],\r\n    telefoonnummer: ['', Validators.required],\r\n    email: ['', Validators.required],\r\n    wachtwoord: ['', Validators.required]\r\n  });\r\n\r\n\r\n  InstantiateLists() {\r\n    this._service.getAllGebruikers().subscribe(result => {\r\n      this.gebruikers = of(result.records);\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  openSnackBar() {\r\n    this._snackBar.open(\"de gebruiker is aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n  Edit() {\r\n    this.openSnackBar();\r\n    console.log(this.Model);\r\n    this._service.updateGebruiker(this.Model).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n\r\n  open(content, gebruiker: Gebruiker) {\r\n    this.Model = gebruiker;\r\n    console.log(this.Model);\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLW92ZXJ6aWNodC9tYXRlcmlhYWwtYmVoZXJlbi9tYXRlcmlhYWwtYmVoZXJlbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Materiaal } from 'src/app/models/materiaal.model';\r\nimport { of } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-materiaal-beheren',\r\n  templateUrl: './materiaal-beheren.component.html',\r\n  styleUrls: ['./materiaal-beheren.component.css']\r\n})\r\nexport class MateriaalBeherenComponent implements OnInit {\r\n  Model: Materiaal;\r\n  materialen;\r\n  closeResult: string;\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private modalService: NgbModal, private _snackBar: MatSnackBar) {\r\n    this.InstantiateLists();\r\n  }\r\n\r\n  createForm = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  });\r\n\r\n  InstantiateLists() {\r\n    this._service.getAllMaterialen().subscribe(result => {\r\n      this.materialen = of(result.records);\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  Delete(materiaal: Materiaal) {\r\n    this._service.deleteSoortMeting(materiaal).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n\r\n  Edit() {\r\n    this.openSnackBar();\r\n    this._service.updateMateriaal(this.Model).subscribe(result => { this.InstantiateLists() });\r\n\r\n  }\r\n\r\n  openSnackBar() {\r\n    this._snackBar.open(\"Het materiaal is aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n  open(content, materiaal: Materiaal) {\r\n    this.Model = materiaal;\r\n    console.log(this.Model);\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLW92ZXJ6aWNodC9tZXRob2RlLWJlaGVyZW4vbWV0aG9kZS1iZWhlcmVuLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Persmethode } from 'src/app/models/persmethode.model';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-methode-beheren',\r\n  templateUrl: './methode-beheren.component.html',\r\n  styleUrls: ['./methode-beheren.component.css']\r\n})\r\nexport class MethodeBeherenComponent implements OnInit {\r\n\r\n  Model: Persmethode;\r\n  methodes;\r\n  closeResult: string;\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private modalService: NgbModal, private _snackBar: MatSnackBar) {\r\n    this.InstantiateLists();\r\n  }\r\n\r\n  createForm = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  });\r\n\r\n  InstantiateLists() {\r\n    this._service.getAllPersMethodes().subscribe(result => {\r\n      this.methodes = of(result.records);\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  Delete(methode: Persmethode) {\r\n    this._service.deletePersMethode(methode).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n\r\n  Edit(methode: Persmethode) {\r\n    this.openSnackBar();\r\n    this._service.updateMethode(this.Model).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De persmethode is aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  open(content, methode: Persmethode) {\r\n    this.Model = methode;\r\n    console.log(this.Model);\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLW92ZXJ6aWNodC9tZXRpbmctYmVoZXJlbi9tZXRpbmctYmVoZXJlbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { SoortMeting } from 'src/app/models/soort-meting.model';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-meting-beheren',\r\n  templateUrl: './meting-beheren.component.html',\r\n  styleUrls: ['./meting-beheren.component.css']\r\n})\r\nexport class MetingBeherenComponent implements OnInit {\r\n\r\n  Model: SoortMeting;\r\n  metingen;\r\n  closeResult: string;\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private modalService: NgbModal, private _snackBar: MatSnackBar) {\r\n    this.InstantiateLists();\r\n  }\r\n\r\n  createForm = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  });\r\n\r\n  InstantiateLists() {\r\n    this._service.getAllMetingsoorten().subscribe(result => {\r\n      this.metingen = of(result.records);\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  Delete(meting: SoortMeting) {\r\n    this._service.deleteSoortMeting(meting).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n\r\n  Edit() {\r\n    this.openSnackBar();\r\n    this._service.updateMeting(this.Model).subscribe(result => { this.InstantiateLists() });\r\n\r\n  }\r\n  openSnackBar() {\r\n    this._snackBar.open(\"Het soort meting is aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  open(content, meting: SoortMeting) {\r\n    this.Model = meting;\r\n    console.log(this.Model);\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLW92ZXJ6aWNodC92YXQtYmVoZXJlbi92YXQtYmVoZXJlbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Vat } from 'src/app/models/vat.model';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-vat-beheren',\r\n  templateUrl: './vat-beheren.component.html',\r\n  styleUrls: ['./vat-beheren.component.css']\r\n})\r\nexport class VatBeherenComponent implements OnInit {\r\n  Model = new Vat(0, null, null, null, null, null, null, null, null, null);\r\n  vaten;\r\n  closeResult: string;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private modalService: NgbModal, private _snackBar: MatSnackBar) {\r\n    this.InstantiateLists();\r\n  }\r\n\r\n  createForm = this.fb.group({\r\n    naam: ['', Validators.required],\r\n    locatie: ['', Validators.required],\r\n    volume: ['', Validators.required],\r\n    deksel: ['', Validators.required],\r\n    koelmantel: ['', Validators.required],\r\n    mangat: ['', Validators.required],\r\n    materiaal: ['', Validators.required]\r\n  });\r\n\r\n  InstantiateLists() {\r\n    this._service.getAllVaten().subscribe(result => {\r\n      this.vaten = of(result.records);\r\n    });\r\n\r\n\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  Delete(vat: Vat) {\r\n    this._service.deleteVat(vat).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n  Edit() {\r\n    this.openSnackBar();\r\n    this._service.updateVat(this.Model).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n  openSnackBar() {\r\n    this._snackBar.open(\"Het vat is aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  open(content, vat: Vat) {\r\n    this.Model = vat;\r\n    console.log(this.Model);\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLW92ZXJ6aWNodC93aWpuLWJlaGVyZW4vd2lqbi1iZWhlcmVuLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { WijnType } from 'src/app/models/wijn-type.model';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { of } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-wijn-beheren',\r\n  templateUrl: './wijn-beheren.component.html',\r\n  styleUrls: ['./wijn-beheren.component.css']\r\n})\r\nexport class WijnBeherenComponent implements OnInit {\r\n\r\n  Model: WijnType;\r\n  wijnen;\r\n  closeResult: string;\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private modalService: NgbModal, private _snackBar: MatSnackBar) {\r\n    this.InstantiateLists();\r\n  }\r\n\r\n  createForm = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  });\r\n\r\n  InstantiateLists() {\r\n    this._service.getAllWijnTypes().subscribe(result => {\r\n      this.wijnen = of(result.records);\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  Delete(wijn: WijnType) {\r\n    this._service.deleteSoortMeting(wijn).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n\r\n  Edit() {\r\n    this.openSnackBar();\r\n    this._service.updateWijnType(this.Model).subscribe(result => { this.InstantiateLists() });\r\n  }\r\n\r\n  openSnackBar() {\r\n    this._snackBar.open(\"Het wijntype is aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n  open(content, wijn: WijnType) {\r\n    this.Model = wijn;\r\n    console.log(this.Model);\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXRvZXZvZWdlbi9hZG1pbi10b2V2b2VnZW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-toevoegen',\r\n  templateUrl: './admin-toevoegen.component.html',\r\n  styleUrls: ['./admin-toevoegen.component.css']\r\n})\r\nexport class AdminToevoegenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXRvZXZvZWdlbi9kcnVpZi1zb29ydC10b2V2b2VnZW4vZHJ1aWYtc29vcnQtdG9ldm9lZ2VuLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Druif } from 'src/app/models/druif.model';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-druif-soort-toevoegen',\r\n  templateUrl: './druif-soort-toevoegen.component.html',\r\n  styleUrls: ['./druif-soort-toevoegen.component.css']\r\n})\r\nexport class DruifSoortToevoegenComponent implements OnInit {\r\n\r\n  druifModel = new Druif(0, \"\");\r\n\r\n  createDruifSoortForm = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  });\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De druifsoort is aangemaakt!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    this._service.addDruifSoort(this.druifModel).subscribe(result => { this.druifModel = new Druif(0, \"\"); });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXRvZXZvZWdlbi9ldmVudC10b2V2b2VnZW4vZXZlbnQtdG9ldm9lZ2VuLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { SoortEvent } from 'src/app/models/soort-event.model';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-event-toevoegen',\r\n  templateUrl: './event-toevoegen.component.html',\r\n  styleUrls: ['./event-toevoegen.component.css']\r\n})\r\nexport class EventToevoegenComponent implements OnInit {\r\n\r\n  model = new SoortEvent(0, \"\");\r\n\r\n  Form = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  });\r\n  openSnackBar() {\r\n    this._snackBar.open(\"Het soort event is aangemaakt!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    this._service.addEventSoort(this.model).subscribe(result=>{this.model = new SoortEvent(0, \"\");});\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXRvZXZvZWdlbi9nZWJydWlrZXItdG9ldm9lZ2VuL2dlYnJ1aWtlci10b2V2b2VnZW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Gebruiker } from 'src/app/models/gebruiker.model';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { Rol } from 'src/app/models/rol.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-gebruiker-toevoegen',\r\n  templateUrl: './gebruiker-toevoegen.component.html',\r\n  styleUrls: ['./gebruiker-toevoegen.component.css']\r\n})\r\nexport class GebruikerToevoegenComponent implements OnInit {\r\n\r\n  model = new Gebruiker(0, 0, \"\", \"\", \"j\", \"\", \"\", \"\", \"\");\r\n\r\n  rollen = new Observable<Rol[]>();\r\n\r\n  Form = this.fb.group({\r\n    voornaam: ['', Validators.required],\r\n    achternaam: ['', Validators.required],\r\n    telefoonnummer: ['', Validators.required],\r\n    email: ['', Validators.required],\r\n    wachtwoord: ['', Validators.required],\r\n    wachtwoordc: ['', Validators.required],\r\n    rol: ['', Validators.required]\r\n  }, { validator: this.matchingPasswords('wachtwoord', 'wachtwoordc') });\r\n\r\n  matchingPasswords(passwordKey: string, passwordConfirmationKey: string) {\r\n    return (group: FormGroup) => {\r\n      let passwordInput = group.controls[passwordKey];\r\n      let passwordConfirmationInput = group.controls[passwordConfirmationKey];\r\n      if (passwordInput.value !== passwordConfirmationInput.value) {\r\n        return passwordConfirmationInput.setErrors({ notEquivalent: true })\r\n      }\r\n      else {\r\n        passwordConfirmationInput.setErrors(passwordConfirmationInput.validator(passwordConfirmationInput))\r\n      }\r\n    }\r\n  }\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De gebruiker is aangemaakt!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n    this.InstantiateLists();\r\n  }\r\n\r\n  InstantiateLists() {\r\n    this._service.getAllRollen().subscribe(result => {\r\n      this.rollen = of(result.records);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    this._service.addGebruiker(this.model).subscribe(result => { this.model = new Gebruiker(0, 0, \"\", \"\", \"j\", \"\", \"\", \"\", \"\"); });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXRvZXZvZWdlbi9tYXRlcmlhYWwtdG9ldm9lZ2VuL21hdGVyaWFhbC10b2V2b2VnZW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Materiaal } from 'src/app/models/materiaal.model';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-materiaal-toevoegen',\r\n  templateUrl: './materiaal-toevoegen.component.html',\r\n  styleUrls: ['./materiaal-toevoegen.component.css']\r\n})\r\nexport class MateriaalToevoegenComponent implements OnInit {\r\n\r\n  model = new Materiaal(0, \"\");\r\n\r\n  Form = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  });\r\n  openSnackBar() {\r\n    this._snackBar.open(\"Het materiaal is aangemaakt!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    this._service.addMateriaal(this.model).subscribe(result =>{this.model = new Materiaal(0, \"\");});\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXRvZXZvZWdlbi9tZXRob2RlLXRvZXZvZWdlbi9tZXRob2RlLXRvZXZvZWdlbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Persmethode } from 'src/app/models/persmethode.model';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-methode-toevoegen',\r\n  templateUrl: './methode-toevoegen.component.html',\r\n  styleUrls: ['./methode-toevoegen.component.css']\r\n})\r\nexport class MethodeToevoegenComponent implements OnInit {\r\n\r\n  model = new Persmethode(0, \"\");\r\n\r\n  Form = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  }); \r\n  openSnackBar() {\r\n    this._snackBar.open(\"De persmethode is aangemaakt!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    this._service.addMethode(this.model).subscribe(result=>{this.model = new Persmethode(0, \"\");});\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXRvZXZvZWdlbi9tZXRpbmctdG9ldm9lZ2VuL21ldGluZy10b2V2b2VnZW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { SoortMeting } from 'src/app/models/soort-meting.model';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-meting-toevoegen',\r\n  templateUrl: './meting-toevoegen.component.html',\r\n  styleUrls: ['./meting-toevoegen.component.css']\r\n})\r\nexport class MetingToevoegenComponent implements OnInit {\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De soort meting is aangemaakt!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n  model = new SoortMeting(0, \"\");\r\n\r\n  Form = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  });\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    this._service.addMetingSoort(this.model).subscribe(result=>{this.model = new SoortMeting(0, \"\");});\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXRvZXZvZWdlbi92YXQtdG9ldm9lZ2VuL3ZhdC10b2V2b2VnZW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Vat } from 'src/app/models/vat.model';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-vat-toevoegen',\r\n  templateUrl: './vat-toevoegen.component.html',\r\n  styleUrls: ['./vat-toevoegen.component.css']\r\n})\r\nexport class VatToevoegenComponent implements OnInit {\r\n  openSnackBar() {\r\n    this._snackBar.open(\"Het vat is aangemaakt!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n  model = new Vat(0, \"\", 0, 1, \"\", 0, 0, 0, 0, 1);\r\n  materialen;\r\n\r\n  Form = this.fb.group({\r\n    naam: ['', Validators.required],\r\n    locatie: ['', Validators.required],\r\n    volume: ['', Validators.required],\r\n    deksel: ['', Validators.required],\r\n    koelmantel: ['', Validators.required],\r\n    mangat: ['', Validators.required],\r\n    materiaal: ['', Validators.required]\r\n  });\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n    this.instantiateLists();\r\n  }\r\n\r\n  instantiateLists() {\r\n    this._service.getAllMaterialen().subscribe(result => {\r\n      this.materialen = of(result.records);\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    this._service.addVat(this.model).subscribe(result => { this.model = new Vat(0, \"\", 0, 1, \"\", 0, 0, 0, 0, 1); });\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLXRvZXZvZWdlbi93aWpudHlwZS10b2V2b2VnZW4vd2lqbnR5cGUtdG9ldm9lZ2VuLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { WijnType } from 'src/app/models/wijn-type.model';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-wijntype-toevoegen',\r\n  templateUrl: './wijntype-toevoegen.component.html',\r\n  styleUrls: ['./wijntype-toevoegen.component.css']\r\n})\r\nexport class WijntypeToevoegenComponent implements OnInit {\r\n\r\n  model = new WijnType(0, \"\");\r\n\r\n  Form = this.fb.group({\r\n    naam: ['', Validators.required]\r\n  });\r\n  openSnackBar() {\r\n    this._snackBar.open(\"Het wijntype is aangemaakt!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    this._service.addWijntype(this.model).subscribe(result => { this.model = new WijnType(0, \"\"); });\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsYXJtZXJpbmcvYWxhcm1lcmluZy1kYXRhL2FsYXJtZXJpbmctZGF0YS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alarmering-data',\r\n  templateUrl: './alarmering-data.component.html',\r\n  styleUrls: ['./alarmering-data.component.css']\r\n})\r\nexport class AlarmeringDataComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsYXJtZXJpbmcvYWxhcm1lcmluZy1kYXRhL2NvL2NvLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { of } from 'rxjs';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { AlarmData } from 'src/app/models/alarm-data.model';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-co',\r\n  templateUrl: './co.component.html',\r\n  styleUrls: ['./co.component.css']\r\n})\r\nexport class CoComponent implements OnInit {\r\n  alarmdataModel = new AlarmData(null, null, null, null, null, 0);\r\n  checked = false;\r\n\r\n  alarmForm = this.fb.group({\r\n    disable: [],\r\n    proces: ['', Validators.required],\r\n    minimum: [\r\n      {\r\n        value: '',\r\n        disabled: false\r\n      },\r\n      Validators.required\r\n    ],\r\n    maximum: [\r\n      {\r\n        value: '',\r\n        disabled: false\r\n      },\r\n      Validators.required\r\n    ]\r\n  });\r\n  // ,{ validator: this.greaterThan('minimum', 'maximum') });\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De alarmwaarden zijn aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  processenl = new Array<Process[]>();\r\n  processen;\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n    this.instantiateLists();\r\n  }\r\n\r\n\r\n  instantiateLists() {\r\n\r\n    this._service.getAllProcessen().subscribe(result => {\r\n      result.records.forEach(proces => {\r\n        if (proces.actief == 1) {\r\n          this._service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n          this.processenl.push(proces);\r\n        }\r\n      });\r\n      this.processen = this.makeObservable();\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  // greaterThan(minimumKey: string, maximumKey: string) {\r\n  //   return (group: FormGroup) => {\r\n  //     let minimum = group.controls[minimumKey];\r\n  //     let maximum = group.controls[maximumKey];\r\n  //     if (minimum.value > maximum.value) {\r\n\r\n  //       return minimum.setErrors({ notEquivalent: true })\r\n  //     }\r\n  //     else {\r\n  //       minimum.setErrors(minimum.validator(minimum))\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  makeObservable() {\r\n    return of(this.processenl);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.alarmForm.get('disable').valueChanges.subscribe(v => {\r\n      if (v) {\r\n        this.alarmForm.get('minimum').disable()\r\n        this.alarmForm.get('maximum').disable()\r\n        this.checked = true;\r\n      } else {\r\n        this.alarmForm.get('minimum').enable()\r\n        this.alarmForm.get('maximum').enable()\r\n        this.checked = false;\r\n      }\r\n    })\r\n  }\r\n\r\n  onSelect(procesId: number) {\r\n    this._service.getAlarmDataByVinAndSoort(procesId, 3).subscribe(result => {\r\n      this.alarmdataModel = result;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.checked) {\r\n      this.alarmdataModel.actief = 0;\r\n    } else {\r\n      this.alarmdataModel.actief = 1;\r\n    }\r\n    if (this.alarmdataModel.minimumwaarde == 0) {\r\n      this.alarmdataModel.minimumwaarde = 1;\r\n    }\r\n    this._service.updateAlarmData(this.alarmdataModel);\r\n    this.openSnackBar();\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsYXJtZXJpbmcvYWxhcm1lcmluZy1kYXRhL2RydWsvZHJ1ay5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { of } from 'rxjs';\r\nimport { AlarmData } from 'src/app/models/alarm-data.model';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-druk',\r\n  templateUrl: './druk.component.html',\r\n  styleUrls: ['./druk.component.css']\r\n})\r\nexport class DrukComponent implements OnInit {\r\nchecked =false;\r\n  alarmdataModel = new AlarmData(null, null, null, null, null, 0);\r\n\r\n\r\n  alarmForm = this.fb.group({\r\n    disable: [],\r\n    proces: ['', Validators.required],\r\n    minimum: [\r\n      {\r\n        value: '',\r\n        disabled: false\r\n      },\r\n      Validators.required\r\n    ],\r\n    maximum: [\r\n      {\r\n        value: '',\r\n        disabled: false\r\n      },\r\n      Validators.required\r\n    ]\r\n  });\r\n  // ,{ validator: this.greaterThan('minimum', 'maximum') });\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De alarmwaarden zijn aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  processenl = new Array<Process[]>();\r\n  processen;\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n    this.instantiateLists();\r\n\r\n\r\n  }\r\n\r\n\r\n  instantiateLists() {\r\n   \r\n    this._service.getAllProcessen().subscribe(result => {\r\n      result.records.forEach(proces => {\r\n        if (proces.actief == 1) {\r\n          this._service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n          this.processenl.push(proces);\r\n        }\r\n      });\r\n      this.processen = this.makeObservable();\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  // greaterThan(minimumKey: string, maximumKey: string) {\r\n  //   return (group: FormGroup) => {\r\n  //     let minimum = group.controls[minimumKey];\r\n  //     let maximum = group.controls[maximumKey];\r\n  //     if (minimum.value > maximum.value) {\r\n\r\n  //       return minimum.setErrors({ notEquivalent: true })\r\n  //     }\r\n  //     else {\r\n  //       minimum.setErrors(minimum.validator(minimum))\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  makeObservable() {\r\n    return of(this.processenl);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.alarmForm.get('disable').valueChanges.subscribe(v => {\r\n      if (v) {\r\n        this.alarmForm.get('minimum').disable()\r\n        this.alarmForm.get('maximum').disable()\r\n        this.checked = true;\r\n      } else {\r\n        this.alarmForm.get('minimum').enable()\r\n        this.alarmForm.get('maximum').enable()\r\n        this.checked = false;\r\n      }\r\n    })\r\n  }\r\n  onSelect(procesId: number) {\r\n    this._service.getAlarmDataByVinAndSoort(procesId, 1).subscribe(result => {\r\n      this.alarmdataModel = result;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.checked) {\r\n      this.alarmdataModel.actief = 0;\r\n    }else{\r\n      this.alarmdataModel.actief = 1;\r\n    }\r\n    if(this.alarmdataModel.minimumwaarde==0){\r\n      this.alarmdataModel.minimumwaarde=1;\r\n    }\r\n    this._service.updateAlarmData(this.alarmdataModel);\r\n    this.openSnackBar();\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsYXJtZXJpbmcvYWxhcm1lcmluZy1kYXRhL2V0aGFub2wvZXRoYW5vbC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { of } from 'rxjs';\r\nimport { AlarmData } from 'src/app/models/alarm-data.model';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-ethanol',\r\n  templateUrl: './ethanol.component.html',\r\n  styleUrls: ['./ethanol.component.css']\r\n})\r\nexport class EthanolComponent implements OnInit {\r\n  checked = false;\r\n  alarmdataModel = new AlarmData(null, null, null, null, null, 0);\r\n\r\n\r\n  alarmForm = this.fb.group({\r\n    disable: [],\r\n    proces: ['', Validators.required],\r\n    minimum: [\r\n      {\r\n        value: '',\r\n        disabled: false\r\n      },\r\n      Validators.required\r\n    ],\r\n    maximum: [\r\n      {\r\n        value: '',\r\n        disabled: false\r\n      },\r\n      Validators.required\r\n    ]\r\n  });\r\n  // ,{ validator: this.greaterThan('minimum', 'maximum') });\r\n\r\n  processenl = new Array<Process[]>();\r\n  processen;\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De alarmwaarden zijn aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n    this.instantiateLists();\r\n\r\n\r\n  }\r\n\r\n\r\n  instantiateLists() {\r\n    this._service.getAllProcessen().subscribe(result => {\r\n      result.records.forEach(proces => {\r\n        if (proces.actief == 1) {\r\n          this._service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n          this.processenl.push(proces);\r\n        }\r\n      });\r\n      this.processen = this.makeObservable();\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  // greaterThan(minimumKey: string, maximumKey: string) {\r\n  //   return (group: FormGroup) => {\r\n  //     let minimum = group.controls[minimumKey];\r\n  //     let maximum = group.controls[maximumKey];\r\n  //     if (minimum.value > maximum.value) {\r\n\r\n  //       return minimum.setErrors({ notEquivalent: true })\r\n  //     }\r\n  //     else {\r\n  //       minimum.setErrors(minimum.validator(minimum))\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  makeObservable() {\r\n    return of(this.processenl);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.alarmForm.get('disable').valueChanges.subscribe(v => {\r\n      if (v) {\r\n        this.alarmForm.get('minimum').disable()\r\n        this.alarmForm.get('maximum').disable()\r\n        this.checked = true;\r\n      } else {\r\n        this.alarmForm.get('minimum').enable()\r\n        this.alarmForm.get('maximum').enable()\r\n        this.checked = false;\r\n      }\r\n    })\r\n  }\r\n\r\n  onSelect(procesId: number) {\r\n    this._service.getAlarmDataByVinAndSoort(procesId, 2).subscribe(result => {\r\n      this.alarmdataModel = result;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    if (this.checked) {\r\n      this.alarmdataModel.actief = 0;\r\n    } else {\r\n      this.alarmdataModel.actief = 1;\r\n    }\r\n    if (this.alarmdataModel.minimumwaarde == 0) {\r\n      this.alarmdataModel.minimumwaarde = 1;\r\n    }\r\n    this._service.updateAlarmData(this.alarmdataModel);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsYXJtZXJpbmcvYWxhcm1lcmluZy1kYXRhL3RlbXBlcmF0dXVyL3RlbXBlcmF0dXVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { of } from 'rxjs';\r\nimport { AlarmData } from 'src/app/models/alarm-data.model';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-temperatuur',\r\n  templateUrl: './temperatuur.component.html',\r\n  styleUrls: ['./temperatuur.component.css']\r\n})\r\nexport class TemperatuurComponent implements OnInit {\r\n  checked = false;\r\n  alarmdataModel = new AlarmData(null, null, null, null, null, 0);\r\n\r\n\r\n  alarmForm = this.fb.group({\r\n    disable: [],\r\n    proces: ['', Validators.required],\r\n    minimum: [\r\n      {\r\n        value: '',\r\n        disabled: false\r\n      },\r\n      Validators.required\r\n    ],\r\n    maximum: [\r\n      {\r\n        value: '',\r\n        disabled: false\r\n      },\r\n      Validators.required\r\n    ]\r\n  });\r\n  // ,{ validator: this.greaterThan('minimum', 'maximum') });\r\n\r\n  processenl = new Array<Process[]>();\r\n  processen;\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n    this.instantiateLists();\r\n\r\n\r\n  }\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De alarmwaarden zijn aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n\r\n  instantiateLists() {\r\n    this._service.getAllProcessen().subscribe(result => {\r\n      result.records.forEach(proces => {\r\n        if (proces.actief == 1) {\r\n          this._service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n          this.processenl.push(proces);\r\n        }\r\n      });\r\n      this.processen = this.makeObservable();\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  // greaterThan(minimumKey: string, maximumKey: string) {\r\n  //   return (group: FormGroup) => {\r\n  //     let minimum = group.controls[minimumKey];\r\n  //     let maximum = group.controls[maximumKey];\r\n  //     if (minimum.value > maximum.value) {\r\n\r\n  //       return minimum.setErrors({ notEquivalent: true })\r\n  //     }\r\n  //     else {\r\n  //       minimum.setErrors(minimum.validator(minimum))\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  makeObservable() {\r\n    return of(this.processenl);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.alarmForm.get('disable').valueChanges.subscribe(v => {\r\n      if (v) {\r\n        this.alarmForm.get('minimum').disable()\r\n        this.alarmForm.get('maximum').disable()\r\n        this.checked = true;\r\n      } else {\r\n        this.alarmForm.get('minimum').enable()\r\n        this.alarmForm.get('maximum').enable()\r\n        this.checked = false;\r\n      }\r\n    })\r\n  }\r\n\r\n  onSelect(procesId: number) {\r\n    this._service.getAlarmDataByVinAndSoort(procesId, 5).subscribe(result => {\r\n      this.alarmdataModel = result;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    if (this.checked) {\r\n      this.alarmdataModel.actief = 0;\r\n    }else{\r\n      this.alarmdataModel.actief = 1;\r\n    }\r\n    if(this.alarmdataModel.minimumwaarde==0){\r\n      this.alarmdataModel.minimumwaarde=1;\r\n    }\r\n    this._service.updateAlarmData(this.alarmdataModel);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsYXJtZXJpbmcvYWxhcm1lcmluZy1kYXRhL3Ryb2ViZWxoZWlkL3Ryb2ViZWxoZWlkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { of } from 'rxjs';\r\nimport { AlarmData } from 'src/app/models/alarm-data.model';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-troebelheid',\r\n  templateUrl: './troebelheid.component.html',\r\n  styleUrls: ['./troebelheid.component.css']\r\n})\r\nexport class TroebelheidComponent implements OnInit {\r\n  checked = false;\r\n  alarmdataModel = new AlarmData(null, null, null, null, null, 0);\r\n\r\n\r\n  alarmForm = this.fb.group({\r\n    disable: [],\r\n    proces: ['', Validators.required],\r\n    minimum: [\r\n      {\r\n        value: '',\r\n        disabled: false\r\n      },\r\n      Validators.required\r\n    ],\r\n    maximum: [\r\n      {\r\n        value: '',\r\n        disabled: false\r\n      },\r\n      Validators.required\r\n    ]\r\n  });\r\n  // ,{ validator: this.greaterThan('minimum', 'maximum') });\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De alarmwaarden zijn aangepast!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  processenl = new Array<Process[]>();\r\n  processen;\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n    this.instantiateLists();\r\n\r\n\r\n  }\r\n\r\n\r\n  instantiateLists() {\r\n    this._service.getAllProcessen().subscribe(result => {\r\n      result.records.forEach(proces => {\r\n        if (proces.actief == 1) {\r\n          this._service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n          this.processenl.push(proces);\r\n        }\r\n      });\r\n      this.processen = this.makeObservable();\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  // greaterThan(minimumKey: string, maximumKey: string) {\r\n  //   return (group: FormGroup) => {\r\n  //     let minimum = group.controls[minimumKey];\r\n  //     let maximum = group.controls[maximumKey];\r\n  //     if (minimum.value > maximum.value) {\r\n\r\n  //       return minimum.setErrors({ notEquivalent: true })\r\n  //     }\r\n  //     else {\r\n  //       minimum.setErrors(minimum.validator(minimum))\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  makeObservable() {\r\n    return of(this.processenl);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.alarmForm.get('disable').valueChanges.subscribe(v => {\r\n      if (v) {\r\n        this.alarmForm.get('minimum').disable()\r\n        this.alarmForm.get('maximum').disable()\r\n        this.checked = true;\r\n      } else {\r\n        this.alarmForm.get('minimum').enable()\r\n        this.alarmForm.get('maximum').enable()\r\n        this.checked = false;\r\n      }\r\n    })\r\n  }\r\n\r\n  onSelect(procesId: number) {\r\n    this._service.getAlarmDataByVinAndSoort(procesId, 4).subscribe(result => {\r\n      this.alarmdataModel = result;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    if (this.checked) {\r\n      this.alarmdataModel.actief = 0;\r\n    } else {\r\n      this.alarmdataModel.actief = 1;\r\n    }\r\n    if (this.alarmdataModel.minimumwaarde == 0) {\r\n      this.alarmdataModel.minimumwaarde = 1;\r\n    }\r\n    this._service.updateAlarmData(this.alarmdataModel);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FsYXJtZXJpbmcvYWxhcm1lcmluZy1wZXJzb25lbi9hbGFybWVyaW5nLXBlcnNvbmVuLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Gebruiker } from 'src/app/models/gebruiker.model';\r\nimport { AlarmDataGebruiker } from 'src/app/models/alarm-data-gebruiker.model';\r\nimport { stringToKeyValue } from '@angular/flex-layout/extended/typings/style/style-transforms';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-alarmering-personen',\r\n  templateUrl: './alarmering-personen.component.html',\r\n  styleUrls: ['./alarmering-personen.component.css']\r\n})\r\nexport class AlarmeringPersonenComponent implements OnInit {\r\n  gebruikersl = new Array<Gebruiker[]>();\r\n  gebruikers;\r\n\r\n  bestaat: boolean = false;\r\n\r\n  gebruiker;\r\n  id: number;\r\n\r\n  alarmForm = this.fb.group({\r\n    gebruiker: ['', Validators.required],\r\n    proces: ['', Validators.required]\r\n  });\r\n\r\n\r\n  adg;\r\n\r\n  AlarmDataGebruikerModel = new AlarmDataGebruiker(null, null);\r\n\r\n  processenl = new Array<Process[]>();\r\n  processen;\r\n\r\n  processenSubl;\r\n  processenSub;\r\n  processenNotl;\r\n  processenNot;\r\n\r\n  openSnackBar(message: string) {\r\n    this._snackBar.open(message, \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n    this.instantiateLists();\r\n\r\n  }\r\n\r\n  instantiateLists() {\r\n    this.processenl = [];\r\n    this.gebruikersl = [];\r\n    this._service.getAllGebruikers().subscribe(result => {\r\n      result.records.forEach(gebruiker => {\r\n        this.gebruikersl.push(gebruiker);\r\n      });\r\n      this.gebruikers = this.makeObservableGebruiker();\r\n    });\r\n\r\n    this._service.getAllProcessen().subscribe(result => {\r\n      result.records.forEach(proces => {\r\n        if (proces.actief == 1) {\r\n          this._service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n          this.processenl.push(proces);\r\n        }\r\n      });\r\n      this.processen = this.makeObservable();\r\n    });\r\n    this.processenNotl = [];\r\n    this.processenSubl = [];\r\n    this.processenNotl = this.processenl;\r\n    this.bestaat = false;\r\n  }\r\n\r\n\r\n  makeObservableSub() {\r\n    return of(this.processenSubl);\r\n  }\r\n  makeObservableNot() {\r\n    return of(this.processenNotl);\r\n  }\r\n\r\n  makeObservableGebruiker() {\r\n    return of(this.gebruikersl);\r\n  }\r\n\r\n  makeObservable() {\r\n    return of(this.processenl);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSelect(id: number) {\r\n    this.id = id;\r\n    this.processenNotl = [];\r\n    this.instantiateLists();\r\n    this._service.getAllAlarmDataGebruikers().subscribe(result => {\r\n      result.records.forEach(el => {\r\n        this.checkIfExists(el, id);\r\n      })\r\n      if (this.bestaat) {\r\n        this.gebruiker = id;\r\n        this._service.getAllAlarmDataGebruikerByGebruiker(id).subscribe(result => {\r\n          result.records.forEach(element => {\r\n            this.CheckIfContains(element.alarmData_vinificatieId);\r\n            this.processenNotl.forEach(el => {\r\n              if (el.id == element.alarmData_vinificatieId) {\r\n                this.processenNotl.splice(this.processenNotl.indexOf(el), 1);\r\n              }\r\n            });\r\n          });\r\n        });\r\n        this.processenNot = of(this.processenl);\r\n      }\r\n      else {\r\n        this.processenl = [];\r\n        this.processenNot = new Observable<Process[]>();\r\n        this._service.getAllProcessen().subscribe(result => {\r\n          result.records.forEach(proces => {\r\n            if (proces.actief == 1) {\r\n              this._service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n              this.processenl.push(proces);\r\n            }\r\n          });\r\n          this.processen = this.makeObservable();\r\n          this.processenNot = this.processen;\r\n\r\n        });\r\n      }\r\n    })\r\n    this.processenSub = of(this.processenSubl);\r\n\r\n  }\r\n\r\n  checkIfExists(el: AlarmDataGebruiker, id: number) {\r\n    if (el.gebruikerId == id) {\r\n      this.bestaat = true;\r\n    }\r\n  }\r\n\r\n  add(proces: Process) {\r\n    var message = \"Deze persoon krijgt vanaf nu meldingen van het proces\";\r\n    this.openSnackBar(message);\r\n    this._service.getAlarmDataByProces(proces.id).subscribe(result => {\r\n      result.records.forEach(element => {\r\n        this.AlarmDataGebruikerModel.alarmdataId = element.id;\r\n        this._service.addAlarmDataGebruiker(this.AlarmDataGebruikerModel).subscribe();\r\n      });\r\n    })\r\n    this.onSelect(this.id);\r\n  }\r\n\r\n  delete(proces: Process) {\r\n    var message = \"Deze persoon zal geen meldingen mee krijgen van het proces\";\r\n    this.openSnackBar(message);\r\n    this._service.getAlarmDataByProces(proces.id).subscribe(result => {\r\n      result.records.forEach(element => {\r\n        this.AlarmDataGebruikerModel.alarmdataId = element.id;\r\n        this._service.deleteAlarmDataGebruiker(this.AlarmDataGebruikerModel).subscribe();\r\n        this.onSelect(this.id);\r\n      });\r\n    })\r\n\r\n  }\r\n\r\n  CheckIfContains(id: number) {\r\n    this.processen.subscribe(result => {\r\n      result.forEach(el => {\r\n        if (el.id == id) {\r\n          this.processenSubl.push(el);\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AlarmeringDataComponent } from './alarmering-data/alarmering-data.component';\r\nimport { AlarmeringPersonenComponent } from './alarmering-personen/alarmering-personen.component';\r\nimport { DrukComponent } from './alarmering-data/druk/druk.component';\r\nimport { TemperatuurComponent } from './alarmering-data/temperatuur/temperatuur.component';\r\nimport { CoComponent } from './alarmering-data/co/co.component';\r\nimport { EthanolComponent } from './alarmering-data/ethanol/ethanol.component';\r\nimport { TroebelheidComponent } from './alarmering-data/troebelheid/troebelheid.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [AlarmeringDataComponent, AlarmeringPersonenComponent, DrukComponent, TemperatuurComponent, CoComponent, EthanolComponent, TroebelheidComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AlarmeringModule { }\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"mat-sidenav-container {\\r\\n  position: fixed;\\r\\n  height: 100%;\\r\\n  min-height: 100%;\\r\\n  width: 100%;\\r\\n  min-width: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n      body { \\r\\n        font-family: Roboto, Arial, sans-serif;\\r\\n        margin: 0;\\r\\n      }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsZUFBZTtBQUNqQjs7O01BR007UUFDRSxzQ0FBc0M7UUFDdEMsU0FBUztNQUNYIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtc2lkZW5hdi1jb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbWluLWhlaWdodDogMTAwJTtcclxuICB3aWR0aDogMTAwJTtcclxuICBtaW4td2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcblxyXG4gICAgICBib2R5IHsgXHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFJvYm90bywgQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICB9Il19 */\"","import { Component, ViewChild } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material';\r\nimport { ServicesService } from './services/services.service';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  @ViewChild(MatSidenav, { static: false }) sidenav: MatSidenav;\r\n  opened: boolean = false;\r\n  title = 'CircuitFrontend';\r\n  login: boolean;\r\n  admin: boolean;\r\n  constructor(private _service: ServicesService, private router: Router, private breakpointObserver: BreakpointObserver) {\r\n    this._service.isLoggedin.subscribe(e => {\r\n      this.login = e.valueOf();\r\n    })\r\n\r\n    this._service.isAdmin.subscribe(e => {\r\n      this.admin = e.valueOf();\r\n    })\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.removeItem(\"token\");\r\n    this._service.isLoggedin.next(!this.login ? true : false);\r\n    this.router.navigate([\"/\"]);\r\n    console.log(this._service.isLoggedin.value);\r\n  }\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CreateProcessComponent } from './process/create-process/create-process.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AfsluitenComponent } from './process/afsluiten/afsluiten.component';\r\nimport { AddMetingComponent } from './process/add-meting/add-meting.component';\r\nimport { AddActieComponent } from './process/add-actie/add-actie.component';\r\nimport { ProcessComponent } from './process/process.component';\r\nimport { ToonDashboardComponent } from './toon-dashboard/toon-dashboard.component';\r\nimport { HomeModule } from './home/home.module';\r\nimport { ProcessModule } from './process/process.module';\r\nimport { AlarmeringDataComponent } from './alarmering/alarmering-data/alarmering-data.component';\r\nimport { AlarmeringPersonenComponent } from './alarmering/alarmering-personen/alarmering-personen.component';\r\nimport { AlarmeringModule } from './alarmering/alarmering.module';\r\nimport { ToonDashboardModule } from './toon-dashboard/toon-dashboard.module';\r\nimport { ToonActieveVinificatiesComponent } from './toon-vinificaties/toon-actieve-vinificaties/toon-actieve-vinificaties.component';\r\nimport { ToonNonActieveVinificatiesComponent } from './toon-vinificaties/toon-non-actieve-vinificaties/toon-non-actieve-vinificaties.component';\r\nimport { ToonDetailsVinificatiesComponent } from './toon-vinificaties/toon-details-vinificaties/toon-details-vinificaties.component';\r\n\r\nimport { DruifSoortToevoegenComponent } from './admin/admin-toevoegen/druif-soort-toevoegen/druif-soort-toevoegen.component';\r\nimport { VatToevoegenComponent } from './admin/admin-toevoegen/vat-toevoegen/vat-toevoegen.component';\r\nimport { EventToevoegenComponent } from './admin/admin-toevoegen/event-toevoegen/event-toevoegen.component';\r\nimport { MethodeToevoegenComponent } from './admin/admin-toevoegen/methode-toevoegen/methode-toevoegen.component';\r\nimport { MetingToevoegenComponent } from './admin/admin-toevoegen/meting-toevoegen/meting-toevoegen.component';\r\nimport { GebruikerToevoegenComponent } from './admin/admin-toevoegen/gebruiker-toevoegen/gebruiker-toevoegen.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AdminToevoegenComponent } from './admin/admin-toevoegen/admin-toevoegen.component';\r\nimport { AdminOverzichtComponent } from './admin/admin-overzicht/admin-overzicht.component';\r\nimport { DruifBeherenComponent } from './admin/admin-overzicht/druif-beheren/druif-beheren.component';\r\nimport { EventBeherenComponent } from './admin/admin-overzicht/event-beheren/event-beheren.component';\r\nimport { GebruikerBeherenComponent } from './admin/admin-overzicht/gebruiker-beheren/gebruiker-beheren.component';\r\nimport { MethodeBeherenComponent } from './admin/admin-overzicht/methode-beheren/methode-beheren.component';\r\nimport { MetingBeherenComponent } from './admin/admin-overzicht/meting-beheren/meting-beheren.component';\r\nimport { VatBeherenComponent } from './admin/admin-overzicht/vat-beheren/vat-beheren.component';\r\nimport { WijntypeToevoegenComponent } from './admin/admin-toevoegen/wijntype-toevoegen/wijntype-toevoegen.component';\r\nimport { MateriaalToevoegenComponent } from './admin/admin-toevoegen/materiaal-toevoegen/materiaal-toevoegen.component';\r\nimport { MateriaalBeherenComponent } from './admin/admin-overzicht/materiaal-beheren/materiaal-beheren.component';\r\nimport { WijnBeherenComponent } from './admin/admin-overzicht/wijn-beheren/wijn-beheren.component';\r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'createProcess', component: CreateProcessComponent },\r\n  { path: 'afsluiten', component: AfsluitenComponent },\r\n  { path: 'addMeting', component: AddMetingComponent },\r\n  { path: 'addActie', component: AddActieComponent },\r\n  { path: 'process', component: ProcessComponent },\r\n  { path: 'alarmdata', component: AlarmeringDataComponent },\r\n  { path: 'alarmpersonen', component: AlarmeringPersonenComponent },\r\n  { path: 'dashboard/:id', component: ToonDashboardComponent },\r\n  { path: 'actief', component: ToonActieveVinificatiesComponent },\r\n  { path: 'nonactief', component: ToonNonActieveVinificatiesComponent },\r\n  { path: 'detail/:id', component: ToonDetailsVinificatiesComponent },\r\n  { path: 'adminToevoegen', component: AdminToevoegenComponent },\r\n  { path: 'login', component: LoginComponent }\r\n  ,\r\n  { path: 'adminEdit', component: AdminOverzichtComponent }\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ToonActieveVinificatiesComponent,\r\n    ToonNonActieveVinificatiesComponent,\r\n    ToonDetailsVinificatiesComponent,\r\n    DruifSoortToevoegenComponent,\r\n    VatToevoegenComponent,\r\n    EventToevoegenComponent,\r\n    MethodeToevoegenComponent,\r\n    MetingToevoegenComponent,\r\n    GebruikerToevoegenComponent,\r\n    LoginComponent,\r\n    AdminToevoegenComponent,\r\n    AdminOverzichtComponent,\r\n    DruifBeherenComponent,\r\n    EventBeherenComponent,\r\n    GebruikerBeherenComponent,\r\n    MethodeBeherenComponent,\r\n    MetingBeherenComponent,\r\n    VatBeherenComponent,\r\n    WijntypeToevoegenComponent,\r\n    MateriaalToevoegenComponent,\r\n    MateriaalBeherenComponent,\r\n    WijnBeherenComponent\r\n  ],\r\n  imports: [\r\n    HomeModule,\r\n    ProcessModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    SharedModule,\r\n    AlarmeringModule,\r\n    ToonDashboardModule,\r\n    RouterModule.forRoot(appRoutes, { enableTracing: false })\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ServicesService } from '../services/services.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  login: boolean;\n\n  constructor(private router: Router, private _service: ServicesService) {\n    this._service.isLoggedin.subscribe(e => {\n      this.login = e.valueOf();\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  Login() {\n    this.router.navigateByUrl('/login');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    SharedModule\n  ]\n})\nexport class HomeModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserLogin } from '../models/user-login.model';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ServicesService } from '../services/services.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  login: UserLogin = new UserLogin(\"\", \"\");\r\n  loginForm = this.fb.group({\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', Validators.required]\r\n  })\r\n\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this._service.Authenticate(this.login).subscribe(result => {\r\n      this._service.isLoggedin.next(result.id ? true : false);\r\n      localStorage.setItem(\"token\", result.id.toString());\r\n      this.router.navigateByUrl('');\r\n      this._service.setUser(result);\r\n      if (result.rolId == 1) {\r\n        this._service.setIsAdmin(true);\r\n      } else {\r\n        this._service.setIsAdmin(false);\r\n      }\r\n    })\r\n  }\r\n}\r\n","export class AlarmDataGebruiker {\n    constructor(public alarmdataId: number, public gebruikerId: number) { }\n}\n","export class AlarmData {\r\n    constructor(public id: number, public soortAlarmId: number, public vinificatieId: number, public maximumwaarde: number, public minimumwaarde: number, public actief: number) { }\r\n}\r\n\r\n","export class Druif {\r\n    constructor(public id: number, public druifsoort: string){}\r\n}\r\n","export class Event {\r\n    constructor(public id: number, public soortEventId: number, public vinificatieId: number, public gebruikerId: string, public datum: Date) { }\r\n}\r\n","export class Gebruiker {\r\n    constructor(public id: number, public rolId: number, public voornaam: string, public naam: string, public gebruikersnaam: string, public wachtwoord: string, public email: string, public telefoonnummer: string, public jwt: string) { }\r\n}\r\n","export class Materiaal {\r\n    constructor(public id: number, public naam: string) { }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { SoortMeting } from './soort-meting.model';\r\n\r\nexport class Meting {\r\n    constructor(public id: number, public soortMetingId: number, public vinificatieId: number, public gebruikerId: string, public meting: number, public tijd: Date, public soortMeting: Observable<SoortMeting>){}\r\n}\r\n","export class Persmethode {\n    constructor(public id: number, public methode: string){}\n}\n","import { Vat } from './vat.model';\r\nimport { Observable } from 'rxjs';\r\nimport { Druif } from './druif.model';\r\n\r\nexport class Process {\r\n\r\n    constructor(public id: number, public vatId: number, public persmethodeId: number, public actief: number, public persHoeveelheid: number, public oogst: number, public persDruk: number, public vat: Observable<Vat>, public druif: Observable<Druif[]>, public jaargang: number, public wijnTypeId: number) {\r\n\r\n    }\r\n}\r\n","export class SoortEvent {\n    constructor(public soortEventId: number, public naam: string){\n\n    }\n}\n","export class SoortMeting {\r\n    constructor(public id: number, public naam: string){\r\n\r\n    }\r\n}\r\n","export class UserLogin {\r\n    email: string;\r\n    wachtwoord: string;\r\n\r\n    constructor(email: string, wachtwoord: string) {\r\n        this.email = email;\r\n        this.wachtwoord = wachtwoord;\r\n    }\r\n}\r\n","export class Vat {\r\n    constructor(public id: number, public nummer: string, public inGebruik: number, public gelinkt: number, public locatie: String, public volume: number, public deksel: number, public koelmantel: number, public mangat: number, public materiaalId: number) { }\r\n}\r\n","export class VinificatieDruif {\n    constructor(public vinificatieId: number, public druifsoortId: number){}\n}\n","export class WijnType {\r\n    constructor(public id: number, public naam: string) { }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2Nlc3MvYWRkLWFjdGllL2FkZC1hY3RpZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Event } from 'src/app/models/event.model';\r\nimport { SoortEvent } from 'src/app/models/soort-event.model';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-add-actie',\r\n  templateUrl: './add-actie.component.html',\r\n  styleUrls: ['./add-actie.component.css']\r\n})\r\nexport class AddActieComponent implements OnInit {\r\n  events;\r\n  processenl = new Array<Process[]>();\r\n  processen;\r\n\r\n  eventModel = new Event(0, null, 0, \"1\", new Date());\r\n\r\n  addEventForm = this.fb.group({\r\n    vat: ['', Validators.required],\r\n    soortEvent: ['', Validators.required],\r\n    datum: ['', Validators.required]\r\n  });\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De actie is toegevoegd aan het proces!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n\r\n    _service.getAllProcessen().subscribe(result => {\r\n      result.records.forEach(proces => {\r\n        if (proces.actief == 1) {\r\n          _service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n          this.processenl.push(proces);\r\n        }\r\n      });\r\n      this.processen = this.makeObservable();\r\n    });\r\n\r\n\r\n    _service.getAllEventsoorten().subscribe(result => {\r\n      this.events = of(result.records);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  makeObservable() {\r\n    return of(this.processenl);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    this.eventModel.gebruikerId = localStorage.getItem(\"token\");\r\n\r\n    this._service.addEvent(this.eventModel).subscribe;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2Nlc3MvYWRkLW1ldGluZy9hZGQtbWV0aW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Vat } from 'src/app/models/vat.model';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { SoortMeting } from 'src/app/models/soort-meting.model';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { of } from 'rxjs';\r\nimport { Meting } from 'src/app/models/meting.model';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-add-meting',\r\n  templateUrl: './add-meting.component.html',\r\n  styleUrls: ['./add-meting.component.css']\r\n})\r\nexport class AddMetingComponent implements OnInit {\r\n  processenl = new Array<Process[]>();\r\n  processen;\r\n  metingen;\r\n\r\n  metingModel = new Meting(0, null, null, null, null, new Date(), null);\r\n\r\n  addMetingForm = this.fb.group({\r\n    vat: ['', Validators.required],\r\n    soortMeting: ['', Validators.required],\r\n    Metingswaarde: ['', Validators.required],\r\n    tijd: ['', Validators.required]\r\n  });\r\n  openSnackBar() {\r\n    this._snackBar.open(\"De meting is toegevoegd aan het proces!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n    this.instantiateLists()\r\n    console.log(this.metingModel.tijd);\r\n  }\r\n\r\n  instantiateLists() {\r\n    this._service.getAllProcessen().subscribe(result => {\r\n      result.records.forEach(proces => {\r\n        if (proces.actief == 1) {\r\n          this._service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n          this.processenl.push(proces);\r\n        }\r\n      });\r\n      this.processen = this.makeObservable();\r\n    });\r\n\r\n    this._service.getAllMetingsoorten().subscribe(result => {\r\n      this.metingen = of(result.records);\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  makeObservable() {\r\n    return of(this.processenl);\r\n  }\r\n\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    this.metingModel.gebruikerId = localStorage.getItem(\"token\");\r\n\r\n    this._service.addMeting(this.metingModel).subscribe;\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2Nlc3MvYWZzbHVpdGVuL2Fmc2x1aXRlbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Vat } from 'src/app/models/vat.model';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { of } from 'rxjs';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-afsluiten',\r\n  templateUrl: './afsluiten.component.html',\r\n  styleUrls: ['./afsluiten.component.css']\r\n})\r\nexport class AfsluitenComponent implements OnInit {\r\n\r\n  processenl = new Array<Process[]>();\r\n  processen;\r\n\r\n\r\n\r\n  constructor(private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n    this.instantiateLists()\r\n\r\n  }\r\n  openSnackBar() {\r\n    this._snackBar.open(\"Het proces is afgesloten!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n  instantiateLists() {\r\n    this.processenl = new Array<Process[]>();\r\n    this._service.getAllProcessen().subscribe(result => {\r\n      result.records.forEach(proces => {\r\n        if (proces.actief == 1) {\r\n          this._service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n          this.processenl.push(proces);\r\n\r\n        }\r\n      });\r\n      this.processen = this.makeObservable();\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  makeObservable() {\r\n    return of(this.processenl);\r\n  }\r\n  Sluit(proces: Process) {\r\n    this.openSnackBar();\r\n    proces.actief = 0;\r\n    this._service.updateProcess(proces).subscribe(result => {\r\n      proces.vat = this._service.getVatById(proces.vatId);\r\n      proces.vat.subscribe(result => {\r\n        result.inGebruik = 0;\r\n        this._service.updateVat(result).subscribe(result => {\r\n          this.instantiateLists()\r\n        })\r\n      })\r\n\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2Nlc3MvY3JlYXRlLXByb2Nlc3MvY3JlYXRlLXByb2Nlc3MuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { Vat } from 'src/app/models/vat.model';\r\nimport { Persmethode } from 'src/app/models/persmethode.model';\r\nimport { Druif } from 'src/app/models/druif.model';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { AlarmData } from 'src/app/models/alarm-data.model';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { VinificatieDruif } from 'src/app/models/vinificatie-druif.model';\r\nimport { WijnType } from 'src/app/models/wijn-type.model';\r\n\r\n@Component({\r\n  selector: 'app-create-process',\r\n  templateUrl: './create-process.component.html',\r\n  styleUrls: ['./create-process.component.css']\r\n})\r\nexport class CreateProcessComponent implements OnInit {\r\n  vaten;\r\n  vatenl = new Array<Vat[]>();\r\n  persen;\r\n  druiven;\r\n  procesModel = new Process(0, null, null, 1, null, null, null, null, null, null, 0);\r\n  druivenLijst = new Array<Druif>();\r\n\r\n  wijntypes;\r\n\r\n  createProcessForm = this.fb.group({\r\n    vat: ['', Validators.required],\r\n    pers: ['', Validators.required],\r\n    persHoeveelheid: ['', Validators.required],\r\n    oogst: ['', Validators.required],\r\n    bar: ['', Validators.required],\r\n    jaargang: ['', Validators.required],\r\n    wijntype: ['', Validators.required]\r\n  });\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private _snackBar: MatSnackBar) {\r\n    this.instantiateLists()\r\n  }\r\n\r\n  openSnackBar() {\r\n    this._snackBar.open(\"Het proces is aangemaakt!\", \"Close\", {\r\n      duration: 5000,\r\n    });\r\n  }\r\n\r\n  onChange(value: Druif) {\r\n    var index = this.druivenLijst.indexOf(value);\r\n    if (index == -1) {\r\n      this.druivenLijst.push(value);\r\n    } else {\r\n      this.druivenLijst.splice(index, 1);\r\n    }\r\n    console.log(this.druivenLijst);\r\n  }\r\n\r\n  instantiateLists() {\r\n    this.procesModel = new Process(0, null, null, 1, null, null, null, null, null, null, 0);\r\n    this.vatenl = new Array;\r\n    this._service.getAllVaten().subscribe(result => {\r\n      result.records.forEach(vat => {\r\n        if (vat.inGebruik == 0) {\r\n          this.vatenl.push(vat);\r\n        }\r\n      });\r\n      this.vaten = this.makeObservable();\r\n\r\n    });\r\n\r\n\r\n    this._service.getAllDruifsoorten().subscribe(result => {\r\n      this.druiven = of(result.records);\r\n\r\n    });\r\n    this._service.getAllPersMethodes().subscribe(result => {\r\n      this.persen = of(result.records);\r\n    });\r\n    this._service.getAllWijnTypes().subscribe(result => {\r\n      this.wijntypes = of(result.records);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  makeObservable() {\r\n    return of(this.vatenl);\r\n  }\r\n  onSubmit() {\r\n    this.openSnackBar();\r\n    this._service.addProces(this.procesModel).subscribe(result => {\r\n      this.procesModel.vat = this._service.getVatById(this.procesModel.vatId);\r\n      this.procesModel.vat.subscribe(result => {\r\n        console.log(result);\r\n        result.inGebruik = 1;\r\n        this._service.updateVat(result).subscribe(result => {\r\n          this.instantiateLists();\r\n          this._service.getLastProcess().subscribe(result => {\r\n            for (let i = 1; i < 6; i++) {\r\n              this._service.addAlarmData(new AlarmData(0, i, result.id, 51, 1, 1)).subscribe();\r\n            }\r\n            this.druivenLijst.forEach(el => {\r\n              this._service.addVinificatieDruif(new VinificatieDruif(result.id, el.id));\r\n            });\r\n          })\r\n\r\n        })\r\n      })\r\n    });\r\n\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2Nlc3MvcHJvY2Vzcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-process',\n  templateUrl: './process.component.html',\n  styleUrls: ['./process.component.css']\n})\nexport class ProcessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreateProcessComponent } from './create-process/create-process.component';\nimport { MatSelectModule } from '@angular/material';\nimport { AfsluitenComponent } from './afsluiten/afsluiten.component';\nimport { AddActieComponent } from './add-actie/add-actie.component';\nimport { AddMetingComponent } from './add-meting/add-meting.component';\nimport { ProcessComponent } from './process.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\n\n\n@NgModule({\n  declarations: [CreateProcessComponent, AfsluitenComponent, AddActieComponent, AddMetingComponent, ProcessComponent],\n  imports: [\n    CommonModule,\n    MatSelectModule,\n    SharedModule,\n    PerfectScrollbarModule\n  ]\n})\nexport class ProcessModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Process } from '../models/process.model';\r\nimport { Meting } from '../models/meting.model';\r\nimport { Event } from '../models/event.model';\r\nimport { Observable, from, BehaviorSubject } from 'rxjs';\r\nimport { Result } from '../models/result.model';\r\nimport { Vat } from '../models/vat.model';\r\nimport { AlarmData } from '../models/alarm-data.model';\r\nimport { AlarmDataGebruiker } from '../models/alarm-data-gebruiker.model';\r\nimport { VinificatieDruif } from '../models/vinificatie-druif.model';\r\nimport { Druif } from '../models/druif.model';\r\nimport { SoortEvent } from '../models/soort-event.model';\r\nimport { Persmethode } from '../models/persmethode.model';\r\nimport { SoortMeting } from '../models/soort-meting.model';\r\nimport { Gebruiker } from '../models/gebruiker.model';\r\nimport { UserLogin } from '../models/user-login.model';\r\nimport { WijnType } from '../models/wijn-type.model';\r\nimport { Materiaal } from '../models/materiaal.model';\r\n\r\nconst baselink = \"http://192.168.0.105/api/\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServicesService {\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //Vinificatieprocessen\r\n\r\n  getAllProcessen(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"Vinificatie/read.php\");\r\n  }\r\n\r\n  getAllInactieveProcessen(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"Vinificatie/nietActief.php\");\r\n  }\r\n\r\n  addProces(process: Process) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Vinificatie/create.php\",\r\n        {\r\n          body: JSON.stringify(process),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n    //return this.http.post<Process>(baselink + \"Vinificatie/create.php\", process);\r\n  }\r\n\r\n  updateProcess(process: Process) {\r\n    //return this.http.put(baselink + \"\" + id, process);\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Vinificatie/update.php\",\r\n        {\r\n          body: JSON.stringify(process),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  getLastProcess(): Observable<Process> {\r\n    return this.http.get<Process>(baselink + \"Vinificatie/getLast.php\");\r\n  }\r\n\r\n  addVinificatieDruif(druif: VinificatieDruif) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"VinificatieDruif/create.php\",\r\n        {\r\n          body: JSON.stringify(druif),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n\r\n  }\r\n  getProcesById(id: number): Observable<Process> {\r\n    return this.http.get<Process>(baselink + \"Vinificatie/read_one.php?id=\" + id)\r\n  }\r\n\r\n\r\n  //Metingen\r\n  updateMeting(meting: SoortMeting) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"SoortMeting/update.php\",\r\n        {\r\n          body: JSON.stringify(meting),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT'\r\n        }\r\n      )\r\n    );\r\n  }\r\n  getAllHandmatigeMetingenByVinificatieId(vinificatieId: number): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"HandmatigeMeting/getByVinificatieId.php?vinificatieId=\" + vinificatieId);\r\n  }\r\n\r\n  addMeting(meting: Meting) {\r\n    //return this.http.post<Meting>(baselink + \"\", meting);\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"HandmatigeMeting/create.php\",\r\n        {\r\n          body: JSON.stringify(meting),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n\r\n  //events\r\n  getAllEventsByVinificatieId(vinificatieId: number): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"Event/getByVinificatieId.php?vinificatieId=\" + vinificatieId);\r\n  }\r\n\r\n  addEvent(event: Event) {\r\n    //return this.http.post<Event>(baselink + \"\", event);\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Event/create.php\",\r\n        {\r\n          body: JSON.stringify(event),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //vaten\r\n  getAllVaten(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"Vat/read.php\");\r\n  }\r\n\r\n  getVatById(id: number): Observable<Vat> {\r\n    return this.http.get<Vat>(baselink + \"Vat/read_one.php?id=\" + id)\r\n  }\r\n\r\n  getVatByProcess(proces: Process): Observable<Vat> {\r\n    return this.http.get<Vat>(baselink + \"Vat/read_one.php?id=\" + proces.vatId)\r\n  }\r\n\r\n  updateVat(vat: Vat) {\r\n\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Vat/update.php\",\r\n        {\r\n          body: JSON.stringify(vat),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT'\r\n        }\r\n      )\r\n    );\r\n  }\r\n  addVat(vat: Vat) {\r\n    //return this.http.post<Event>(baselink + \"\", event);\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Vat/create.php\",\r\n        {\r\n          body: JSON.stringify(vat),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n  deleteVat(item: Vat) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Vat/delete.php\",\r\n        {\r\n          body: JSON.stringify(item),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'DELETE'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  //persmethodes\r\n  getAllPersMethodes(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"PersMethode/read.php\");\r\n  }\r\n  updateMethode(methode: Persmethode) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"PersMethode/update.php\",\r\n        {\r\n          body: JSON.stringify(methode),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  getPersmethodeById(id: number): Observable<Persmethode> {\r\n    return this.http.get<Persmethode>(baselink + \"Persmethode/read_one.php?id=\" + id)\r\n  }\r\n\r\n  addMethode(methode: Persmethode) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"PersMethode/create.php\",\r\n        {\r\n          body: JSON.stringify(methode),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  deletePersMethode(item: Persmethode) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"PersMethode/delete.php\",\r\n        {\r\n          body: JSON.stringify(item),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'DELETE'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  //druifsoorten\r\n  getAllDruifsoorten(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"DruifSoort/read.php\");\r\n  }\r\n  getAllDruifsoortenByVinificatieId(id: number): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"VinificatieDruif/getByVinificatieId.php?vinificatieId=\" + id);\r\n  }\r\n\r\n\r\n  addDruifSoort(druif: Druif) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"DruifSoort/create.php\",\r\n        {\r\n          body: JSON.stringify(druif),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  deleteDruifSoort(item: Druif) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"DruifSoort/delete.php\",\r\n        {\r\n          body: JSON.stringify(item),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'DELETE'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  //metingsoorten\r\n  getAllMetingsoorten(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"SoortMeting/read.php\");\r\n  }\r\n\r\n  getSoortMetingById(id: number): Observable<SoortEvent> {\r\n    return this.http.get<SoortEvent>(baselink + \"SoortMeting/read_one.php?id=\" + id)\r\n  }\r\n\r\n  addMetingSoort(meting: SoortMeting) {\r\n    //return this.http.post<Event>(baselink + \"\", event);\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"SoortMeting/create.php\",\r\n        {\r\n          body: JSON.stringify(meting),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  deleteSoortMeting(item: SoortMeting) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"SoortMeting/delete.php\",\r\n        {\r\n          body: JSON.stringify(item),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'DELETE'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  deleteMateriaal(item: Materiaal) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Materiaal/delete.php\",\r\n        {\r\n          body: JSON.stringify(item),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'DELETE'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  //eventsoorten\r\n  getAllEventsoorten(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"SoortEvent/read.php\");\r\n  }\r\n\r\n  deleteEventSoort(item: SoortEvent) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"SoortEvent/delete.php\",\r\n        {\r\n          body: JSON.stringify(item),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'DELETE'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  getSoortEventById(id: number): Observable<SoortEvent> {\r\n    return this.http.get<SoortEvent>(baselink + \"SoortEvent/read_one.php?id=\" + id)\r\n  }\r\n\r\n  addEventSoort(event: SoortEvent) {\r\n    //return this.http.post<Event>(baselink + \"\", event);\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"SoortEvent/create.php\",\r\n        {\r\n          body: JSON.stringify(event),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  //alarmdata\r\n  getAlarmDataById(id: number): Observable<AlarmData> {\r\n    return this.http.get<AlarmData>(baselink + \"AlarmData/read_one.php?id=\" + id)\r\n  }\r\n\r\n  getAlarmDataByProces(id): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"AlarmData/getByVinificatie.php?vinificatieId=\" + id);\r\n  }\r\n\r\n  addAlarmData(alarmdata: AlarmData) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"AlarmData/create.php\",\r\n        {\r\n          body: JSON.stringify(alarmdata),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  getAlarmDataByVinAndSoort(vinId: number, alarmId: number): Observable<AlarmData> {\r\n    return this.http.get<AlarmData>(baselink + \"AlarmData/getByVinificatieSoort.php?vinificatieId=\" + vinId + \"&soortAlarmId=\" + alarmId);\r\n  }\r\n\r\n  updateAlarmData(alarmdata: AlarmData) {\r\n\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"AlarmData/update.php\",\r\n        {\r\n          body: JSON.stringify(alarmdata),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  //gebruikers  \r\n  getGebruikerById(id: number): Observable<Gebruiker> {\r\n    return this.http.get<Gebruiker>(baselink + \"Gebruiker/read_one.php?id=\" + id)\r\n  }\r\n\r\n  isLoggedin = new BehaviorSubject(false);\r\n  private userSubject = new BehaviorSubject(new Gebruiker(null, null, '', '', '', '', '', '', ''));\r\n  user = this.userSubject.asObservable();\r\n  setUser(user: Gebruiker) {\r\n    this.userSubject.next(user);\r\n  }\r\n\r\n  private isAdminSubject = new BehaviorSubject(false);\r\n  isAdmin = this.isAdminSubject.asObservable();\r\n  setIsAdmin(update: boolean) {\r\n    this.isAdminSubject.next(update);\r\n  }\r\n\r\n  getAllGebruikers(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"Gebruiker/read.php\");\r\n  }\r\n\r\n  addGebruiker(gebruiker: Gebruiker) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Gebruiker/create.php\",\r\n        {\r\n          body: JSON.stringify(gebruiker),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n  deleteGebruiker(item: Gebruiker) {\r\n    console.log(item);\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Gebruiker/delete.php\",\r\n        {\r\n          body: JSON.stringify(item),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'DELETE'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  Authenticate(userLogin: UserLogin): Observable<Gebruiker> {\r\n    return this.http.get<Gebruiker>(baselink + \"Gebruiker/GetLogin.php?email=\" + userLogin.email + \"&wachtwoord=\" + userLogin.wachtwoord);\r\n  }\r\n\r\n  updateGebruiker(gebruiker: Gebruiker) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Gebruiker/update.php\",\r\n        {\r\n          body: JSON.stringify(gebruiker),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT'\r\n        }\r\n      )\r\n    );\r\n  }\r\n  //alarmdatagebruikers\r\n  getAllAlarmDataGebruikersByGebruiker(id): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"AlarmDataGebruiker/getByGebruikerId.php?gebruikerId=\" + id);\r\n  }\r\n\r\n  getAllAlarmDataGebruikerByGebruiker(id): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"AlarmDataGebruiker/getByAlarmData.php?gebruikerId=\" + id);\r\n  }\r\n\r\n  getAllAlarmDataGebruikers(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"AlarmDataGebruiker/read.php\");\r\n  }\r\n\r\n  addAlarmDataGebruiker(item: AlarmDataGebruiker) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"AlarmDataGebruiker/create.php\",\r\n        {\r\n          body: JSON.stringify(item),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  deleteAlarmDataGebruiker(item: AlarmDataGebruiker) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"AlarmDataGebruiker/delete.php\",\r\n        {\r\n          body: JSON.stringify(item),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'DELETE'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  //rollen\r\n\r\n  getAllRollen(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"Rol/read.php\");\r\n  }\r\n\r\n  //WijnTypes\r\n  getAllWijnTypes(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"WijnType/read.php\");\r\n  }\r\n\r\n  addWijntype(item: WijnType) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"WijnType/create.php\",\r\n        {\r\n          body: JSON.stringify(item),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n  updateDruif(druif: Druif) {\r\n\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"DruifSoort/update.php\",\r\n        {\r\n          body: JSON.stringify(druif),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  updateEvent(SoortEvent: SoortEvent) {\r\n\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"SoortEvent/update.php\",\r\n        {\r\n          body: JSON.stringify(SoortEvent),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  //Materiaal\r\n\r\n  getAllMaterialen(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"Materiaal/read.php\");\r\n  }\r\n  updateMateriaal(materiaal: Materiaal) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Materiaal/update.php\",\r\n        {\r\n          body: JSON.stringify(materiaal),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  addMateriaal(item: Materiaal) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"Materiaal/create.php\",\r\n        {\r\n          body: JSON.stringify(item),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'POST',\r\n          mode: 'no-cors'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //wijnType\r\n  getWijnTypeById(id: number): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"WijnType/read_one.php?id=\" + id);\r\n  }\r\n  updateWijnType(wijn: WijnType) {\r\n    return from( // wrap the fetch in a from if you need an rxjs Observable\r\n      fetch(\r\n        baselink + \"WijnType/update.php\",\r\n        {\r\n          body: JSON.stringify(wijn),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          method: 'PUT'\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //alarmLog\r\n  getAlarmLogByVinificatieId(vinificatieId: number): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"AlarmLog/getByVinificatieId.php?vinificatieId=\" + vinificatieId);\r\n  }\r\n\r\n  //vinificatieGebruiker\r\n  getAllVinificatieGebruiker(): Observable<Result> {\r\n    return this.http.get<Result>(baselink + \"VinificatieGebruiker/read.php\");\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatFormFieldModule, MatInputModule, MatButtonModule, MatSidenavModule, MatListModule, MatDatepickerModule, MatSelectModule, MatBadgeModule, MatIcon, MatIconModule, MatToolbar, MatToolbarModule, MatMenu, MatMenuModule, MatTabsModule, MatTableModule, MatCardModule, MatGridListModule, MatCheckboxModule, MatSortModule, MatPaginatorModule, MatSnackBarModule } from '@angular/material';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatDatepickerModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    MatSelectModule,\r\n    MatBadgeModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    HttpClientModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatCheckboxModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatSnackBarModule,\r\n    NgbModule\r\n  ],\r\n  exports: [\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatDatepickerModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    MatSelectModule,\r\n    MatBadgeModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    HttpClientModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatCheckboxModule,\r\n    MatSortModule,\r\n    MatPaginatorModule\r\n  ]\r\n})\r\nexport class SharedModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rvb24tZGFzaGJvYXJkL3Rvb24tZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-toon-dashboard',\r\n  templateUrl: './toon-dashboard.component.html',\r\n  styleUrls: ['./toon-dashboard.component.css']\r\n})\r\nexport class ToonDashboardComponent implements OnInit {\r\n  private routeSub: Subscription;\r\n  private iframe: SafeUrl;\r\n  id=0\r\n  constructor(private route: ActivatedRoute, private router: Router, public sanitizer: DomSanitizer) { }\r\n\r\n  ngOnInit() {\r\n    this.routeSub=this.route.params.subscribe(params=>{\r\n      this.id=params['id']\r\n      this.iframe = 'http://192.168.0.105:3000/d/76B5JFZRz/vinificatie?orgId=1&refresh=5m&from=now-7d&to=now&theme=light&kiosk&var-vat=' + this.id\r\n      console.log(this.id, this.iframe)\r\n    })\r\n\r\n    \r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ToonDashboardComponent } from './toon-dashboard.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [ToonDashboardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class ToonDashboardModule { }\r\n","export default \".example-card {\\r\\n    max-width: 400px;\\r\\n  }\\r\\n  \\r\\n.flex-me {\\r\\n  display: -webkit-inline-box;\\r\\n  display: inline-flex;\\r\\n  -webkit-box-orient: horizontal;\\r\\n  -webkit-box-direction: normal;\\r\\n          flex-flow: row wrap;\\r\\n  background: grey;\\r\\n}\\r\\n  \\r\\n/* .example-header-image {\\r\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n    background-size: cover;\\r\\n  } */\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9vbi12aW5pZmljYXRpZXMvdG9vbi1hY3RpZXZlLXZpbmlmaWNhdGllcy90b29uLWFjdGlldmUtdmluaWZpY2F0aWVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7RUFDbEI7O0FBRUY7RUFDRSwyQkFBb0I7RUFBcEIsb0JBQW9CO0VBQ3BCLDhCQUFtQjtFQUFuQiw2QkFBbUI7VUFBbkIsbUJBQW1CO0VBQ25CLGdCQUFnQjtBQUNsQjs7QUFFRTs7O0tBR0ciLCJmaWxlIjoic3JjL2FwcC90b29uLXZpbmlmaWNhdGllcy90b29uLWFjdGlldmUtdmluaWZpY2F0aWVzL3Rvb24tYWN0aWV2ZS12aW5pZmljYXRpZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNhcmQge1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICB9XHJcbiAgXHJcbi5mbGV4LW1lIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xyXG4gIGJhY2tncm91bmQ6IGdyZXk7XHJcbn1cclxuXHJcbiAgLyogLmV4YW1wbGUtaGVhZGVyLWltYWdlIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9tYXRlcmlhbC5hbmd1bGFyLmlvL2Fzc2V0cy9pbWcvZXhhbXBsZXMvc2hpYmExLmpwZycpO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICB9ICovIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { Druif } from 'src/app/models/druif.model';\r\n\r\n@Component({\r\n  selector: 'app-toon-actieve-vinificaties',\r\n  templateUrl: './toon-actieve-vinificaties.component.html',\r\n  styleUrls: ['./toon-actieve-vinificaties.component.css']\r\n})\r\nexport class ToonActieveVinificatiesComponent implements OnInit {\r\n  processenl = new Array<Process[]>();\r\n  processen;\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, public sanitizer: DomSanitizer, private router: Router) {\r\n    this.instantiateLists()\r\n\r\n  }\r\n\r\n  instantiateLists() {\r\n    // var druiflijst = new Array<Druif[]>();\r\n    this._service.getAllProcessen().subscribe(result => {\r\n      result.records.forEach(proces => {\r\n        // proces.druif = new Observable<Druif>();\r\n        if (proces.actief == 1) {\r\n          this._service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n          this._service.getWijnTypeById(proces.wijnTypeId).subscribe(wijnType => { proces.wijnType = wijnType })\r\n          // this._service.getAllDruifsoortenByVinificatieId(proces.id).subscribe(result => { \r\n          //   result.records.forEach(druifsoort => {\r\n          //     console.log(druifsoort);\r\n          //     console.log(proces.id)\r\n              \r\n          //     druiflijst.push(druifsoort);\r\n          //   });\r\n          //   proces.druif = of(druiflijst);\r\n          //  });\r\n          {proces.iframe = \"http://192.168.0.105:3000/d/76B5JFZRz/vinificatie?orgId=1&refresh=5m&from=now-7d&to=now&theme=light&kiosk&panelId=8&fullscreen&var-vat=\" + proces.vatId}\r\n          this.processenl.push(proces);\r\n        }\r\n      });\r\n      this.processen = this.makeObservable();\r\n    });\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  makeObservable() {\r\n    return of(this.processenl);\r\n  }\r\n}\r\n","export default \"table {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9vbi12aW5pZmljYXRpZXMvdG9vbi1kZXRhaWxzLXZpbmlmaWNhdGllcy90b29uLWRldGFpbHMtdmluaWZpY2F0aWVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0VBQ2IiLCJmaWxlIjoic3JjL2FwcC90b29uLXZpbmlmaWNhdGllcy90b29uLWRldGFpbHMtdmluaWZpY2F0aWVzL3Rvb24tZGV0YWlscy12aW5pZmljYXRpZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Druif } from 'src/app/models/druif.model';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { Meting } from 'src/app/models/meting.model';\r\n\r\n@Component({\r\n  selector: 'app-toon-details-vinificaties',\r\n  templateUrl: './toon-details-vinificaties.component.html',\r\n  styleUrls: ['./toon-details-vinificaties.component.css']\r\n})\r\nexport class ToonDetailsVinificatiesComponent implements OnInit {\r\n  private routeSub: Subscription;\r\n   id;\r\n   process;\r\n   events;\r\n   eventl = new Array<Process[]>();\r\n   metingen;\r\n   metingl = new Array<Process[]>();\r\n   alarmLog;\r\n   alarml = new Array<Process[]>();\r\n   gebruikers;\r\n   gebruikerl = new Array<Process[]>();\r\n   dataSourceMeting;\r\n   displayedColumnsMeting: string[] = ['soortMeting.naam', 'meting', 'tijd'];\r\n   dataSourceEvent;\r\n   displayedColumnsEvent: string[] = ['soortEvent.naam', 'datum'];\r\n   dataSourceAlarm;\r\n   displayedColumnsAlarm: string[] = ['bericht', 'datum'];\r\n\r\n   //@ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n   //@ViewChild(MatSort, {static: true}) sort: MatSort;\r\n   @ViewChild('eventsSort', {static: true}) eventsSort: MatSort;\r\n   @ViewChild('metingSort', {static: true}) metingSort: MatSort;\r\n   @ViewChild('alarmSort', {static: true}) alarmSort: MatSort;\r\n   @ViewChild('eventsPaginator', {static: true}) eventsPaginator: MatPaginator;\r\n   @ViewChild('metingPaginator', {static: true}) metingPaginator: MatPaginator;\r\n   @ViewChild('alarmPaginator', {static: true}) alarmPaginator: MatPaginator;  \r\n   \r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private route: ActivatedRoute, private router: Router) {\r\n    this.routeSub=this.route.params.subscribe(params=>{\r\n      this.id=params['id']  \r\n    })\r\n    this.getProcess(); \r\n    this.getEvents();   \r\n    this.getHandmatigeMetingen();\r\n    this.getAlarmLog();\r\n  }\r\n  getProcess() {\r\n    this._service.getProcesById(this.id).subscribe(proces => {\r\n      var druiflijst = new Array<Druif[]>();\r\n      this.process = proces;\r\n      this._service.getVatById(proces.vatId).subscribe(vat => { this.process.vat = vat });\r\n      this._service.getPersmethodeById(proces.persmethodeId).subscribe(persmethode => { this.process.persmethode = persmethode });\r\n      this._service.getWijnTypeById(proces.wijnTypeId).subscribe(wijnType => { this.process.wijnType = wijnType });\r\n      this._service.getAllDruifsoortenByVinificatieId(proces.id).subscribe(result => { \r\n        result.records.forEach(druifsoort => {\r\n          druiflijst.push(druifsoort);\r\n        });\r\n        this.process.druif = of(druiflijst);\r\n      });\r\n    });\r\n  }\r\n  getEvents(){\r\n    this._service.getAllEventsByVinificatieId(this.id).subscribe(result => {    \r\n      result.records.forEach(event => {\r\n          this._service.getSoortEventById(event.soortEventId).subscribe(soortEvent => { event.soortEvent = soortEvent }); \r\n          this.eventl.push(event);\r\n      });\r\n      this.events = this.makeObservable(this.eventl);\r\n      this.dataSourceEvent = new MatTableDataSource(this.eventl)\r\n      this.dataSourceEvent.paginator = this.eventsPaginator;\r\n      this.dataSourceEvent.sort = this.eventsSort;\r\n      this.dataSourceEvent.filterPredicate = (event: Event, filter: string) => {\r\n        let valid = false;      \r\n        const transformedFilter = filter.trim().toLowerCase();      \r\n        Object.keys(event).map(key => {\r\n          if (key === 'soortEvent') {\r\n            Object.keys(event[key]).map(naam => {\r\n              if (('' + event[key][naam]).toLowerCase().includes(transformedFilter)) {\r\n                valid = true;\r\n              }\r\n            });\r\n          } else {\r\n            if (('' + event[key]).toLowerCase().includes(transformedFilter)) {\r\n              valid = true;\r\n            }\r\n          }\r\n        });\r\n      \r\n        return valid;\r\n      }\r\n   });\r\n  }\r\n  getHandmatigeMetingen(){\r\n    this._service.getAllHandmatigeMetingenByVinificatieId(this.id).subscribe(result => {    \r\n      result.records.forEach(meting => {\r\n        this._service.getSoortMetingById(meting.soortMetingId).subscribe(soortMeting => { meting.soortMeting = soortMeting }); \r\n        this.metingl.push(meting);\r\n      });\r\n      this.metingen = this.makeObservable(this.metingl);\r\n      this.dataSourceMeting = new MatTableDataSource(this.metingl);\r\n      this.dataSourceMeting.paginator = this.metingPaginator;\r\n      this.dataSourceMeting.sort = this.metingSort;\r\n      this.dataSourceMeting.filterPredicate = (met: Meting, filter: string) => {\r\n        let valid = false;      \r\n        const transformedFilter = filter.trim().toLowerCase();      \r\n        Object.keys(met).map(key => {\r\n          if (key === 'soortMeting') {\r\n            Object.keys(met[key]).map(naam => {\r\n              if (('' + met[key][naam]).toLowerCase().includes(transformedFilter)) {\r\n                valid = true;\r\n              }\r\n            });\r\n          } else {\r\n            if (('' + met[key]).toLowerCase().includes(transformedFilter)) {\r\n              valid = true;\r\n            }\r\n          }\r\n        });     \r\n        return valid;\r\n      }\r\n    });\r\n  }\r\n  getAlarmLog(){\r\n    this._service.getAlarmLogByVinificatieId(this.id).subscribe(result => {    \r\n      result.records.forEach(alarmLog => {\r\n          this.alarml.push(alarmLog);\r\n      });\r\n      this.alarmLog = this.makeObservable(this.alarml);\r\n      this.dataSourceAlarm = new MatTableDataSource(this.alarml)\r\n      this.dataSourceAlarm.paginator = this.alarmPaginator;\r\n      this.dataSourceAlarm.sort = this.alarmSort;\r\n    });\r\n  }\r\n  applyFilterMeting(filterValue: string) {\r\n    this.dataSourceMeting.filter = filterValue;    \r\n  }\r\n  applyFilterEvent(filterValue: string) {\r\n    this.dataSourceEvent.filter = filterValue;    \r\n  }\r\n  applyFilterAlarm(filterValue: string) {\r\n    this.dataSourceAlarm.filter = filterValue;    \r\n  }\r\n  ngOnInit() {\r\n    \r\n  }\r\n  makeObservable(variabele){\r\n    return of(variabele);\r\n  }\r\n\r\n\r\n}\r\n","export default \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9vbi12aW5pZmljYXRpZXMvdG9vbi1ub24tYWN0aWV2ZS12aW5pZmljYXRpZXMvdG9vbi1ub24tYWN0aWV2ZS12aW5pZmljYXRpZXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYiIsImZpbGUiOiJzcmMvYXBwL3Rvb24tdmluaWZpY2F0aWVzL3Rvb24tbm9uLWFjdGlldmUtdmluaWZpY2F0aWVzL3Rvb24tbm9uLWFjdGlldmUtdmluaWZpY2F0aWVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Process } from 'src/app/models/process.model';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ServicesService } from 'src/app/services/services.service';\r\nimport { Router } from '@angular/router';\r\nimport { of, Observable } from 'rxjs';\r\nimport { Druif } from 'src/app/models/druif.model';\r\nimport {MatSort, MatPaginator, MatTableDataSource} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-toon-non-actieve-vinificaties',\r\n  templateUrl: './toon-non-actieve-vinificaties.component.html',\r\n  styleUrls: ['./toon-non-actieve-vinificaties.component.css']\r\n})\r\nexport class ToonNonActieveVinificatiesComponent implements OnInit {\r\n  processenl = new Array<Process[]>();\r\n  processen;\r\n  dataSource;\r\n  displayedColumns: string[] = ['naam', 'vat.nummer', 'wijnType.naam', 'jaargang', 'persHoeveelheid'];\r\n  \r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n\r\n  constructor(private fb: FormBuilder, private _service: ServicesService, private router: Router) {\r\n    this.instantiateLists()\r\n    \r\n  }\r\n\r\n  instantiateLists() {\r\n        this._service.getAllProcessen().subscribe(result => {\r\n          result.records.forEach(proces => {\r\n            proces.druif = new Observable<Druif>();\r\n            if (proces.actief == 0) {\r\n              this._service.getVatById(proces.vatId).subscribe(vat => { proces.vat = vat })\r\n              this._service.getWijnTypeById(proces.wijnTypeId).subscribe(wijnType => { proces.wijnType = wijnType })\r\n              proces.naam = \"Vinificatie \" + proces.id\r\n              this.processenl.push(proces);\r\n            }\r\n          });\r\n          this.processen = this.makeObservable();          \r\n          this.dataSource = new MatTableDataSource(this.processenl)\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sortingDataAccessor = (item, property) => {\r\n            switch(property) {\r\n              case 'vat.nummer': return item.vat.nummer;\r\n              case 'wijnType.naam': return item.wijnType.naam;\r\n              default: return item[property];\r\n            }\r\n          };\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.filterPredicate = (p: Process, filter: string) => {\r\n            let valid = false;      \r\n            const transformedFilter = filter.trim().toLowerCase();      \r\n            Object.keys(p).map(key => {\r\n              if (key === 'vat' || key == 'wijnType') {\r\n                Object.keys(p[key]).map(naam => {\r\n                  if (('' + p[key][naam]).toLowerCase().includes(transformedFilter)) {\r\n                    valid = true;\r\n                  }\r\n                });\r\n              } else {\r\n                if (('' + p[key]).toLowerCase().includes(transformedFilter)) {\r\n                  valid = true;\r\n                }\r\n              }\r\n            });\r\n          \r\n            return valid;\r\n          }\r\n\r\n        });\r\n      }\r\n      applyFilter(filterValue: string) {\r\n        this.dataSource.filter = filterValue;    \r\n      }\r\n      ngOnInit() {\r\n      }\r\n      makeObservable() {\r\n        return of(this.processenl);\r\n      }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}